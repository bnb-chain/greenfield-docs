"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[9580],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(67294),a=n(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(87462),a=n(67294),o=n(86010),s=n(72389),l=n(67392),c=n(7094),i=n(12466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:n,defaultValue:s,values:p,groupId:d,className:m}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=p??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),g=(0,l.l)(h,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===s?s:s??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==b&&!h.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,c.U)(),[x,v]=(0,a.useState)(b),C=[],{blockElementScrollPositionUntilNextRender:N}=(0,i.o5)();if(null!=d){const e=k[d];null!=e&&e!==x&&h.some((t=>t.value===e))&&v(e)}const w=e=>{const t=e.currentTarget,n=C.indexOf(t),r=h[n].value;r!==x&&(N(t),v(r),null!=d&&y(d,String(r)))},E=e=>{let t=null;switch(e.key){case"Enter":w(e);break;case"ArrowRight":{const n=C.indexOf(e.currentTarget)+1;t=C[n]??C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;t=C[n]??C[C.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},m)},h.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>C.push(e),onKeyDown:E,onClick:w},s,{className:(0,o.Z)("tabs__item",u.tabItem,s?.className,{"tabs__item--active":x===t})}),n??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,s.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},94830:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),o=n(65488),s=n(85162);const l={title:"Cross Chain Access Control by CMD",description:"How to use BSC smart contract as a simple howcase of cross chain program-ability of Greenfield..",keywords:["BNB Greenfield","Access control","Permission"],order:1},c="Cross Chain Access Control by CMD",i={unversionedId:"tutorials/core/access-control/quick-start",id:"tutorials/core/access-control/quick-start",title:"Cross Chain Access Control by CMD",description:"How to use BSC smart contract as a simple howcase of cross chain program-ability of Greenfield..",source:"@site/docs/tutorials/core/access-control/quick-start.mdx",sourceDirName:"tutorials/core/access-control",slug:"/tutorials/core/access-control/quick-start",permalink:"/greenfield-docs/docs/tutorials/core/access-control/quick-start",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/tutorials/core/access-control/quick-start.mdx",tags:[],version:"current",frontMatter:{title:"Cross Chain Access Control by CMD",description:"How to use BSC smart contract as a simple howcase of cross chain program-ability of Greenfield..",keywords:["BNB Greenfield","Access control","Permission"],order:1},sidebar:"tutorialsSidebar",previous:{title:"4Everland One-stop Hosting Services",permalink:"/greenfield-docs/docs/tutorials/middleware/web-hosting/4everland-hosting/overview"},next:{title:"Native Access Control",permalink:"/greenfield-docs/docs/tutorials/core/access-control/"}},u={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:3}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cross-chain-access-control-by-cmd"},"Cross Chain Access Control by CMD"),(0,a.kt)("p",null,"In this guide, we will walk you through the process of data permission management using the BSC smart contract as a simple howcase of cross chain program-ability of Greenfield."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Before starting, make sure you have the following tools installed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-cmd"},"gnfd-cmd")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-contracts"},"gnfd-contract"))),(0,a.kt)("p",null,"Please follow the readme of the above two repositories to install the tools and configure the environment."),(0,a.kt)("p",null,"Ensure you get an account that get funds on both BSC and Greenfield network."),(0,a.kt)("h3",{id:"steps"},"Steps"),(0,a.kt)("p",null,"In the following example, Account A(0x0fEd1aDD48b497d619EF50160f9135c6E221D5F0, stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"keyA.json"),") will grant Account B(0x3bD70E10D71C6E882E3C1809d26a310d793646eB, stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"keyB.json"),")\nthe access to his private file through BSC contract."),(0,a.kt)("p",null,"Besides, you can save the password to a file and use ",(0,a.kt)("inlineCode",{parentName:"p"},"-p")," to specify the password file. For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"gnfd-cmd -p password.txt ..."),"."),(0,a.kt)("p",null,"Before starting, please make sure you created related accounts by ",(0,a.kt)("inlineCode",{parentName:"p"},"gnfd-cmd account import")," or  ",(0,a.kt)("inlineCode",{parentName:"p"},"gnfd-cmd account new")," and have the config.toml file in the current directory.\nPlease note that the account should have enough balance before sending transactions to greenfield."),(0,a.kt)("p",null,"The content of the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," is as follows:"),(0,a.kt)(o.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"mainnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rpcAddr = "https://greenfield-chain.bnbchain.org:443"\nchainId = "greenfield_1017-1"\n'))),(0,a.kt)(s.Z,{value:"testnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rpcAddr = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\nchainId = "greenfield_5600-1"\n')))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Prepare environment")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ export AccountA=0x0fEd1aDD48b497d619EF50160f9135c6E221D5F0\n$ export AccountB=0x3bD70E10D71C6E882E3C1809d26a310d793646eB\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Create a temporary file ",(0,a.kt)("inlineCode",{parentName:"li"},"story.txt"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ echo "this is a fun story" > story.txt \n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Create a bucket named ",(0,a.kt)("inlineCode",{parentName:"li"},"funbucket"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ gnfd-cmd -c config.toml -k keyA.json -p password.txt bucket create gnfd://funbucket\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Create a private object named ",(0,a.kt)("inlineCode",{parentName:"li"},"story.txt")," in the bucket ",(0,a.kt)("inlineCode",{parentName:"li"},"funbucket"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ gnfd-cmd -c config.toml -k keyA.json -p password.txt object put --contentType "text/xml" --visibility private ./story.txt  gnfd://funbucket/story.txt\n')),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Create a group named ",(0,a.kt)("inlineCode",{parentName:"li"},"fungroup"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ gnfd-cmd -c config.toml -k keyA.json -p password.txt group create fungroup\ncreate group: fungroup succ, txn hash:17B6AE2C8D30B6D6EEABEE81DB8B37CF735655E9087CB02DC98EFF1DCA9FBE3A, group id: 136 \n")),(0,a.kt)("p",null,"The console will return the id of the group, which is ",(0,a.kt)("inlineCode",{parentName:"p"},"136")," in this case."),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Bind the group ",(0,a.kt)("inlineCode",{parentName:"li"},"fungroup")," to the object ",(0,a.kt)("inlineCode",{parentName:"li"},"story.txt"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"## Example, replace the ${GroupId} with the group id you get in the previous step\n$ export GroupId=136\n$ gnfd-cmd -c config.toml -k keyA.json -p password.txt policy put --groupId ${GroupId} --actions get grn:o::funbucket/story.txt   \n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Mirror the group to BSC network.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"## Example, replace the ${GroupId} with the group id you get in the previous step\n## 97 is the chainId of BSC testnet\n## 56 is the chainId of BSC mainnet\n\n$ export ChainId=56\n$ gnfd-cmd -c config.toml -k keyA.json -p password.txt group mirror --destChainId ${GroupId} --id ${GroupId} \n")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"Try to access the file through AccountB.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"## Example\n$ gnfd-cmd -c config.toml -k keyA.json -p password.txt group head-member --groupOwner ${AccountA}  ${AccountB}  fungroup\nthe user does not exist in the group\n$ gnfd-cmd -c config.toml -k keyB.json -p password.txt object get gnfd://funbucket/story.txt ./story-copy.txt\nrun command error: statusCode 403 : code : AccessDenied  (Message: Access Denied)\n")),(0,a.kt)("p",null,"It turns out that AccountB is not permitted to access the file, which is expected."),(0,a.kt)("ol",{start:8},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-contracts"},"gnfd-contract")," repository and install the dependencies.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Grant the access to Account B through the contract."))),(0,a.kt)(o.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"mainnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'export RPC_MAIN=https://bsc-dataseed.bnbchain.org\n$ forge script foundry-scripts/GroupHub.s.sol:GroupHubScript \\\n--sig "addMember(address operator, uint256 groupId, address member)" \\\n${AccountA} ${GroupId} ${AccountB} \\\n-f $RPC_MAIN \\\n--private-key 148748590a8b83dxxxxxxxxxxxxxxxxx \\\n--legacy \\\n--broadcast\n'))),(0,a.kt)(s.Z,{value:"testnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'export RPC_TEST=https://bsc-testnet-dataseed.bnbchain.org\n$ forge script foundry-scripts/GroupHub.s.sol:GroupHubScript \\\n--sig "addMember(address operator, uint256 groupId, address member)" \\\n${AccountA} ${GroupId} ${AccountB} \\\n-f $RPC_TEST\\\n--private-key 148748590a8b83dxxxxxxxxxxxxxxxxx \\\n--legacy \\\n--broadcast\n')))),(0,a.kt)("ol",{start:10},(0,a.kt)("li",{parentName:"ol"},"Wait 30 seconds, and try to access the file through AccountB again.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"## Example\n$ gnfd-cmd -c config.toml -k keyA.json -p password.txt group head-member --groupOwner ${AccountA}  ${AccountB} fungroup\nthe user is a member of the group\n$ gnfd-cmd -c config.toml -k keyB.json -p password.txt object get gnfd://funbucket/story.txt \ndownload object story.txt successfully, the file path is ./story-copy.txt, content length:20\n")))}f.isMDXComponent=!0}}]);