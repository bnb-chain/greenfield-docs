"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[5726],{77972:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>k,frontMatter:()=>d,metadata:()=>u,toc:()=>g});var n=a(87462),s=(a(67294),a(3905)),r=a(26389),i=a(94891),c=a(75190),m=a(47507),l=a(24310),o=a(63303),p=(a(75035),a(85162));const d={id:"payment-account",title:"PaymentAccount",description:"Queries a payment account by payment account address.",sidebar_label:"PaymentAccount",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"PaymentAccount",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{payment_account:{type:"object",properties:{addr:{type:"string",title:"the address of the payment account"},owner:{type:"string",title:"the owner address of the payment account"},refundable:{type:"boolean",title:"whether the payment account is refundable"}},title:"PaymentAccount defines a payment account"}}}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"addr",in:"path",required:!0,schema:{type:"string"}}],tags:["payment"],description:"Queries a payment account by payment account address.",method:"get",path:"/greenfield/payment/payment_account/{addr}",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"PaymentAccount",description:{content:"Queries a payment account by payment account address.",type:"text/plain"},url:{path:["greenfield","payment","payment_account",":addr"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"addr"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},y=void 0,u={unversionedId:"greenfield-api/payment-account",id:"greenfield-api/payment-account",title:"PaymentAccount",description:"Queries a payment account by payment account address.",source:"@site/docs/greenfield-api/payment-account.api.mdx",sourceDirName:"greenfield-api",slug:"/greenfield-api/payment-account",permalink:"/greenfield-docs/docs/greenfield-api/payment-account",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"payment-account",title:"PaymentAccount",description:"Queries a payment account by payment account address.",sidebar_label:"PaymentAccount",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"PaymentAccount",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{payment_account:{type:"object",properties:{addr:{type:"string",title:"the address of the payment account"},owner:{type:"string",title:"the owner address of the payment account"},refundable:{type:"boolean",title:"whether the payment account is refundable"}},title:"PaymentAccount defines a payment account"}}}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"addr",in:"path",required:!0,schema:{type:"string"}}],tags:["payment"],description:"Queries a payment account by payment account address.",method:"get",path:"/greenfield/payment/payment_account/{addr}",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"PaymentAccount",description:{content:"Queries a payment account by payment account address.",type:"text/plain"},url:{path:["greenfield","payment","payment_account",":addr"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"addr"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},sidebar:"apiReferenceSidebar",previous:{title:"ParamsByTimestamp",permalink:"/greenfield-docs/docs/greenfield-api/params-by-timestamp"},next:{title:"PaymentAccountCount",permalink:"/greenfield-docs/docs/greenfield-api/payment-account-count"}},h={},g=[{value:"PaymentAccount",id:"paymentaccount",level:2}],f={toc:g},b="wrapper";function k(e){let{components:t,...a}=e;return(0,s.kt)(b,(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"paymentaccount"},"PaymentAccount"),(0,s.kt)("p",null,"Queries a payment account by payment account address."),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(c.Z,{className:"paramsItem",param:{name:"addr",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(r.Z,{mdxType:"ApiTabs"},(0,s.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"A successful response.")),(0,s.kt)("div",null,(0,s.kt)(i.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(p.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(o.Z,{mdxType:"SchemaTabs"},(0,s.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"payment_account"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"addr",required:!1,schemaName:"the address of the payment account",qualifierMessage:void 0,schema:{type:"string",title:"the address of the payment account"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"owner",required:!1,schemaName:"the owner address of the payment account",qualifierMessage:void 0,schema:{type:"string",title:"the owner address of the payment account"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"refundable",required:!1,schemaName:"whether the payment account is refundable",qualifierMessage:void 0,schema:{type:"boolean",title:"whether the payment account is refundable"},mdxType:"SchemaItem"}))))))),(0,s.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(m.Z,{responseExample:'{\n  "payment_account": {\n    "addr": "string",\n    "owner": "string",\n    "refundable": true\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(p.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"An unexpected error response.")),(0,s.kt)("div",null,(0,s.kt)(i.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(p.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(o.Z,{mdxType:"SchemaTabs"},(0,s.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"details"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(l.Z,{collapsible:!1,name:"type_url",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaName:"byte",qualifierMessage:void 0,schema:{type:"string",format:"byte"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(m.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);