"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7987],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=l,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(87462),l=(n(67294),n(3905));const a={title:"Native Access Control",description:"How to use Greenfield Go-SDK library to manage your buckets and objects permission.",keywords:["BNB Greenfield","Access control","Permission"],order:2},o="Native Access Control",i={unversionedId:"tutorials/access-control/access-control",id:"tutorials/access-control/access-control",title:"Native Access Control",description:"How to use Greenfield Go-SDK library to manage your buckets and objects permission.",source:"@site/docs/tutorials/access-control/access-control.md",sourceDirName:"tutorials/access-control",slug:"/tutorials/access-control/",permalink:"/greenfield-docs/docs/tutorials/access-control/",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/tutorials/access-control/access-control.md",tags:[],version:"current",frontMatter:{title:"Native Access Control",description:"How to use Greenfield Go-SDK library to manage your buckets and objects permission.",keywords:["BNB Greenfield","Access control","Permission"],order:2},sidebar:"tutorialsSidebar",previous:{title:"One-stop Hosting Services",permalink:"/greenfield-docs/docs/tutorials/dapp/4everland-hosting/overview"},next:{title:"Native Access Control",permalink:"/greenfield-docs/docs/tutorials/access-control/"}},c={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Access Control Features",id:"access-control-features",level:2},{value:"Setup",id:"setup",level:2},{value:"Create a Go Project",id:"create-a-go-project",level:3},{value:"Init",id:"init",level:3},{value:"Add SDK Dependencies",id:"add-sdk-dependencies",level:3},{value:"Install dependensies",id:"install-dependensies",level:3},{value:"Test a simple function",id:"test-a-simple-function",level:3},{value:"Account Setup",id:"account-setup",level:2},{value:"Create Group",id:"create-group",level:2},{value:"Create Policy",id:"create-policy",level:2},{value:"Verify Policy",id:"verify-policy",level:4},{value:"Delete Policy",id:"delete-policy",level:2},{value:"Source Code",id:"source-code",level:3}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"native-access-control"},"Native Access Control"),(0,l.kt)("p",null,"In this tutorial we\u2019ll use the go-SDK library to manage your buckets and objects."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"Before getting started, you should be familiar with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/greenfield-docs/docs/guide/introduction/overview"},"Greenfield basics")),(0,l.kt)("li",{parentName:"ul"},"Greenfield command line ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-cmd#examples"},"examples"))),(0,l.kt)("p",null,"Also, make sure you have the following dependencies installed with the latest version:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Go version above 1.20")),(0,l.kt)("h2",{id:"access-control-features"},"Access Control Features"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Principal")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Effect")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Actions")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Resources")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Duration")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Accounts/Groups"),(0,l.kt)("td",{parentName:"tr",align:null},"Allow/Deny"),(0,l.kt)("td",{parentName:"tr",align:null},"UpdateBucketInfo, DeleteBucket, etc"),(0,l.kt)("td",{parentName:"tr",align:null},"Bucket"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Accounts/Groups"),(0,l.kt)("td",{parentName:"tr",align:null},"Allow/Deny"),(0,l.kt)("td",{parentName:"tr",align:null},"CreateObject,DeleteObject,CopyObject,GetObject,ExecuteObject, etc"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Accounts/Groups"),(0,l.kt)("td",{parentName:"tr",align:null},"Allow/Deny"),(0,l.kt)("td",{parentName:"tr",align:null},"UpdateGroupMember,DeleteGroup, etc"),(0,l.kt)("td",{parentName:"tr",align:null},"Group"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("h3",{id:"create-a-go-project"},"Create a Go Project"),(0,l.kt)("p",null,"Let\u2019s set up a Go project with the necessary dependencies."),(0,l.kt)("h3",{id:"init"},"Init"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ mkdir ~/hellogreenfield\n$ cd ~/hellogreenfield\n$ go mod init hellogreenfield\n")),(0,l.kt)("h3",{id:"add-sdk-dependencies"},"Add SDK Dependencies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ go get github.com/bnb-chain/greenfield-go-sdk\n")),(0,l.kt)("p",null,"Edit go.mod to replace dependencies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"replace (\n    cosmossdk.io/api => github.com/bnb-chain/greenfield-cosmos-sdk/api v0.0.0-20230425074444-eb5869b05fe9\n    cosmossdk.io/math => github.com/bnb-chain/greenfield-cosmos-sdk/math v0.0.0-20230425074444-eb5869b05fe9\n    github.com/cometbft/cometbft => github.com/bnb-chain/greenfield-cometbft v0.0.2\n    github.com/cometbft/cometbft-db => github.com/bnb-chain/greenfield-cometbft-db v0.8.1-alpha.1\n    github.com/cosmos/cosmos-sdk => github.com/bnb-chain/greenfield-cosmos-sdk v0.2.3\n    github.com/cosmos/iavl => github.com/bnb-chain/greenfield-iavl v0.20.1-alpha.1\n    github.com/syndtr/goleveldb => github.com/syndtr/goleveldb v1.0.1-0.20210819022825-2ae1ddf74ef7\n)\n")),(0,l.kt)("h3",{id:"install-dependensies"},"Install dependensies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"go mod tidy\n")),(0,l.kt)("h3",{id:"test-a-simple-function"},"Test a simple function"),(0,l.kt)("p",null,"You can refer to the ",(0,l.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/tutorials/dapp/file-management/overview"},"overview")," to learn about how to create a simple ",(0,l.kt)("inlineCode",{parentName:"p"},"main.go")),(0,l.kt)("p",null,"If everything is set up correctly, your code will be able to connect to the Greenfield node and return the chain data as shown above."),(0,l.kt)("h2",{id:"account-setup"},"Account Setup"),(0,l.kt)("p",null,"You have to prepare two accounts, one is the ",(0,l.kt)("inlineCode",{parentName:"p"},"principal"),", which acts like an admimistrator and a member, which will receive the access to view/update objects."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    account, err := types.NewAccountFromPrivateKey("test", privateKey)\n    if err != nil {\n        log.Fatalf("New account from private key error, %v", err)\n    }\n    cli, err := client.New(chainId, rpcAddr, client.Option{DefaultAccount: account})\n    if err != nil {\n        log.Fatalf("unable to new greenfield client, %v", err)\n    }\n')),(0,l.kt)("h2",{id:"create-group"},"Create Group"),(0,l.kt)("p",null,"The next step is to create a group, whose member will receive access from the principla account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'  // create group\n  groupTx, err := cli.CreateGroup(ctx, groupName, types.CreateGroupOptions{})\n  handleErr(err, "CreateGroup")\n  _, err = cli.WaitForTx(ctx, groupTx)\n  if err != nil {\n    log.Fatalln("txn fail")\n  }\n\n  log.Printf("create group %s successfully \\n", groupName)\n\n  // head group info\n  creator, err := cli.GetDefaultAccount()\n  handleErr(err, "GetDefaultAccount")\n  groupInfo, err := cli.HeadGroup(ctx, groupName, creator.GetAddress().String())\n  handleErr(err, "HeadGroup")\n  log.Println("head group info:", groupInfo.String())\n\n  _, err = sdk.AccAddressFromHexUnsafe(memberAddress)\n  if err != nil {\n    log.Fatalln("the group member is invalid")\n  }\n  // add group member\n  updateTx, err := cli.UpdateGroupMember(ctx, groupName, creator.GetAddress().String(), []string{memberAddress}, []string{},\n    types.UpdateGroupMemberOption{})\n  handleErr(err, "UpdateGroupMember")\n  _, err = cli.WaitForTx(ctx, updateTx)\n  if err != nil {\n    log.Fatalln("txn fail")\n  }\n\n  log.Printf("add group member: %s to group: %s successfully \\n", memberAddress, groupName)\n\n  // head group member\n  memIsExist := cli.HeadGroupMember(ctx, groupName, creator.GetAddress().String(), memberAddress)\n  if !memIsExist {\n    log.Fatalf("head group member %s fail \\n", memberAddress)\n  }\n\n  log.Printf(" head member %s exist \\n", memberAddress)\n')),(0,l.kt)("p",null,"The result should look something similar to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'2023/10/31 09:34:54 create group sample-group successfully\n2023/10/31 09:34:54 head group info: owner:"0x525482AB3922230e4D73079890dC905dCc3D37cd" group_name:"sample-group" id:"720"\n2023/10/31 09:35:01 add group member: 0x843e77D639b6C382e91ef489881963209cB238E5 to group: sample-group successfully\n2023/10/31 09:35:01  head member 0x843e77D639b6C382e91ef489881963209cB238E5 exist\n')),(0,l.kt)("h2",{id:"create-policy"},"Create Policy"),(0,l.kt)("p",null,"Now, you can let the principal grants the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete bucket"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"update bucket"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"delete object"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"update object"),"  access to this group"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// put bucket policy\n    bucketActions := []permTypes.ActionType{\n        permTypes.ACTION_UPDATE_BUCKET_INFO,\n        permTypes.ACTION_DELETE_BUCKET,\n        permTypes.ACTION_DELETE_OBJECT,\n        permTypes.ACTION_GET_OBJECT,\n    }\n    ctx := context.Background()\n    statements := utils.NewStatement(bucketActions, permTypes.EFFECT_ALLOW, nil, types.NewStatementOptions{})\n\n    policyTx, err := cli.PutBucketPolicy(ctx, bucketName, principalStr, []*permTypes.Statement{&statements},\n        types.PutPolicyOption{})\n    handleErr(err, "PutBucketPolicy")\n    _, err = cli.WaitForTx(ctx, policyTx)\n    if err != nil {\n        log.Fatalln("txn fail")\n    }\n    log.Printf("put bucket %s policy sucessfully, principal is: %s.\\n", bucketName, principal)\n')),(0,l.kt)("p",null,"After you run the code, the result should look something similar to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'2023/10/31 10:46:55 put bucket sdkexamplebucket policy sucessfully, principal is:\n2023/10/31 10:46:55 bucket: sdkexamplebucket policy info:id:"2358" principal:<type:PRINCIPAL_TYPE_GNFD_ACCOUNT value:"0x843e77D639b6C382e91ef489881963209cB238E5" > resource_type:RESOURCE_TYPE_BUCKET resource_id:"429" statements:<effect:EFFECT_ALLOW actions:ACTION_UPDATE_BUCKET_INFO actions:ACTION_DELETE_BUCKET actions:ACTION_DELETE_OBJECT actions:ACTION_GET_OBJECT >\n')),(0,l.kt)("p",null,"You can also inspect using the block scanner, e.g. ",(0,l.kt)("a",{parentName:"p",href:"https://greenfieldscan.com/"},"https://greenfieldscan.com"),"."),(0,l.kt)("h4",{id:"verify-policy"},"Verify Policy"),(0,l.kt)("p",null,"Here is an example to verify the policy metadata onchain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// get bucket policy\n  policyInfo, err := cli.GetBucketPolicy(ctx, bucketName, memberAddress)\n  handleErr(err, "GetBucketPolicy")\n  log.Printf("bucket: %s policy info:%s\\n", bucketName, policyInfo.String())\n\n  // verify permission\n  effect, err := cli.IsBucketPermissionAllowed(ctx, memberAddress, bucketName, permTypes.ACTION_DELETE_BUCKET)\n  handleErr(err, "IsBucketPermissionAllowed")\n\n  if effect != permTypes.EFFECT_ALLOW {\n    log.Fatalln("permission not allowed to:", principalStr)\n  }\n')),(0,l.kt)("p",null,"If the policy is recorded as expected, you will not see any error."),(0,l.kt)("h2",{id:"delete-policy"},"Delete Policy"),(0,l.kt)("p",null,"Here is an example to delete your bucket policy."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"principalStr")," can be generated by ",(0,l.kt)("inlineCode",{parentName:"p"},"NewPrincipalWithAccount")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"NewPrincipalWithGroupId")," method."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    // delete bucket policy\n    policyTx, err = cli.DeleteBucketPolicy(ctx, bucketName, principalStr, types.DeletePolicyOption{})\n    handleErr(err, "DeleteBucketPolicy")\n    _, err = cli.WaitForTx(ctx, policyTx)\n    if err != nil {\n        log.Fatalln("txn fail")\n    }\n')),(0,l.kt)("h3",{id:"source-code"},"Source Code"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-go-sdk/blob/master/examples/permission.go"},"Go-SDK")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-js-sdk/blob/main/examples/nodejs/policy.js"},"JS-SDK"))))}d.isMDXComponent=!0}}]);