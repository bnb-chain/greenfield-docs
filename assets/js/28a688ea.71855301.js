"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[9845],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(k,l(l({ref:t},o),{},{components:a})):n.createElement(k,l({ref:t},o))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[u]="string"==typeof e?e:r,l[1]=p;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},83305:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={title:"Update User Account Key"},l="UpdateKey",p={unversionedId:"api/storage-provider-rest/update_key",id:"api/storage-provider-rest/update_key",title:"Update User Account Key",description:"RESTful API Description",source:"@site/docs/api/storage-provider-rest/update_key.md",sourceDirName:"api/storage-provider-rest",slug:"/api/storage-provider-rest/update_key",permalink:"/greenfield-docs/docs/api/storage-provider-rest/update_key",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/storage-provider-rest/update_key.md",tags:[],version:"current",frontMatter:{title:"Update User Account Key"},sidebar:"apiReferenceSidebar",previous:{title:"List Objects By Bucket",permalink:"/greenfield-docs/docs/api/storage-provider-rest/list_objects_by_bucket"},next:{title:"List User Account Keys",permalink:"/greenfield-docs/docs/api/storage-provider-rest/list_key"}},d={},s=[{value:"RESTful API Description",id:"restful-api-description",level:2},{value:"HTTP Request Format",id:"http-request-format",level:2},{value:"HTTP Request Header",id:"http-request-header",level:2},{value:"Authorization Header",id:"authorization-header",level:3},{value:"Auth type",id:"auth-type",level:4},{value:"SignedMsg",id:"signedmsg",level:4},{value:"Signature",id:"signature",level:4},{value:"Example",id:"example",level:4},{value:"HTTP Request Parameter",id:"http-request-parameter",level:2},{value:"Path Parameter",id:"path-parameter",level:3},{value:"Query Parameter",id:"query-parameter",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Request Syntax",id:"request-syntax",level:2},{value:"Response Header",id:"response-header",level:3},{value:"HTTP Response Parameter",id:"http-response-parameter",level:2},{value:"Response Body",id:"response-body",level:3},{value:"Response Syntax",id:"response-syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Update key for a new combination of user address and app domain",id:"example-1-update-key-for-a-new-combination-of-user-address-and-app-domain",level:3},{value:"request",id:"request",level:4},{value:"response",id:"response",level:4}],o={toc:s},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"updatekey"},"UpdateKey"),(0,r.kt)("h2",{id:"restful-api-description"},"RESTful API Description"),(0,r.kt)("p",null,"This API is used to update the current user account key record."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/storage-provider/modules/authenticator"},"off-chain authentication specification")),(0,r.kt)("h2",{id:"http-request-format"},"HTTP Request Format"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Host"),(0,r.kt)("td",{parentName:"tr",align:null},"gnfd-testnet-sp*.bnbchain.org")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Path"),(0,r.kt)("td",{parentName:"tr",align:null},"/auth/update_key_v2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Method"),(0,r.kt)("td",{parentName:"tr",align:null},"POST")))),(0,r.kt)("h2",{id:"http-request-header"},"HTTP Request Header"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Origin"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"the origin value , which should be the same as app's domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"X-Gnfd-App-Domain"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"app domain for the account key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"X-Gnfd-App-Reg-Public-Key"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"the account key needed to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"X-Gnfd-Expiry-Timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"It defines the Expiry-Date is the ISO 8601 datetime string (e.g. 2021-09-30T16:25:24Z), used to register the EDDSA public key. This expire date should be future timestamp but within ",(0,r.kt)("strong",{parentName:"td"},"7 days")," since now.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Authorization"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"see ",(0,r.kt)("a",{parentName:"td",href:"#authorization-header"},"Authorization Header"))))),(0,r.kt)("h3",{id:"authorization-header"},"Authorization Header"),(0,r.kt)("p",null,"The Authorization Header could be composed of 3 parts."),(0,r.kt)("h4",{id:"auth-type"},"Auth type"),(0,r.kt)("p",null,"Update_key API expects ",(0,r.kt)("inlineCode",{parentName:"p"},"GNFD1-ETH-PERSONAL_SIGN")," as ",(0,r.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/api/storage-provider-rest/#authentication-type"},"authentication type")," in HTTP Authorization header."),(0,r.kt)("h4",{id:"signedmsg"},"SignedMsg"),(0,r.kt)("p",null,"Application needs to popup wallet to let users sign for a text, which includes user's ",(0,r.kt)("inlineCode",{parentName:"p"},"EdDSA public key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Expiration Time")," for SPs and other related information, so that users can understand what they sign for."),(0,r.kt)("p",null,"The text message to be signed by users can be formalized by following template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var app_domain = "https://greenfield.dapp.cc"\nvar account_address = "0x3d0a49B091ABF8940AD742c0139416cEB30CdEe0"\nvar public_key = "4db642fe6bc2ceda2e002feb8d78dfbcb2879d8fe28e84e02b7a940bc0440083"\nvar issue_time = "2023-04-28T16:25:24Z"\nvar expiry_time = "2023-04-28T16:25:24Z"\nvar sp_addr1 = "0x70d1983A9A76C8d5d80c4cC13A801dc570890819"   // SP operator address\nvar sp_name1 = "SP_001" // SP name, can be found in https://greenfieldscan.com\n\nvar sp_addr2 = "0x20Bb76D063a6d2B18B6DaBb2aC985234a4B9eDe0"   // SP operator address\nvar sp_name2 = "SP_002" // SP name, can be found in https://greenfieldscan.com\n\nvar unSignedMsgTemplate = \n`${app_domain} wants you to sign in with your BNB Greenfield account:\n${account_address}\n\nRegister your identity public key ${public_key}\n\nURI: ${app_domain}\nVersion: 1\nChain ID: 5600\nIssued At: ${issue_time}\nExpiration Time: ${expiry_time}\n\n// You can append single or multiple SP information under Resources section\n\n')),(0,r.kt)("h4",{id:"signature"},"Signature"),(0,r.kt)("p",null,"The Signature is calculated by wallet after users sign with above ",(0,r.kt)("inlineCode",{parentName:"p"},"SignedMsg")," in their wallet.\ne.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"0x8663c48cfecb611d64540d3b653f51ef226f3f674e2c390ea9ca45746b22a4f839a15576b5b4cc1051183ae9b69ac54160dc3241bbe99c695a52fe25eaf2f8c01b")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,"Below is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-HTTP"},"Authorization: GNFD1-ETH-PERSONAL_SIGN,SignedMsg=https://greenfield.dapp.cc wants you to sign in with your BNB Greenfield account:\\n0x3d0a49B091ABF8940AD742c0139416cEB30CdEe0\\n\\nRegister your identity public key 4db642fe6bc2ceda2e002feb8d78dfbcb2879d8fe28e84e02b7a940bc0440083\\n\\nURI: https://greenfield.dapp.cc\\nVersion: 1\\nChain ID: 5600\\nIssued At: 2023-04-24T16:25:24Z\\nExpiration Time: 2023-04-28T16:25:24Z\n")),(0,r.kt)("h2",{id:"http-request-parameter"},"HTTP Request Parameter"),(0,r.kt)("h3",{id:"path-parameter"},"Path Parameter"),(0,r.kt)("p",null,"The request does not have a path parameter."),(0,r.kt)("h3",{id:"query-parameter"},"Query Parameter"),(0,r.kt)("p",null,"The request does not have a query parameter."),(0,r.kt)("h3",{id:"request-body"},"Request Body"),(0,r.kt)("p",null,"The request does not have a request body."),(0,r.kt)("h2",{id:"request-syntax"},"Request Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-HTTP"},"POST /auth/update_key HTTP/1.1\nHost: gnfd-testnet-sp*.bnbchain.org\nOrigin: Origin\nx-Gnfd-User-Address: UserAddress\nX-Gnfd-App-Domain: AppDomain\nX-Gnfd-App-Reg-Public-Key: PublicKey\nX-Gnfd-Expiry-Timestamp: ExpiryDate\nAuthorization: AuthorizationString\n")),(0,r.kt)("h3",{id:"response-header"},"Response Header"),(0,r.kt)("p",null,"The response returns the following HTTP headers."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"value is ",(0,r.kt)("inlineCode",{parentName:"td"},"application/xml"))))),(0,r.kt)("h2",{id:"http-response-parameter"},"HTTP Response Parameter"),(0,r.kt)("h3",{id:"response-body"},"Response Body"),(0,r.kt)("p",null,"If the request is successful, the service sends back an HTTP 200 response."),(0,r.kt)("p",null,"The following data is returned in XML format by the service."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"indicate if the user public key is successfully updated in SP")))),(0,r.kt)("h2",{id:"response-syntax"},"Response Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-HTTP"},"HTTP/1.1 200\nContent-Type: application/xml\n\nXML Body\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"example-1-update-key-for-a-new-combination-of-user-address-and-app-domain"},"Example 1: Update key for a new combination of user address and app domain"),(0,r.kt)("h4",{id:"request"},"request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-HTTP"},"POST /auth/update_key HTTP/1.1\nHost: gf-stagenet-sp-e.bk.nodereal.cc\nOrigin: https://greenfield.dapp.cc\nX-Gnfd-App-Domain: https://greenfield.dapp.cc\nx-Gnfd-User-Address: 0x3d0a49B091ABF8940AD742c0139416cEB30CdEe0\nX-Gnfd-App-Reg-Public-Key: 4db642fe6bc2ceda2e002feb8d78dfbcb2879d8fe28e84e02b7a940bc0440083\nX-Gnfd-Expiry-Timestamp: 2023-04-28T16:25:24Z\nAuthorization: GNFD1-ETH-PERSONAL_SIGN,SignedMsg=https://greenfield.dapp.cc wants you to sign in with your BNB Greenfield account:\\n0x3d0a49B091ABF8940AD742c0139416cEB30CdEe0\\n\\nRegister your identity public key 4db642fe6bc2ceda2e002feb8d78dfbcb2879d8fe28e84e02b7a940bc0440083\\n\\nURI: https://greenfield.dapp.cc\\nVersion: 1\\nChain ID: 5600\\nIssued At: 2023-04-24T16:25:24Z\\nExpiration Time: 2023-04-28T16:25:24Z\n")),(0,r.kt)("h4",{id:"response"},"response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<UpdateUserPublicKeyV2Resp>\n    <result>true</result>\n</UpdateUserPublicKeyV2Resp>\n")))}c.isMDXComponent=!0}}]);