"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[9856],{58367:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>v,frontMatter:()=>c,metadata:()=>f,toc:()=>g});var a=i(87462),s=(i(67294),i(3905)),r=i(26389),o=i(94891),n=i(75190),d=i(47507),l=i(24310),m=i(63303),p=(i(75035),i(85162));const c={id:"validator-distribution-info",title:"ValidatorDistributionInfo",description:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",sidebar_label:"ValidatorDistributionInfo",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"ValidatorDistributionInfo",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{operator_address:{type:"string",description:"operator_address defines the validator operator address."},self_bond_rewards:{type:"array",items:{type:"object",properties:{denom:{type:"string"},amount:{type:"string"}},description:"DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."},description:"self_bond_rewards defines the self delegations rewards."},commission:{type:"array",items:{type:"object",properties:{denom:{type:"string"},amount:{type:"string"}},description:"DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."},description:"commission defines the commission the validator received."}},description:"QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"validator_address",description:"validator_address defines the validator address to query for.",in:"path",required:!0,schema:{type:"string"}}],tags:["distribution"],description:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",method:"get",path:"/cosmos/distribution/v1beta1/validators/{validator_address}",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"ValidatorDistributionInfo",description:{content:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",type:"text/plain"},url:{path:["cosmos","distribution","v1beta1","validators",":validator_address"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) validator_address defines the validator address to query for.",type:"text/plain"},type:"any",value:"",key:"validator_address"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},u=void 0,f={unversionedId:"greenfield-api/validator-distribution-info",id:"greenfield-api/validator-distribution-info",title:"ValidatorDistributionInfo",description:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",source:"@site/docs/greenfield-api/validator-distribution-info.api.mdx",sourceDirName:"greenfield-api",slug:"/greenfield-api/validator-distribution-info",permalink:"/greenfield-docs/docs/greenfield-api/validator-distribution-info",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"validator-distribution-info",title:"ValidatorDistributionInfo",description:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",sidebar_label:"ValidatorDistributionInfo",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"ValidatorDistributionInfo",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{operator_address:{type:"string",description:"operator_address defines the validator operator address."},self_bond_rewards:{type:"array",items:{type:"object",properties:{denom:{type:"string"},amount:{type:"string"}},description:"DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."},description:"self_bond_rewards defines the self delegations rewards."},commission:{type:"array",items:{type:"object",properties:{denom:{type:"string"},amount:{type:"string"}},description:"DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."},description:"commission defines the commission the validator received."}},description:"QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"validator_address",description:"validator_address defines the validator address to query for.",in:"path",required:!0,schema:{type:"string"}}],tags:["distribution"],description:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",method:"get",path:"/cosmos/distribution/v1beta1/validators/{validator_address}",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"ValidatorDistributionInfo",description:{content:"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",type:"text/plain"},url:{path:["cosmos","distribution","v1beta1","validators",":validator_address"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) validator_address defines the validator address to query for.",type:"text/plain"},type:"any",value:"",key:"validator_address"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},sidebar:"apiReferenceSidebar",previous:{title:"DistributionParams",permalink:"/greenfield-docs/docs/greenfield-api/distribution-params"},next:{title:"ValidatorCommission",permalink:"/greenfield-docs/docs/greenfield-api/validator-commission"}},y={},g=[{value:"ValidatorDistributionInfo",id:"validatordistributioninfo",level:2}],h={toc:g},b="wrapper";function v(e){let{components:t,...i}=e;return(0,s.kt)(b,(0,a.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"validatordistributioninfo"},"ValidatorDistributionInfo"),(0,s.kt)("p",null,"ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator"),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(n.Z,{className:"paramsItem",param:{name:"validator_address",description:"validator_address defines the validator address to query for.",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(r.Z,{mdxType:"ApiTabs"},(0,s.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"A successful response.")),(0,s.kt)("div",null,(0,s.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(p.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(m.Z,{mdxType:"SchemaTabs"},(0,s.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"operator_address",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"operator_address defines the validator operator address."},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"self_bond_rewards"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"self_bond_rewards defines the self delegations rewards.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(l.Z,{collapsible:!1,name:"denom",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"amount",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"commission"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"commission defines the commission the validator received.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(l.Z,{collapsible:!1,name:"denom",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"amount",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "operator_address": "string",\n  "self_bond_rewards": [\n    {\n      "denom": "string",\n      "amount": "string"\n    }\n  ],\n  "commission": [\n    {\n      "denom": "string",\n      "amount": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(p.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"An unexpected error response.")),(0,s.kt)("div",null,(0,s.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(p.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(m.Z,{mdxType:"SchemaTabs"},(0,s.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(l.Z,{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"details"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(l.Z,{collapsible:!1,name:"type_url",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaName:"byte",qualifierMessage:void 0,schema:{type:"string",format:"byte"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}v.isMDXComponent=!0}}]);