"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"How to Build a DeSoc dApp On BNB Greenfield & opBNB",description:"In this tutorial, we'll provide a step-by-step guide on how to develop a **DeSoc** dApp on BNBChain.",keywords:["BNB Greenfield","DeSoc","creator economy"],order:1},l="Introduction",i={unversionedId:"tutorials/app/desoc/desoc-tutorial",id:"tutorials/app/desoc/desoc-tutorial",title:"How to Build a DeSoc dApp On BNB Greenfield & opBNB",description:"In this tutorial, we'll provide a step-by-step guide on how to develop a **DeSoc** dApp on BNBChain.",source:"@site/docs/tutorials/app/desoc/desoc-tutorial.md",sourceDirName:"tutorials/app/desoc",slug:"/tutorials/app/desoc/desoc-tutorial",permalink:"/greenfield-docs/docs/tutorials/app/desoc/desoc-tutorial",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/tutorials/app/desoc/desoc-tutorial.md",tags:[],version:"current",frontMatter:{title:"How to Build a DeSoc dApp On BNB Greenfield & opBNB",description:"In this tutorial, we'll provide a step-by-step guide on how to develop a **DeSoc** dApp on BNBChain.",keywords:["BNB Greenfield","DeSoc","creator economy"],order:1},sidebar:"tutorialsSidebar",previous:{title:"Greenfield for Hugging Face",permalink:"/greenfield-docs/docs/tutorials/app/ai/hugging-face-intro"},next:{title:"Codebase Overview",permalink:"/greenfield-docs/docs/tutorials/app/data-marketplace/overview"}},s={},c=[{value:"What you will learn",id:"what-you-will-learn",level:2},{value:"Solution architecture",id:"solution-architecture",level:3},{value:"Build a Fully On-chain DeSoc App",id:"build-a-fully-on-chain-desoc-app",level:2},{value:"Content Creators User Journey",id:"content-creators-user-journey",level:3},{value:"Readers User Journey",id:"readers-user-journey",level:3},{value:"Tech Implementations",id:"tech-implementations",level:2},{value:"Smart contract development",id:"smart-contract-development",level:3},{value:"Preparation",id:"preparation",level:4},{value:"Download and install smart contract",id:"download-and-install-smart-contract",level:4},{value:"Import the desired contracts",id:"import-the-desired-contracts",level:4},{value:"Override functions",id:"override-functions",level:4},{value:"Define the main functions",id:"define-the-main-functions",level:4},{value:"Smart Contract Deployment",id:"smart-contract-deployment",level:3},{value:"Frontend Deployment",id:"frontend-deployment",level:3},{value:"Demo In Action",id:"demo-in-action",level:2},{value:"Create Novel",id:"create-novel",level:3},{value:"Pay to view chapters",id:"pay-to-view-chapters",level:3},{value:"Closing Thoughts",id:"closing-thoughts",level:2},{value:"Codebase",id:"codebase",level:2},{value:"Resources",id:"resources",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Decentralized social networks or ",(0,a.kt)("strong",{parentName:"p"},"DeSoc"),", unlike their centralized counterparts, function on blockchain-based platforms and empower users by enabling them to exchange information and create and distribute content to audiences. "),(0,a.kt)("h2",{id:"what-you-will-learn"},"What you will learn"),(0,a.kt)("p",null,"In this tutorial, we'll provide a step-by-step guide on how to develop a ",(0,a.kt)("strong",{parentName:"p"},"DeSoc")," dApp on BNBChain. The demo shows how writers can upload chapters of their novels, interact with their readership, and monetize their work in a secure and transparent environment."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(2108).Z,width:"1305",height:"594"})),(0,a.kt)("h3",{id:"solution-architecture"},"Solution architecture"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Decentralized Publishing"),": Authors can directly upload their novels without the need for traditional publishing intermediaries, ensuring full control over their content and copyrights."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Customized Access"),": The access control feature of ",(0,a.kt)("strong",{parentName:"li"},"BNB Greenfield")," ensures full control over their content and copyrights. Authors can design different reader groups for different content. This feature encourages readership growth."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Tokenized Chapters"),": By leveraging the smart contract on opBNB, membership to reader groups is tokenized and listed for sale. Readers can purchase access to exclusive content using cryptocurrency.")),(0,a.kt)("h2",{id:"build-a-fully-on-chain-desoc-app"},"Build a Fully On-chain DeSoc App"),(0,a.kt)("h3",{id:"content-creators-user-journey"},"Content Creators User Journey"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Writers sign up, create a profile, and upload their work immediately. Each creator will create a separate bucket for storing "),(0,a.kt)("li",{parentName:"ol"},"The platform provides tools for formatting, membership management, and tokenization. "),(0,a.kt)("li",{parentName:"ol"},"Authors can track their sales, interact with readers, and withdraw their earnings directly to their cryptocurrency wallets.")),(0,a.kt)("h3",{id:"readers-user-journey"},"Readers User Journey"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Discover novels/writers:")," Utilize platform tools to find and follow writers based on interests or trending topics."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Subscription"),": Pay tokens to purchase membership NFT, enabling access to exclusive content and interactions."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Access Exclusive Content"),": View unique insights and posts.")),(0,a.kt)("h2",{id:"tech-implementations"},"Tech Implementations"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(91197).Z,width:"560",height:"723"})),(0,a.kt)("p",null,"The DeSoc dApp is composed of three main parts. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Smart Contracts deployed on opBN"),"B: NovelChain employs smart contracts to manage membership, ensuring authors receive their earnings instantly and transparently with each sale. Readers can purchase membership access to view chapters of a novel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Frontend pages"),": Authors can directly upload their novels without the need for traditional publishing intermediaries. Readers can view the exclusive content after becoming a member. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content Storage"),": Greenfield is a decentralized storage solution. Writers have full control over their content and copyrights.")),(0,a.kt)("h3",{id:"smart-contract-development"},"Smart contract development"),(0,a.kt)("h4",{id:"preparation"},"Preparation"),(0,a.kt)("p",null,"Environment Setup"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"git")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"yarn")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-install"},"Foundry"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Greenfield ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-cmd"},"CMD"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Testnet account with tBNB"))),(0,a.kt)("h4",{id:"download-and-install-smart-contract"},"Download and install smart contract"),(0,a.kt)("p",null,"To start a new project with Foundry, use ",(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-init.html"},"forge init"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ forge init hello_foundry\n\n")),(0,a.kt)("p",null,"This creates a new directory hello_foundry from the default template. This also initializes a new git repository."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\n// install dependencies\n\nforge install bnb-chain/greenfield-contracts@v1.2.0 --no-commit\n\nforge install bnb-chain/greenfield-contracts-sdk@v1.1.0 --no-commit\n\nforge install OpenZeppelin/openzeppelin-contracts --no-commit\n\nforge install OpenZeppelin/openzeppelin-contracts-upgradeable --no-commit\n\n")),(0,a.kt)("h4",{id:"import-the-desired-contracts"},"Import the desired contracts"),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"novel.sol"),", add the following imports"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'\npragma solidity ^0.8.0;\n\nimport "@bnb-chain/greenfield-contracts/contracts/interface/IERC721NonTransferable.sol";\n\nimport "@bnb-chain/greenfield-contracts/contracts/interface/IERC1155NonTransferable.sol";\n\nimport "@bnb-chain/greenfield-contracts/contracts/interface/IGnfdAccessControl.sol";\n\nimport "@bnb-chain/greenfield-contracts-sdk/GroupApp.sol";\n\nimport "@openzeppelin/contracts/access/AccessControl.sol";\n\nimport "@openzeppelin/contracts/security/ReentrancyGuard.sol";\n\nimport "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol";\n\nimport "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol";\n\n')),(0,a.kt)("h4",{id:"override-functions"},"Override functions"),(0,a.kt)("p",null,"Define and override the ",(0,a.kt)("inlineCode",{parentName:"p"},"greenfieldCall"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"retryPackage")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"skipPackage")," functions if your dApp needs callback. You can route calls with the help of the internal method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'  function greenfieldCall(\n\n   uint32 status,\n\n   uint8 resourceType,\n\n   uint8 operationType,\n\n   uint256 resourceId,\n\n   bytes calldata callbackData\n\n  ) external override(GroupApp) {\n\n   require(msg.sender == _GROUP_HUB, "Novel: invalid caller");\n\n   if (resourceType == RESOURCE_GROUP) {\n\n     _groupGreenfieldCall(status, operationType, resourceId, callbackData);\n\n   } else {\n\n     revert("Novel: invalid resource type");\n\n   }\n\n  }\n')),(0,a.kt)("h4",{id:"define-the-main-functions"},"Define the main functions"),(0,a.kt)("p",null,"Next you need to define the main functional parts of the app. You can send cross-chain request to system contracts with the help of internal functions like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function listChapter(uint256 novelGroupId, uint256 chapterGroupId, uint256 price) public onlyNovelExist(novelGroupId) onlyGroupOwner(chapterGroupId) {\n\n   // the owner need to approve the Novel contract to update the group\n\n   require(IGnfdAccessControl(_GROUP_HUB).hasRole(ROLE_UPDATE, msg.sender, address(this)), "Novel: no grant");\n\n   require(prices[chapterGroupId] == 0, "Novel: already listed");\n\n   require(price > 0, "Novel: invalid price");\n\n   novels[novelGroupId].chapterGroupIds.push(chapterGroupId);\n\n   prices[chapterGroupId] = price;\n\n   emit List(msg.sender, novelGroupId, chapterGroupId, price);\n\n  }\n')),(0,a.kt)("p",null,"Define other view functions, internal functions and access control system according to your own needs."),(0,a.kt)("h3",{id:"smart-contract-deployment"},"Smart Contract Deployment"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Setup Environment Variables")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\ncp .env.example .env\n\n")),(0,a.kt)("p",null,"Setup your own ",(0,a.kt)("inlineCode",{parentName:"p"},"OP_PRIVATE_KEY")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"OWNER_PRIVATE_KEY")," ."),(0,a.kt)("p",null,"The OP_PRIVATE_KEY is the account that's responsible for deploying the contract and the OWNER_PRIVATE_KEY is the contract's owner. For convenience, you can use a same account."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\ngit clone --recurse-submodules https://github.com/bnb-chain/novel-contract.git && cd novel-contract\n\nyarn\n\nforge install\n\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Deploy")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\nforge script ./script/1-deploy.s.sol --rpc-url ${RPC_TESTNET} --legacy --broadcast --private-key ${OP_PRIVATE_KEY}\n")),(0,a.kt)("h3",{id:"frontend-deployment"},"Frontend Deployment"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Download repository from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-js-sdk/tree/main/examples/browser-file-management"},"here"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"install dependencies"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pnpm install\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Build packages:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pnpm build\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Run the demo application")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm run dev\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://lh7-us.googleusercontent.com/onudLILq90vHP7DcMVhNZfXufTaL6Bfwz7KoI5RlCEtiZk_McbbxUR-ri-zE4x0D74Cef6xB0UxPdD0Ixdf11-E73DrUNP2L_9buntE1A1U8ufViPRpLNvy3XO37FS5oYcH2MoNmf8-jCY7dU5Z34NM",alt:"img"})),(0,a.kt)("h2",{id:"demo-in-action"},"Demo In Action"),(0,a.kt)("h3",{id:"create-novel"},"Create Novel"),(0,a.kt)("p",null,"Once you have deployed the smart contract, writers can execute the following commands to create contents."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create and Mirror Group")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"// create a group and get the id from the output\n\n./build/gnfd-cmd --config ${CONFIG_PATH} group create gnfd://${GROUP_NAME}\n\n// grant permission to the group\n\n./build/gnfd-cmd --config ${CONFIG_PATH} policy put --groupId ${GROUP_ID} --actions get grn:o::${YOUR_BUCKET_NAME}/${YOUR_OBJECT_NAME}\n\n// mirror the group to opBNB testnet\n\n./build/gnfd-cmd --config ${CONFIG_PATH} group mirror --id ${GROUP_ID} --destChainId 5611\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Allow writers to create novels where subscribers can receive messages without direct interaction")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'// use the same account that create bucket and object on greenfield\n\ncast send ${proxyNovel}\n\n"createNovel(uint256,string)" <group id of the novel> "Novel Name"\n\n--rpc-url ${RPC_TESTNET}\n\n--from ${ACCOUNT_AUTHOR}\n\n--private-key ${PK_AUTHOR}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List contents on opBNB")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"use the same account that create bucket and object on greenfield")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"list a chapter with price 1BNB"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'cast send ${proxyNovel}\n\n"listChapter(uint256,uint256,uint256)" <group id of novel> <group id of chapter> 1000000000000000000\n\n--rpc-url ${RPC_TESTNET}\n\n--from ${ACCOUNT_AUTHOR}\n\n--private-key ${PK_AUTHOR}\n')),(0,a.kt)("h3",{id:"pay-to-view-chapters"},"Pay to view chapters"),(0,a.kt)("p",null,"Readers can execute the following commands: call the smart contract to become a member of a group by paying tokens."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Readers pay to view chapters of a book")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'// subscribe from the buyer account\n\ncast send ${proxyNovel}\n\n"buy(address,uint8)()" ${ACCOUNT_AUTHOR} <group id of chapter>\n\n--value ${PRICE}+${RELAYER_FEE}\n\n--rpc-url ${RPC_TESTNET}\n\n--from ${ACCOUNT_BUYER}\n\n--private-key ${PK_BUYER}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use Callback function to make sure the cross-chain tx is successful. Example on testnet can be found ",(0,a.kt)("a",{parentName:"li",href:"https://testnet.bscscan.com/address/0x843e77D639b6C382e91ef489881963209cB238E5#nfttransfers"},"here"),". You can see that ERC1155 NFT is minted and transferred to subscriber. ")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://lh7-us.googleusercontent.com/vKxvQE-vJWOIoKHMu7eaZtOO0OgJMQrpBVRP2ujt9Y4vYC3KNgQwe_ncggbvMb0ofyD9MfWgBZ6115Lq-qJfYVe7nOD-yNElAnGhWTa_mITedYw5gQdXpSrO8d8VW7le4yapxSaPweIOhv7tpN4H-MI",alt:"img"})),(0,a.kt)("p",null,"You can find the full implementation ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/novel-contract"},"here"),"."),(0,a.kt)("h2",{id:"closing-thoughts"},"Closing Thoughts"),(0,a.kt)("p",null,"In this tutorial, we discussed the numerous advantages of DeSoc applications on BNBChain and provided a step-by-step guide on how to develop a dApp similar to Pareon on opBNB and Greenfield. By leveraging the opBNB's high-speed and low-cost transaction processing capabilities, developers can create robust and scalable DeSoc applications that can handle a large number of users and transactions. "),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.bnbchain.org/en/contact?ref=bnbchain.ghost.io"},"Join us")," on this transformative journey, and contribute to the evolution of Web3."),(0,a.kt)("h2",{id:"codebase"},"Codebase"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Frontend ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-js-sdk/tree/main/examples/browser-file-management"},"https://github.com/bnb-chain/greenfield-js-sdk/tree/main/examples/browser-file-management")," "),(0,a.kt)("li",{parentName:"ol"},"Smart Contract ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/novel-contract"},"https://github.com/bnb-chain/novel-contract")," ")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"BSC Faucet: ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://testnet.bnbchain.org/faucet-smart/"},"https://testnet.bnbchain.org/faucet-smart/")," ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Greenfield:")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Documents: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.bnbchain.org/greenfield-docs/docs/guide/home"},"https://docs.bnbchain.org/greenfield-docs/docs/guide/home")," ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Bridge: ",(0,a.kt)("a",{parentName:"p",href:"https://greenfield.bnbchain.org/en/bridge?type=transfer-in"},"https://greenfield.bnbchain.org/en/bridge?type=transfer-in")," ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Explorer : ",(0,a.kt)("a",{parentName:"p",href:"https://greenfieldscan.com"},"https://greenfieldscan.com")," ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"UI dApp: ",(0,a.kt)("a",{parentName:"p",href:"https://dcellar.io/"},"https://dcellar.io/"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Cross-chain Permission Control"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-contracts-sdk"},"https://github.com/bnb-chain/greenfield-contracts-sdk")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-contracts"},"https://github.com/bnb-chain/greenfield-contracts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.bnbchain.org/greenfield-docs/docs/tutorials/access-control/cross-chain/"},"https://docs.bnbchain.org/greenfield-docs/docs/tutorials/access-control/cross-chain/"))))))}d.isMDXComponent=!0},2108:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/desoc-arch-218db130424d5b7c66394316f24e4363.png"},91197:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/desoc-components-23a36a60bb85f992268d9e594a3266ac.png"}}]);