"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[2829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||s;return n?a.createElement(b,o(o({ref:t},d),{},{components:n})):a.createElement(b,o({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(87462),r=n(67294),s=n(86010),o=n(72389),i=n(67392),l=n(7094),c=n(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:n,defaultValue:o,values:u,groupId:p,className:m}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,i.l)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:y}=(0,l.U)(),[v,N]=(0,r.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:j}=(0,c.o5)();if(null!=p){const e=h[p];null!=e&&e!==v&&g.some((t=>t.value===e))&&N(e)}const x=e=>{const t=e.currentTarget,n=T.indexOf(t),a=g[n].value;a!==v&&(j(t),N(a),null!=p&&y(p,String(a)))},w=e=>{let t=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",d.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},m)},g.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>T.push(e),onKeyDown:w,onClick:x},o,{className:(0,s.Z)("tabs__item",d.tabItem,o?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,r.cloneElement)(b.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function p(e){const t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},64331:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>b,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),s=n(65488),o=n(85162);const i={title:"Javascript SDK Example"},l="Quickstart",c={unversionedId:"sdks/sdk-js",id:"sdks/sdk-js",title:"Javascript SDK Example",description:"The BNB Greenfield JavaScript SDK is designed for front-end environments and provides an API for interacting with BNB Greenfield decentralized storage. It offers a range of operations, including retrieving permission details, gas fees, etc. The SDK also includes a crypto component for signing transactions and sending them to BNB Greenfield.",source:"@site/docs/sdks/sdk-js.mdx",sourceDirName:"sdks",slug:"/sdks/sdk-js",permalink:"/greenfield-docs/docs/sdks/sdk-js",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/sdks/sdk-js.mdx",tags:[],version:"current",frontMatter:{title:"Javascript SDK Example"},sidebar:"apiReferenceSidebar",previous:{title:"Go SDK Example",permalink:"/greenfield-docs/docs/sdks/sdk-go"}},d={},u=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Create client",id:"create-client",level:3},{value:"Transactions",id:"transactions",level:3},{value:"1. Transaction construction",id:"1-transaction-construction",level:4},{value:"2. Simulate Transactions",id:"2-simulate-transactions",level:4},{value:"3. Broadcast Transactions",id:"3-broadcast-transactions",level:4},{value:"NOTICE: Signature mode for <code>Broadcast</code>",id:"notice-signature-mode-for-broadcast",level:4},{value:"4. Multi-Transactions",id:"4-multi-transactions",level:4},{value:"Querying Metadata",id:"querying-metadata",level:3},{value:"Storage Provider Client",id:"storage-provider-client",level:3},{value:"List Storage Providers",id:"list-storage-providers",level:4},{value:"Search for objects",id:"search-for-objects",level:4},{value:"Examples",id:"examples",level:2},{value:"Prepare",id:"prepare",level:3},{value:"Choose Storage Provider",id:"choose-storage-provider",level:4},{value:"ECDSA / OffChainAuth",id:"ecdsa--offchainauth",level:4},{value:"1. Create Bucket",id:"1-create-bucket",level:3},{value:"1.1 construct create bucket tx",id:"11-construct-create-bucket-tx",level:4},{value:"1.2 simulate create bucket tx",id:"12-simulate-create-bucket-tx",level:4},{value:"1.3 broadcast create bucket tx",id:"13-broadcast-create-bucket-tx",level:4},{value:"2. Create Object",id:"2-create-object",level:3},{value:"2.1 construct create object tx",id:"21-construct-create-object-tx",level:4},{value:"2.2 simulate create object tx",id:"22-simulate-create-object-tx",level:4},{value:"2.3 broadcast create object tx",id:"23-broadcast-create-object-tx",level:4},{value:"2.4 upload object",id:"24-upload-object",level:4},{value:"3. Download Object",id:"3-download-object",level:3},{value:"Code Repository",id:"code-repository",level:2},{value:"API Documentation",id:"api-documentation",level:2}],p={toc:u},m="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"The BNB Greenfield JavaScript SDK is designed for front-end environments and provides an API for interacting with BNB Greenfield decentralized storage. It offers a range of operations, including retrieving permission details, gas fees, etc. The SDK also includes a crypto component for signing transactions and sending them to BNB Greenfield."),(0,r.kt)("p",null,"However, it should be noted that this SDK does not include methods for interacting with BNB Smart Chain (BSC). For a comprehensive understanding of available operations, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-js-sdk"},"API Reference"),"."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @bnb-chain/greenfield-js-sdk\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To utilize the SDK functionality, users need to instantiate a client object from the SDK. This client object serves as the interface to interact with BNB Greenfield and perform the desired operations."),(0,r.kt)("h3",{id:"create-client"},"Create client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { Client } from '@bnb-chain/greenfield-js-sdk'\n\nexport const client = Client.create('https://gnfd-testnet-fullnode-tendermint-ap.bnbchain.org', '5600');\n")),(0,r.kt)("p",null,"The SDK offers two types of operations - sending transactions to BNB Greenfield, allowing users to modify the state of the blockchain; the second type enables users to send queries and retrieve metadata information about objects stored on the blockchain. "),(0,r.kt)("p",null,"The SDK consists of two parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chain: ",(0,r.kt)("a",{parentName:"li",href:"https://docs.bnbchain.org/greenfield-docs/docs/api/blockchain-rest"},"https://docs.bnbchain.org/greenfield-docs/docs/api/blockchain-rest")),(0,r.kt)("li",{parentName:"ul"},"Storage Provider: ",(0,r.kt)("a",{parentName:"li",href:"https://docs.bnbchain.org/greenfield-docs/docs/api/storage-provider-rest"},"https://docs.bnbchain.org/greenfield-docs/docs/api/storage-provider-rest"))),(0,r.kt)("h3",{id:"transactions"},"Transactions"),(0,r.kt)("h4",{id:"1-transaction-construction"},"1. Transaction construction"),(0,r.kt)("p",null,"The SDK offers functionality for transferring tokens between accounts, providing a straightforward and convenient way to perform token transfers. With the SDK, users can easily initiate and execute token transfers within the desired accounts, streamlining the process of managing and exchanging tokens."),(0,r.kt)("p",null,"The SDK includes functionality for simulating and broadcasting transactions, allowing users to retrieve essential information related to gas fees, and sending the transaction over network."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { simulate, broadcast } = await client.account.transfer({\n  fromAddress: address,\n  toAddress: transferInfo.to,\n  amount: [\n    {\n      denom: 'BNB',\n      amount: ethers.utils.parseEther(transferInfo.amount).toString(),\n    },\n  ],\n});\n")),(0,r.kt)("h4",{id:"2-simulate-transactions"},"2. Simulate Transactions"),(0,r.kt)("p",null,"This function returns the estimated gas limit, gas price, and overall gas fee."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// simulate tx\nconst simulateInfo = await simulate({\n   denom: 'BNB',\n});\n\n")),(0,r.kt)("p",null,"Example output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "gasLimit":2400,\n   "gasPrice":"5000000000",\n   "gasFee":"0.000012"\n}\n')),(0,r.kt)("h4",{id:"3-broadcast-transactions"},"3. Broadcast Transactions"),(0,r.kt)("p",null,"Use the API endpoint to send the transaction data to the blockchain network."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// broadcast tx\n// This includes details such as gas limit, gas price, and overall gas fee.\nconst broadcastRes = await broadcast({\n  denom: 'BNB',\n  gasLimit: Number(simulateInfo.gasLimit),\n  gasPrice: simulateInfo.gasPrice,\n  payer: address,\n  granter: '',\n});\n")),(0,r.kt)("h4",{id:"notice-signature-mode-for-broadcast"},"NOTICE: Signature mode for ",(0,r.kt)("inlineCode",{parentName:"h4"},"Broadcast")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"broadcast")," use ",(0,r.kt)("inlineCode",{parentName:"p"},"window.ethereum")," as signature provider by default."),(0,r.kt)("p",null,"If you want to use others, you can set ",(0,r.kt)("inlineCode",{parentName:"p"},"signTypedDataCallback"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// TrustWallet\nconst broadcastRes = await broadcast({\n  //...\n  signTypedDataCallback: async (addr: string, message: string) => {\n    return await window.trustwallet.request({\n      method: 'eth_signTypedData_v4',\n      params: [addr, message],\n    });\n  }\n});\n")),(0,r.kt)("p",null,"If you broadcast in Nodejs, you can broadcast a tx by ",(0,r.kt)("inlineCode",{parentName:"p"},"privateKey"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const broadcastRes = await broadcast({\n  //...\n  privateKey: '0x.......'\n});\n")),(0,r.kt)("p",null,"Example output after broadcast your transaction:"),(0,r.kt)("details",null,(0,r.kt)("summary",null," transaction result "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "code":0,\n   "height":449276,\n   "txIndex":0,\n   "events":[\n      {\n         "type":"coin_spent",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"coin_received",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"transfer",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"message",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"message",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"coin_spent",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"coin_received",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"transfer",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"message",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"greenfield.payment.EventStreamRecordUpdate",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"greenfield.payment.EventStreamRecordUpdate",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"greenfield.payment.EventStreamRecordUpdate",\n         "attributes":[\n            "Array"\n         ]\n      },\n      {\n         "type":"greenfield.storage.EventCreateBucket",\n         "attributes":[\n            "Array"\n         ]\n      }\n   ],\n   "rawLog":"..",\n   "transactionHash":"D304242145ED9B44F05431C3798B3273CF2A907E6AE1CA892759985C900D6E72",\n   "gasUsed":2400,\n   "gasWanted":2400\n}\n'))),(0,r.kt)("h4",{id:"4-multi-transactions"},"4. Multi-Transactions"),(0,r.kt)("p",null,"The SDK also provides support for bundling multiple operations into a single transaction, thereby reducing gas fees. This feature allows users to optimize their transactions by combining several operations together, minimizing the overall gas cost associated with executing them individually. By leveraging this functionality, users can effectively manage their gas fees and enhance the efficiency of their transactions within the blockchain network using the SDK."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const createGroupTx = await client.group.createGroup(params);\nconst mirrorGroupTx = await client.crosschain.mirrorGroup({\n   groupName,\n   id,\n   operator,\n});\n\nconst principal = {\n  type: PermissionTypes.PrincipalType.PRINCIPAL_TYPE_GNFD_GROUP,\n  value: GRNToString(newGroupGRN(address as string, groupName)),\n};\n\nconst statement: PermissionTypes.Statement = {\n  effect: PermissionTypes.Effect.EFFECT_ALLOW,\n  actions: [PermissionTypes.ActionType.ACTION_GET_OBJECT],\n  resources: [\n    GRNToString(\n      type === 'Data'\n        ? newObjectGRN(bucketName, name)\n        : newObjectGRN(bucketName, '*'),\n    ),\n  ],\n};\n\nconst policyTx = await client.object.putObjectPolicy(bucketName, name, {\n  operator: address,\n  statements: [statement],\n  principal,\n});\n\nconst { simulate, broadcast } = await multiTx([\n  createGroupTx,\n  mirrorGroupTx,\n  policyTx,\n]);\n")),(0,r.kt)("h3",{id:"querying-metadata"},"Querying Metadata"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Account info")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\nconst { client, selectSp, generateString } = require('./client');\nconst { ACCOUNT_ADDRESS, ACCOUNT_PRIVATEKEY } = require('./env');\nconst Long = require('long');\n\n(async () => {\n  // get account info\n  const addrInfo = await client.account.getAccount(ACCOUNT_ADDRESS);\n\n  console.log('address is', addrInfo);\n\n\n})\n")),(0,r.kt)("p",null,"Example output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "address":"0x525482AB3922230e4D73079890dC905dCc3D37cd",\n   "pubKey":{\n      "typeUrl":"/cosmos.crypto.eth.ethsecp256k1.PubKey",\n      "value":"CiECKuOEfCNFxnfiinnIIoe0OSf3VEOAU5jxwmZscfpOaW4="\n   },\n   "accountNumber":"5012",\n   "sequence":"9"\n}\n')),(0,r.kt)("h3",{id:"storage-provider-client"},"Storage Provider Client"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://docs.bnbchain.org/greenfield-docs/docs/api/storgae-provider-rest"},"https://docs.bnbchain.org/greenfield-docs/docs/api/storgae-provider-rest"))),(0,r.kt)("p",null,"In addition, the SDK provides support for querying the list of storage providers available and offers generic search capabilities for exploring metadata attributes."),(0,r.kt)("p",null,"SDK support two ",(0,r.kt)("a",{parentName:"p",href:"https://docs.bnbchain.org/greenfield-docs/docs/api/storage-provider-rest#authentication-type"},"authentication type"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ECDSA: It is usually used on Node.js (Because it need to use a private key)"),(0,r.kt)("li",{parentName:"ul"},"EDDSA: It is usually used in a browser")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getBucketReadQuota")," as example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// generate seed:\nconst allSps = await getAllSps();\nconst offchainAuthRes = await client.offchainauth.genOffChainAuthKeyPairAndUpload(\n  {\n    sps: allSps,\n    chainId: GREEN_CHAIN_ID,\n    expirationMs: 5 * 24 * 60 * 60 * 1000,\n    domain: window.location.origin,\n    address: 'your address',\n  },\n  provider: 'wallet provider',\n);\n\n// request sp api\nconst bucketQuota = await client.bucket.getBucketReadQuota(\n  {\n    bucketName,\n  },\n  {\n    type: 'EDDSA',\n    seed: offchainAuthRes.seedString,\n    domain: window.location.origin,\n    address: 'your address',\n  },\n);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Node.js:\n// request sp api\nconst bucketQuota = await client.bucket.getBucketReadQuota(\n  {\n    bucketName,\n  },\n  {\n    type: 'ECDSA',\n    privateKey: '0x....'\n  },\n);\n")),(0,r.kt)("p",null,"Others functions:"),(0,r.kt)("h4",{id:"list-storage-providers"},"List Storage Providers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export const getSps = async () => {\n  const sps = await client.sp.getStorageProviders();\n  const finalSps = (sps ?? []).filter(\n    (v: any) => v?.description?.moniker !== 'QATest',\n  );\n\n  return finalSps;\n};\n")),(0,r.kt)("h4",{id:"search-for-objects"},"Search for objects"),(0,r.kt)("p",null,"It's important to note that even if an object is set to private, its metadata remains publicly accessible. This metadata includes information such as file size, file type, and file name. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export const searchKey = async (key: string) => {\n  try {\n    return await client.sp.listGroup(key, `${DAPP_NAME}_`, {\n      sourceType: 'SOURCE_TYPE_ORIGIN',\n      limit: 1000,\n      offset: 0,\n    });\n  } catch (e) {\n    return [];\n}\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Now let's make a complete example, includes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"create bucket"),(0,r.kt)("li",{parentName:"ol"},"create object and upload it to the bucket"),(0,r.kt)("li",{parentName:"ol"},"download the object")),(0,r.kt)("h3",{id:"prepare"},"Prepare"),(0,r.kt)("p",null,"To begin, create an account and deposit tokens into it on Greenfield. Follow the instructions provided in ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/getting-started/token-transfer"},"Token Transfer"),". Please be aware that if your account does not have any BNB, the transaction will not be executed."),(0,r.kt)("h4",{id:"choose-storage-provider"},"Choose Storage Provider"),(0,r.kt)("p",null,"Storing data is one of the most important features of Greenfield. All storage-related apis require the ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/storage-provider/introduction/overview"},"storage provider")," to be chose."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="select sp"',title:'"select','sp"':!0},"const spList = await client.sp.getStorageProviders();\nconst sp = {\n   operatorAddress: spList[0].operatorAddress,\n   endpoint: spList[0].endpoint,\n};\n")),(0,r.kt)("h4",{id:"ecdsa--offchainauth"},"ECDSA / OffChainAuth"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/storage-provider-rest#for-auth-type-gnfd1-ecdsa"},"ECDSA")," require users to use private key for authentication."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/guide/storage-provider/modules/authenticator"},"OffChainAuth")," is used to authenticate yourself to the provider."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Code can't access user's private key on browser, so we use ",(0,r.kt)("inlineCode",{parentName:"p"},"OffChainAuth")," on browser and use ",(0,r.kt)("inlineCode",{parentName:"p"},"ECDSA")," on Nodejs.")),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Browser"',title:'"Browser"'},"// MetaMask\nconst provider = window.ethereum;\n\nconst offchainAuthRes = await client.offchainauth.genOffChainAuthKeyPairAndUpload({\n   sps: {\n      address: sp.operatorAddress,\n      endpoint: sp.endpoint,\n   },\n   chainId: '5600',\n   expirationMs: 5 * 24 * 60 * 60 * 1000,\n   domain: window.location.origin,\n   // your wallet account\n   address: '0x..',\n}, provider);\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Nodejs don't need offchainauth.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Nodejs"',title:'"Nodejs"'},"// your account\nconst ACCOUNT_ADDRESS = '0x....'\n\n// your account's private key\nconst ACCOUNT_PRIVATEKEY = '0x....'\n")))),(0,r.kt)("h3",{id:"1-create-bucket"},"1. Create Bucket"),(0,r.kt)("h4",{id:"11-construct-create-bucket-tx"},"1.1 construct create bucket tx"),(0,r.kt)("p",null,"Bucket can be private or public, you can customize it with options (",(0,r.kt)("inlineCode",{parentName:"p"},"visibility"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VISIBILITY_TYPE_PUBLIC_READ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VISIBILITY_TYPE_PRIVATE"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="construct create bucket tx"',title:'"construct',create:!0,bucket:!0,'tx"':!0},"const createBucketTx = await client.bucket.createBucket(\n  {\n    bucketName: 'bucket_name',\n    creator: address,\n    visibility: VisibilityType.VISIBILITY_TYPE_PUBLIC_READ,\n    chargedReadQuota: Long.fromString('0'),\n    primarySpAddress: sp.operatorAddress,\n    paymentAddress: address,\n  }\n);\n")),(0,r.kt)("h4",{id:"12-simulate-create-bucket-tx"},"1.2 simulate create bucket tx"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="simulate create bucket tx"',title:'"simulate',create:!0,bucket:!0,'tx"':!0},"const createBucketTxSimulateInfo = await createBucketTx.simulate({\n   denom: 'BNB',\n});\n")),(0,r.kt)("h4",{id:"13-broadcast-create-bucket-tx"},"1.3 broadcast create bucket tx"),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="broadcast create bucket tx"',title:'"broadcast',create:!0,bucket:!0,'tx"':!0},"const res = await createBucketTx.broadcast({\n   denom: 'BNB',\n   gasLimit: Number(simulateInfo?.gasLimit),\n   gasPrice: simulateInfo?.gasPrice || '5000000000',\n   payer: address,\n   granter: '',\n});\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="broadcast create bucket tx"',title:'"broadcast',create:!0,bucket:!0,'tx"':!0},"const res = await createBucketTx.broadcast({\n   denom: 'BNB',\n   gasLimit: Number(createBucketTxSimulateInfo?.gasLimit),\n   gasPrice: createBucketTxSimulateInfo?.gasPrice || '5000000000',\n   payer: ACCOUNT_ADDRESS,\n   granter: '',\n   // highlight-start\n   privateKey: ACCOUNT_PRIVATEKEY,\n   // highlight-end\n});\n")))),(0,r.kt)("h3",{id:"2-create-object"},"2. Create Object"),(0,r.kt)("h4",{id:"21-construct-create-object-tx"},"2.1 construct create object tx"),(0,r.kt)("p",null,"Like the ",(0,r.kt)("a",{parentName:"p",href:"#11-construct-create-bucket-tx"},"visibility of bucket"),", object also has a visibility:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VISIBILITY_TYPE_PUBLIC_READ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VISIBILITY_TYPE_PRIVATE"))),(0,r.kt)("p",null,"Getting file's checksum need ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-js-sdk/tree/main/packages/reed-solomon"},"reed-solomon"),":"),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { ReedSolomon } from '@bnb-chain/reed-solomon';\n\nconst rs = new ReedSolomon();\n\n// file is File type\nconst fileBytes = await file.arrayBuffer();\nconst expectCheckSums = rs.encode(new Uint8Array(fileBytes));\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('node:fs');\nconst { NodeAdapterReedSolomon } = require('@bnb-chain/reed-solomon/node.adapter');\n\nconst filePath = './CHANGELOG.md';\nconst fileBuffer = fs.readFileSync(filePath);\nconst rs = new NodeAdapterReedSolomon();\nconst expectCheckSums = await rs.encodeInWorker(__filename, Uint8Array.from(fileBuffer));\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const createObjectTx = await client.object.createObject(\n  {\n    bucketName: 'bucket_name',\n    objectName: 'object_name',\n    // user's account address\n    creator: '0x...',\n    visibility: VisibilityType.VISIBILITY_TYPE_PRIVATE,\n    contentType: 'json',\n    redundancyType: RedundancyType.REDUNDANCY_EC_TYPE,\n    payloadSize: Long.fromInt(13311),\n    expectChecksums: expectCheckSums.map((x) => bytesFromBase64(x)),\n  }\n);\n")),(0,r.kt)("h4",{id:"22-simulate-create-object-tx"},"2.2 simulate create object tx"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const createObjectTxSimulateInfo = await createObjectTx.simulate({\n   denom: 'BNB',\n});\n")),(0,r.kt)("h4",{id:"23-broadcast-create-object-tx"},"2.3 broadcast create object tx"),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const res = await createObjectTx.broadcast({\n   denom: 'BNB',\n   gasLimit: Number(simulateInfo?.gasLimit),\n   gasPrice: simulateInfo?.gasPrice || '5000000000',\n   payer: address,\n   granter: '',\n});\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const createObjectTxRes = await createObjectTx.broadcast({\n   denom: 'BNB',\n   gasLimit: Number(createObjectTxSimulateInfo?.gasLimit),\n   gasPrice: createObjectTxSimulateInfo?.gasPrice || '5000000000',\n   payer: ACCOUNT_ADDRESS,\n   granter: '',\n   // highlight-start\n   privateKey: ACCOUNT_PRIVATEKEY,\n   // highlight-end\n});\n")))),(0,r.kt)("h4",{id:"24-upload-object"},"2.4 upload object"),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const uploadRes = await client.object.uploadObject(\n   {\n      bucketName: createObjectInfo.bucketName,\n      objectName: createObjectInfo.objectName,\n      body: file,\n      txnHash: txHash,\n   },\n   // highlight-start\n   {\n      type: 'EDDSA',\n      domain: window.location.origin,\n      seed: offChainData.seedString,\n      address,\n   },\n   // highlight-end\n);\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const uploadRes = await client.object.uploadObject(\n   {\n      bucketName: bucketName,\n      objectName: objectName,\n      body: createFile(filePath),\n      txnHash: createObjectTxRes.transactionHash,\n   },\n   // highlight-start\n   {\n      type: 'ECDSA',\n      privateKey: ACCOUNT_PRIVATEKEY,\n   }\n   // highlight-end\n);\n\n// convert buffer to file\nfunction createFile(path) {\n  const stats = fs.statSync(path);\n  const fileSize = stats.size;\n\n  return {\n    name: path,\n    type: '',\n    size: fileSize,\n    content: fs.readFileSync(path),\n  }\n}\n")))),(0,r.kt)("h3",{id:"3-download-object"},"3. Download Object"),(0,r.kt)(s.Z,{groupId:"example",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const res = await client.object.downloadFile(\n   {\n      bucketName: 'bucket_name',\n      objectName: 'object_name',\n   },\n   // highlight-start\n   {\n      type: 'EDDSA',\n      address,\n      domain: window.location.origin,\n      seed: offChainData.seedString,\n   },\n   // highlight-end\n);\n"))),(0,r.kt)(o.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const res = await client.object.getObject(\n   {\n      bucketName: 'bucket_name',\n      objectName: 'object_name',\n   },\n   // highlight-start\n   {\n      type: 'ECDSA',\n      privateKey: ACCOUNT_PRIVATEKEY,\n   }\n   // highlight-end\n);\n\n// res.body is Blob\nconsole.log('res', res)\nconst buffer = Buffer.from([res.body]);\nfs.writeFileSync('your_output_file', buffer)\n")))),(0,r.kt)("h2",{id:"code-repository"},"Code Repository"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-js-sdk"},"Official JS implementation SDK"))),(0,r.kt)("h2",{id:"api-documentation"},"API Documentation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.bnbchain.org/greenfield-js-sdk/"},"Greenfield JS SDK Docs"))))}b.isMDXComponent=!0}}]);