"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[8811],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var n=t(67294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=n.createContext({}),d=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},p=function(e){var a=d(e.components);return n.createElement(i.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),m=l,g=c["".concat(i,".").concat(m)]||c[m]||u[m]||o;return t?n.createElement(g,r(r({ref:a},p),{},{components:t})):n.createElement(g,r({ref:a},p))}));function g(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[c]="string"==typeof e?e:l,r[1]=s;for(var d=2;d<o;d++)r[d]=t[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>r});var n=t(67294),l=t(86010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:a,hidden:t,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(o.tabItem,r),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>u});var n=t(87462),l=t(67294),o=t(86010),r=t(72389),s=t(67392),i=t(7094),d=t(12466);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:t,defaultValue:r,values:c,groupId:u,className:m}=e,g=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??g.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),h=(0,s.l)(k,((e,a)=>e.value===a.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===r?r:r??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!k.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:f}=(0,i.U)(),[y,_]=(0,l.useState)(b),N=[],{blockElementScrollPositionUntilNextRender:x}=(0,d.o5)();if(null!=u){const e=v[u];null!=e&&e!==y&&k.some((a=>a.value===e))&&_(e)}const D=e=>{const a=e.currentTarget,t=N.indexOf(a),n=k[t].value;n!==y&&(x(a),_(n),null!=u&&f(u,String(n)))},E=e=>{let a=null;switch(e.key){case"Enter":D(e);break;case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;a=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(e.currentTarget)-1;a=N[t]??N[N.length-1];break}}a?.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",p.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},m)},k.map((e=>{let{value:a,label:t,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===a?0:-1,"aria-selected":y===a,key:a,ref:e=>N.push(e),onKeyDown:E,onClick:D},r,{className:(0,o.Z)("tabs__item",p.tabItem,r?.className,{"tabs__item--active":y===a})}),t??a)}))),a?(0,l.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==y})))))}function u(e){const a=(0,r.Z)();return l.createElement(c,(0,n.Z)({key:String(a)},e))}},20858:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var n=t(87462),l=(t(67294),t(3905)),o=t(65488),r=t(85162);const s={title:"Validator Staking",Order:8},i="Validator Staking",d={unversionedId:"api/blockchain-cli/validator-staking",id:"api/blockchain-cli/validator-staking",title:"Validator Staking",description:"Abstract",source:"@site/docs/api/blockchain-cli/validator-staking.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/validator-staking",permalink:"/greenfield-docs/docs/api/blockchain-cli/validator-staking",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/validator-staking.md",tags:[],version:"current",frontMatter:{title:"Validator Staking",Order:8},sidebar:"apiReferenceSidebar",previous:{title:"Payment",permalink:"/greenfield-docs/docs/api/blockchain-cli/payment"},next:{title:"Challenge",permalink:"/greenfield-docs/docs/api/blockchain-cli/challenge"}},p={},c=[{value:"Abstract",id:"abstract",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Create a New Validator",id:"create-a-new-validator",level:3},{value:"Grant delegate authorization",id:"grant-delegate-authorization",level:4},{value:"Submit create-validator proposal",id:"submit-create-validator-proposal",level:4},{value:"Create a new validator in one step",id:"create-a-new-validator-in-one-step",level:4},{value:"Vote on the proposal",id:"vote-on-the-proposal",level:4},{value:"Tally and execute automatically",id:"tally-and-execute-automatically",level:4},{value:"Impeach a Malicious Validator",id:"impeach-a-malicious-validator",level:3},{value:"Submit an impeach-validator proposal",id:"submit-an-impeach-validator-proposal",level:4},{value:"Vote on the proposal",id:"vote-on-the-proposal-1",level:4},{value:"Tally and execute automatically",id:"tally-and-execute-automatically-1",level:4},{value:"Detailed CLI",id:"detailed-cli",level:2},{value:"Query",id:"query",level:3},{value:"delegation",id:"delegation",level:4},{value:"historical-info",id:"historical-info",level:4},{value:"params",id:"params",level:4},{value:"pool",id:"pool",level:4},{value:"unbonding-delegation",id:"unbonding-delegation",level:4},{value:"validator",id:"validator",level:4},{value:"validators",id:"validators",level:4},{value:"Transactions",id:"transactions",level:3},{value:"delegate",id:"delegate",level:4},{value:"edit-validator",id:"edit-validator",level:4},{value:"unbond",id:"unbond",level:4}],u={toc:c},m="wrapper";function g(e){let{components:a,...t}=e;return(0,l.kt)(m,(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"validator-staking"},"Validator Staking"),(0,l.kt)("h2",{id:"abstract"},"Abstract"),(0,l.kt)("p",null,"The staking module is responsible for handling validator and delegator related operations."),(0,l.kt)("h2",{id:"quick-start"},"Quick Start"),(0,l.kt)("h3",{id:"create-a-new-validator"},"Create a New Validator"),(0,l.kt)("p",null,"To become a validator, a ",(0,l.kt)("inlineCode",{parentName:"p"},"create-validator")," proposal should be submitted and adopted by the majority of the current\nvalidators."),(0,l.kt)("h4",{id:"grant-delegate-authorization"},"Grant delegate authorization"),(0,l.kt)("p",null,"The self delegator account of the new validator should grant the delegate authorization to the gov module account, make\nsure the spend limit should be no less than the value for creating validator, and the allowed validator should be the\noperator address of the new validator. The gov module account of Greenfield\nis ",(0,l.kt)("inlineCode",{parentName:"p"},"0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx authz grant ${grantee} delegate --sepend-limit ${coins} --allowed-validators ${valAddr} --from ${key} --node ${node}\n")),(0,l.kt)("p",null,"${key} is the name of the self delegator account's local key."),(0,l.kt)("p",null,"${grantee} specifies the address of the grantee, which should be ",(0,l.kt)("inlineCode",{parentName:"p"},"0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2"),"."),(0,l.kt)("p",null,"${coins} defines the coins you want to grant, for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"10000000000000000000000BNB"),"."),(0,l.kt)("p",null,"${valAddr} defines the address of the validator you want to create."),(0,l.kt)("p",null,"${node} is the rpc address of a Greenfield node."),(0,l.kt)(o.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://greenfield-chain.bnbchain.org:443"\n'))),(0,l.kt)(r.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx authz grant 0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2 delegate --sepend-limit 10000000000000000000000BNB --allowed-validators myvaladdr --from mykey\n")),(0,l.kt)("h4",{id:"submit-create-validator-proposal"},"Submit create-validator proposal"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"gov submit-proposal")," command to submit a create-validator proposal."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov submit-proposal create-validator.json --from ${key} --node ${node}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("p",null,"The content of create-validator.json:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "messages": [\n    {\n      "@type": "/cosmos.staking.v1beta1.MsgCreateValidator",\n      "description": {\n        "moniker": "validator",\n        "identity": "",\n        "website": "",\n        "security_contact": "",\n        "details": ""\n      },\n      "commission": {\n        "rate": "0.070000000000000000",\n        "max_rate": "1.000000000000000000",\n        "max_change_rate": "0.010000000000000000"\n      },\n      "min_self_delegation": "1000000000000000000000",\n      "delegator_address": "0x6D967dc83b625603c963713eABd5B43A281E595e",\n      "validator_address": "0x6D967dc83b625603c963713eABd5B43A281E595e",\n      "pubkey": {\n        "@type": "/cosmos.crypto.ed25519.PubKey",\n        "key": "POIf1u/xC0RoHhD5c5qWszVLnjuhSVlgyrhoIriSjf0="\n      },\n      "value": {\n        "denom": "BNB",\n        "amount": "10000000000000000000000"\n      },\n      "from": "0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2",\n      "relayer_address": "0xBefD69cb71403DF7BA20310FB216e1Fb7bAC6321",\n      "challenger_address": "0xc6C51ae1d83257B833Fe64413cf3d30F2F624ae7",\n      "bls_key": "ac1e598ae0ccbeeaafa31bc6faefa85c2ae3138699cac79169cd718f1a38445201454ec092a86f200e08a15266bdc600",\n      "bls_proof": "88faf4af49c73ff6647465e8791ad861e5da080157beadaab415a0b09bb431514810e30500ac0806fc7eefbf39b545e6161ef40f9e68a196382ed0b0f1bdde6507a94b03347b12f620feed99990d50c3c3e01b906b553c5cce79fb37cf09e4c6"\n    }\n  ],\n  "metadata": "4pIMOgIGx1vZGU=",\n  "deposit": "1000000000000000000BNB"\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov submit-proposal create-validator.json --from mykey --gas auto\n")),(0,l.kt)("h4",{id:"create-a-new-validator-in-one-step"},"Create a new validator in one step"),(0,l.kt)("p",null,"You can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"create-validator")," command to create a new validator in one step, this command will include the above two steps."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx staking create-validator create-validator.json --from ${self-delegator-key} --node ${node}\n")),(0,l.kt)("h4",{id:"vote-on-the-proposal"},"Vote on the proposal"),(0,l.kt)("p",null,"The current validators can use ",(0,l.kt)("inlineCode",{parentName:"p"},"gov vote")," command to vote on the proposal."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov vote ${proposal_id} --from ${key} --node ${node}\n")),(0,l.kt)("p",null,"${proposal_id} specifies the id of the proposal submitted."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov vote 1 yes --from mykey\n")),(0,l.kt)("h4",{id:"tally-and-execute-automatically"},"Tally and execute automatically"),(0,l.kt)("p",null,"Once the proposal's voting period is over, the votes for the create-validator proposal would be tallied. If the proposal\nis passed, the create-validator message in the proposal would be executed automatically."),(0,l.kt)("h3",{id:"impeach-a-malicious-validator"},"Impeach a Malicious Validator"),(0,l.kt)("p",null,"If a validator doesn't behave well, anyone can submit an impeach-validator proposal, if the proposal adopted by the\nmajority of the current validators, the malicious validator would be jailed forever."),(0,l.kt)("h4",{id:"submit-an-impeach-validator-proposal"},"Submit an impeach-validator proposal"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"gov submit-proposal")," command to submit an impeach-validator proposal."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov submit-proposal impeach-validator.json --from ${key} --node ${node}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("p",null,"The content of impeach-validator.json:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "messages": [\n    {\n      "@type": "/cosmos.slashing.v1beta1.MsgImpeach",\n      "from": "0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2",\n      "validator_address": "0x6D967dc83b625603c963713eABd5B43A281E595e"\n    }\n  ],\n  "metadata": "4pIMOgIGx1vZGU=",\n  "deposit": "1000000000000000000BNB"\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov submit-proposal impeach-validator.json --from mykey --gas auto\n")),(0,l.kt)("h4",{id:"vote-on-the-proposal-1"},"Vote on the proposal"),(0,l.kt)("p",null,"The current validators can use ",(0,l.kt)("inlineCode",{parentName:"p"},"gov vote")," command to vote on the proposal."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov vote ${proposal_id} --from ${key} --node ${node}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx gov vote 2 yes --from mykey\n")),(0,l.kt)("h4",{id:"tally-and-execute-automatically-1"},"Tally and execute automatically"),(0,l.kt)("p",null,"Once the proposal's voting period is over, the votes for the impeach-validator proposal would be tallied. If the\nproposal\nis passed, the impeach-validator message in the proposal would be executed automatically."),(0,l.kt)("h2",{id:"detailed-cli"},"Detailed CLI"),(0,l.kt)("h3",{id:"query"},"Query"),(0,l.kt)("p",null,"The CLI ",(0,l.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking --help\n")),(0,l.kt)("h4",{id:"delegation"},"delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"delegation")," command allows users to query a delegation based on address and validator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking delegation [delegator-addr] [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking delegation 0x9fB29.. 0x91D7d..\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'balance:\n  amount: "10000000000000000000000000"\n  denom: BNB\ndelegation:\n  delegator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n  shares: "10000000000000000000000000.000000000000000000"\n  validator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n')),(0,l.kt)("h4",{id:"historical-info"},"historical-info"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"historical-info")," command allows users to query historical info at given height."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking historical-info [height] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking historical-info 1\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'header:\n  app_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  chain_id: greenfield_9000-121\n  consensus_hash: BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\n  data_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  evidence_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  height: "1"\n  last_block_id:\n    hash: null\n    part_set_header:\n      hash: null\n      total: 0\n  last_commit_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  last_results_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  next_validators_hash: 66w0qjSBjRkSTh3S5gPNaCRR/E+RsbFhMNLHTNighoo=\n  proposer_address: TY90UCbGrdAHcfcwgh2TSHKisL4=\n  time: "2023-02-20T15:24:16.056235Z"\n  validators_hash: 66w0qjSBjRkSTh3S5gPNaCRR/E+RsbFhMNLHTNighoo=\n  version:\n    app: "0"\n    block: "11"\nvalset:\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: R/yEnaoqxfWcqns01j8w/U9PQ5DK2Vl6rkoJwh5CFn4=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator1\n      identity: ""\n      moniker: validator1\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0x3D1c0E4aEdA87e0779E895307Eb3dFF6432a3cDa\n    relayer_address: 0xebd48ceed75B8e8174F6143394BD74fd2cf102d4\n    relayer_bls_key: lBsWg+/1/3Q/mJFE97PDBkPSNF631enVSUin/u+DEeUmttGbArKHYyXdtvP20iOw\n    self_del_address: 0x3D1c0E4aEdA87e0779E895307Eb3dFF6432a3cDa\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: gUtwmz/uuTGhoRhsZbwycyw9nfHyVpIdPMaNE4GMQ3Q=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator2\n      identity: ""\n      moniker: validator2\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0xe7374890fc6c8811Ab6eac3A30D9e5391C1077D5\n    relayer_address: 0x3D4da133bDb0443917Cf29b06E3Bd18a9Cd5dc73\n    relayer_bls_key: t+wJJfvKxjgKDam3L+TgEWIaDpTZOOASwI0qC0lAgtQY4ow9RxJKjROFjxD9x9iR\n    self_del_address: 0xe7374890fc6c8811Ab6eac3A30D9e5391C1077D5\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: 4hGnslsUEWptUbeeFXx/44eUodKoFv61IFimxPB7qbc=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator0\n      identity: ""\n      moniker: validator0\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n    relayer_address: 0xBefD69cb71403DF7BA20310FB216e1Fb7bAC6321\n    relayer_bls_key: qt3VpcjybvsWdR8smO0eCoaD+4IkAczpl+mcBJOKnXQro2g3TUXWCZPU7VvI01KJ\n    self_del_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h4",{id:"params"},"params"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query the current staking parameters information."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking params [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking params\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'bond_denom: BNB\nhistorical_entries: 10000\nmax_entries: 7\nmax_validators: 100\nmin_commission_rate: "0.000000000000000000"\nmin_self_delegation: "1"\nunbonding_time: 1814400s\n')),(0,l.kt)("h4",{id:"pool"},"pool"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"pool")," command allows users to query the current staking pool values."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking pool [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking pool\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'bonded_tokens: "30000000000000000000000000"\nnot_bonded_tokens: "0"\n')),(0,l.kt)("h4",{id:"unbonding-delegation"},"unbonding-delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"unbonding-delegation")," command allows users to query an unbonding-delegation record based on delegator and validator\naddress."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking unbonding-delegation 0x9fB29.. 0x91D7d..\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'delegator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\nentries:\n  - balance: "1000000000000000000"\n    completion_time: "2023-03-14T01:46:43.524923Z"\n    creation_height: "6736"\n    initial_balance: "1000000000000000000"\nvalidator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n')),(0,l.kt)("h4",{id:"validator"},"validator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"validator")," command allows users to query a validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking validator [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking validator 0x91D7d..\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'commission:\n  commission_rates:\n    max_change_rate: "0.010000000000000000"\n    max_rate: "1.000000000000000000"\n    rate: "0.070000000000000000"\n  update_time: "2023-02-20T15:24:16.056235Z"\nconsensus_pubkey:\n  \'@type\': /cosmos.crypto.ed25519.PubKey\n  key: 4hGnslsUEWptUbeeFXx/44eUodKoFv61IFimxPB7qbc=\ndelegator_shares: "10000000000000000000000000.000000000000000000"\ndescription:\n  details: validator0\n  identity: ""\n  moniker: validator0\n  security_contact: ""\n  website: http://website\njailed: false\nmin_self_delegation: "1"\noperator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\nrelayer_address: 0xBefD69cb71403DF7BA20310FB216e1Fb7bAC6321\nrelayer_bls_key: qt3VpcjybvsWdR8smO0eCoaD+4IkAczpl+mcBJOKnXQro2g3TUXWCZPU7VvI01KJ\nself_del_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\nstatus: BOND_STATUS_BONDED\ntokens: "10000000000000000000000000"\nunbonding_height: "0"\nunbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h4",{id:"validators"},"validators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"validators")," command allows users to query for all validators."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking validators [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query staking validators\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'pagination:\n  next_key: null\n  total: "0"\nvalidators:\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: R/yEnaoqxfWcqns01j8w/U9PQ5DK2Vl6rkoJwh5CFn4=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator1\n      identity: ""\n      moniker: validator1\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0x3D1c0E4aEdA87e0779E895307Eb3dFF6432a3cDa\n    relayer_address: 0xebd48ceed75B8e8174F6143394BD74fd2cf102d4\n    relayer_bls_key: lBsWg+/1/3Q/mJFE97PDBkPSNF631enVSUin/u+DEeUmttGbArKHYyXdtvP20iOw\n    self_del_address: 0x3D1c0E4aEdA87e0779E895307Eb3dFF6432a3cDa\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: 4hGnslsUEWptUbeeFXx/44eUodKoFv61IFimxPB7qbc=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator0\n      identity: ""\n      moniker: validator0\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n    relayer_address: 0xBefD69cb71403DF7BA20310FB216e1Fb7bAC6321\n    relayer_bls_key: qt3VpcjybvsWdR8smO0eCoaD+4IkAczpl+mcBJOKnXQro2g3TUXWCZPU7VvI01KJ\n    self_del_address: 0xCd6D1332a09c29A8a5Fe5Ea4b485F63881f26999\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n  - commission:\n      commission_rates:\n        max_change_rate: "0.010000000000000000"\n        max_rate: "1.000000000000000000"\n        rate: "0.070000000000000000"\n      update_time: "2023-02-20T15:24:16.056235Z"\n    consensus_pubkey:\n      \'@type\': /cosmos.crypto.ed25519.PubKey\n      key: gUtwmz/uuTGhoRhsZbwycyw9nfHyVpIdPMaNE4GMQ3Q=\n    delegator_shares: "10000000000000000000000000.000000000000000000"\n    description:\n      details: validator2\n      identity: ""\n      moniker: validator2\n      security_contact: ""\n      website: http://website\n    jailed: false\n    min_self_delegation: "1"\n    operator_address: 0xe7374890fc6c8811Ab6eac3A30D9e5391C1077D5\n    relayer_address: 0x3D4da133bDb0443917Cf29b06E3Bd18a9Cd5dc73\n    relayer_bls_key: t+wJJfvKxjgKDam3L+TgEWIaDpTZOOASwI0qC0lAgtQY4ow9RxJKjROFjxD9x9iR\n    self_del_address: 0xe7374890fc6c8811Ab6eac3A30D9e5391C1077D5\n    status: BOND_STATUS_BONDED\n    tokens: "10000000000000000000000000"\n    unbonding_height: "0"\n    unbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h3",{id:"transactions"},"Transactions"),(0,l.kt)("p",null,"The CLI ",(0,l.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to send ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," related transactions."),(0,l.kt)("h4",{id:"delegate"},"delegate"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"delegate")," command allows users to delegate liquid tokens to a validator, in the early stage, only self-delegate is\nsupported."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking delegate [validator-addr] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking delegate 0x91D7d.. 1000000000000000000000BNB --from mykey\n")),(0,l.kt)("h4",{id:"edit-validator"},"edit-validator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"edit-validator")," command allows the user to edit an existing validator account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking edit-validator [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking edit-validator --addr-relayer 0x91D7d.. --from mykey\n")),(0,l.kt)("h4",{id:"unbond"},"unbond"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"unbond")," command allows the user to unbond shares from a validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking unbond [validator-addr] [amount] [flags]\n")),(0,l.kt)("p",null,"After executing unbond command, it will take ",(0,l.kt)("strong",{parentName:"p"},"7 days")," to receive BNB back."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx staking unbond 0x91D7d.. 100000000000000000000BNB --from mykey\n")))}g.isMDXComponent=!0}}]);