"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[5322],{71392:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>b,frontMatter:()=>p,metadata:()=>u,toc:()=>f});var r=a(87462),i=(a(67294),a(3905)),s=a(26389),m=a(94891),n=(a(75190),a(47507)),o=a(24310),l=a(63303),d=(a(75035),a(85162));const p={id:"payment-params",title:"PaymentParams",description:"Parameters queries the parameters of the module.",sidebar_label:"PaymentParams",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"PaymentParams",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{params:{description:"params holds all the parameters of this module.",type:"object",properties:{versioned_params:{type:"object",properties:{reserve_time:{type:"string",format:"uint64",title:"Time duration which the buffer balance need to be reserved for NetOutFlow e.g. 6 month"},validator_tax_rate:{type:"string",title:"The tax rate to pay for validators in storage payment. The default value is 1%(0.01)"}},description:"VersionedParams defines the parameters with multiple versions, each version is stored with different timestamp."},payment_account_count_limit:{type:"string",format:"uint64",title:"The maximum number of payment accounts that can be created by one user"},forced_settle_time:{type:"string",format:"uint64",description:"Time duration threshold of forced settlement.\nIf dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled."},max_auto_settle_flow_count:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto forced settled in one block"},max_auto_resume_flow_count:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto resumed in one block"},fee_denom:{type:"string",title:"The denom of fee charged in payment module"},withdraw_time_lock_threshold:{type:"string",title:"The withdrawal amount threshold to trigger time lock"},withdraw_time_lock_duration:{type:"string",format:"uint64",title:"The duration of the time lock for a big amount withdrawal"}}}},description:"QueryParamsResponse is response type for the Query/Params RPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},tags:["payment"],description:"Parameters queries the parameters of the module.",method:"get",path:"/greenfield/payment/params",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"PaymentParams",description:{content:"Parameters queries the parameters of the module.",type:"text/plain"},url:{path:["greenfield","payment","params"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},c=void 0,u={unversionedId:"greenfield-api/payment-params",id:"greenfield-api/payment-params",title:"PaymentParams",description:"Parameters queries the parameters of the module.",source:"@site/docs/greenfield-api/payment-params.api.mdx",sourceDirName:"greenfield-api",slug:"/greenfield-api/payment-params",permalink:"/greenfield-docs/docs/greenfield-api/payment-params",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"payment-params",title:"PaymentParams",description:"Parameters queries the parameters of the module.",sidebar_label:"PaymentParams",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"PaymentParams",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{params:{description:"params holds all the parameters of this module.",type:"object",properties:{versioned_params:{type:"object",properties:{reserve_time:{type:"string",format:"uint64",title:"Time duration which the buffer balance need to be reserved for NetOutFlow e.g. 6 month"},validator_tax_rate:{type:"string",title:"The tax rate to pay for validators in storage payment. The default value is 1%(0.01)"}},description:"VersionedParams defines the parameters with multiple versions, each version is stored with different timestamp."},payment_account_count_limit:{type:"string",format:"uint64",title:"The maximum number of payment accounts that can be created by one user"},forced_settle_time:{type:"string",format:"uint64",description:"Time duration threshold of forced settlement.\nIf dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled."},max_auto_settle_flow_count:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto forced settled in one block"},max_auto_resume_flow_count:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto resumed in one block"},fee_denom:{type:"string",title:"The denom of fee charged in payment module"},withdraw_time_lock_threshold:{type:"string",title:"The withdrawal amount threshold to trigger time lock"},withdraw_time_lock_duration:{type:"string",format:"uint64",title:"The duration of the time lock for a big amount withdrawal"}}}},description:"QueryParamsResponse is response type for the Query/Params RPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},tags:["payment"],description:"Parameters queries the parameters of the module.",method:"get",path:"/greenfield/payment/params",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"PaymentParams",description:{content:"Parameters queries the parameters of the module.",type:"text/plain"},url:{path:["greenfield","payment","params"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},sidebar:"apiReferenceSidebar",previous:{title:"OutFlows",permalink:"/greenfield-docs/docs/greenfield-api/out-flows"},next:{title:"ParamsByTimestamp",permalink:"/greenfield-docs/docs/greenfield-api/params-by-timestamp"}},h={},f=[{value:"PaymentParams",id:"paymentparams",level:2}],y={toc:f},g="wrapper";function b(e){let{components:t,...a}=e;return(0,i.kt)(g,(0,r.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"paymentparams"},"PaymentParams"),(0,i.kt)("p",null,"Parameters queries the parameters of the module."),(0,i.kt)("div",null,(0,i.kt)(s.Z,{mdxType:"ApiTabs"},(0,i.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A successful response.")),(0,i.kt)("div",null,(0,i.kt)(m.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"params"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"params holds all the parameters of this module.")),(0,i.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"versioned_params"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"VersionedParams defines the parameters with multiple versions, each version is stored with different timestamp.")),(0,i.kt)(o.Z,{collapsible:!1,name:"reserve_time",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"Time duration which the buffer balance need to be reserved for NetOutFlow e.g. 6 month"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"validator_tax_rate",required:!1,schemaName:"The tax rate to pay for validators in storage payment. The default value is 1%(0.01)",qualifierMessage:void 0,schema:{type:"string",title:"The tax rate to pay for validators in storage payment. The default value is 1%(0.01)"},mdxType:"SchemaItem"})))),(0,i.kt)(o.Z,{collapsible:!1,name:"payment_account_count_limit",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"The maximum number of payment accounts that can be created by one user"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"forced_settle_time",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",description:"Time duration threshold of forced settlement.\nIf dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled."},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"max_auto_settle_flow_count",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto forced settled in one block"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"max_auto_resume_flow_count",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"the maximum number of flows that will be auto resumed in one block"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"fee_denom",required:!1,schemaName:"The denom of fee charged in payment module",qualifierMessage:void 0,schema:{type:"string",title:"The denom of fee charged in payment module"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"withdraw_time_lock_threshold",required:!1,schemaName:"The withdrawal amount threshold to trigger time lock",qualifierMessage:void 0,schema:{type:"string",title:"The withdrawal amount threshold to trigger time lock"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"withdraw_time_lock_duration",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"The duration of the time lock for a big amount withdrawal"},mdxType:"SchemaItem"}))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(n.Z,{responseExample:'{\n  "params": {\n    "versioned_params": {\n      "reserve_time": "string",\n      "validator_tax_rate": "string"\n    },\n    "payment_account_count_limit": "string",\n    "forced_settle_time": "string",\n    "max_auto_settle_flow_count": "string",\n    "max_auto_resume_flow_count": "string",\n    "fee_denom": "string",\n    "withdraw_time_lock_threshold": "string",\n    "withdraw_time_lock_duration": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(d.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"An unexpected error response.")),(0,i.kt)("div",null,(0,i.kt)(m.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(o.Z,{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"details"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(o.Z,{collapsible:!1,name:"type_url",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(o.Z,{collapsible:!1,name:"value",required:!1,schemaName:"byte",qualifierMessage:void 0,schema:{type:"string",format:"byte"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(n.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);