"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7961],{96034:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>p,default:()=>_,frontMatter:()=>u,metadata:()=>f,toc:()=>h});var s=a(87462),n=(a(67294),a(3905)),i=a(26389),r=a(94891),o=a(75190),l=a(47507),c=a(24310),m=a(63303),d=(a(75035),a(85162));const u={id:"stream-records",title:"StreamRecords",description:"Queries all stream records.",sidebar_label:"StreamRecords",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StreamRecords",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{stream_records:{type:"array",items:{type:"object",properties:{account:{type:"string",title:"account address"},crud_timestamp:{type:"string",format:"int64",title:"latest update timestamp of the stream record"},netflow_rate:{type:"string",description:"The per-second rate that an account's balance is changing.\nIt is the sum of the account's inbound and outbound flow rates."},static_balance:{type:"string",description:"The balance of the stream account at the latest CRUD timestamp."},buffer_balance:{type:"string",title:"reserved balance of the stream account\nIf the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`"},lock_balance:{type:"string",title:"the locked balance of the stream account after it puts a new object and before the object is sealed"},status:{title:"the status of the stream account",type:"string",enum:["STREAM_ACCOUNT_STATUS_ACTIVE","STREAM_ACCOUNT_STATUS_FROZEN"],default:"STREAM_ACCOUNT_STATUS_ACTIVE",description:"- STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.\n - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.\nA frozen stream account cannot be used as payment address for buckets.\nIt can be unfrozen by depositing more BNB to the stream account."},settle_timestamp:{type:"string",format:"int64",title:"the unix timestamp when the stream account will be settled"},out_flow_count:{type:"string",format:"uint64",title:"the count of its out flows"},frozen_netflow_rate:{type:"string",title:"the frozen netflow rate, which is used when resuming stream account"}},title:"Stream Payment Record of a stream account"}},pagination:{type:"object",properties:{next_key:{type:"string",format:"byte",description:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."},total:{type:"string",format:"uint64",title:"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}},description:"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"}}}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}}],tags:["payment"],description:"Queries all stream records.",method:"get",path:"/greenfield/payment/stream_records",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"StreamRecords",description:{content:"Queries all stream records.",type:"text/plain"},url:{path:["greenfield","payment","stream_records"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",type:"text/plain"},key:"pagination.key",value:""},{disabled:!1,description:{content:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",type:"text/plain"},key:"pagination.offset",value:""},{disabled:!1,description:{content:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",type:"text/plain"},key:"pagination.limit",value:""},{disabled:!1,description:{content:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",type:"text/plain"},key:"pagination.count_total",value:""},{disabled:!1,description:{content:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",type:"text/plain"},key:"pagination.reverse",value:""}],variable:[]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},p=void 0,f={unversionedId:"greenfield-api/stream-records",id:"greenfield-api/stream-records",title:"StreamRecords",description:"Queries all stream records.",source:"@site/docs/greenfield-api/stream-records.api.mdx",sourceDirName:"greenfield-api",slug:"/greenfield-api/stream-records",permalink:"/greenfield-docs/docs/greenfield-api/stream-records",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"stream-records",title:"StreamRecords",description:"Queries all stream records.",sidebar_label:"StreamRecords",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StreamRecords",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{stream_records:{type:"array",items:{type:"object",properties:{account:{type:"string",title:"account address"},crud_timestamp:{type:"string",format:"int64",title:"latest update timestamp of the stream record"},netflow_rate:{type:"string",description:"The per-second rate that an account's balance is changing.\nIt is the sum of the account's inbound and outbound flow rates."},static_balance:{type:"string",description:"The balance of the stream account at the latest CRUD timestamp."},buffer_balance:{type:"string",title:"reserved balance of the stream account\nIf the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`"},lock_balance:{type:"string",title:"the locked balance of the stream account after it puts a new object and before the object is sealed"},status:{title:"the status of the stream account",type:"string",enum:["STREAM_ACCOUNT_STATUS_ACTIVE","STREAM_ACCOUNT_STATUS_FROZEN"],default:"STREAM_ACCOUNT_STATUS_ACTIVE",description:"- STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.\n - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.\nA frozen stream account cannot be used as payment address for buckets.\nIt can be unfrozen by depositing more BNB to the stream account."},settle_timestamp:{type:"string",format:"int64",title:"the unix timestamp when the stream account will be settled"},out_flow_count:{type:"string",format:"uint64",title:"the count of its out flows"},frozen_netflow_rate:{type:"string",title:"the frozen netflow rate, which is used when resuming stream account"}},title:"Stream Payment Record of a stream account"}},pagination:{type:"object",properties:{next_key:{type:"string",format:"byte",description:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."},total:{type:"string",format:"uint64",title:"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}},description:"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"}}}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}}],tags:["payment"],description:"Queries all stream records.",method:"get",path:"/greenfield/payment/stream_records",servers:[{url:"https://greenfield-chain.bnbchain.org",description:"Mainnet RPC (uses live data)"},{url:"https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org",description:"Testnet RPC (uses test data)"}],info:{title:"Greenfield - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"StreamRecords",description:{content:"Queries all stream records.",type:"text/plain"},url:{path:["greenfield","payment","stream_records"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",type:"text/plain"},key:"pagination.key",value:""},{disabled:!1,description:{content:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",type:"text/plain"},key:"pagination.offset",value:""},{disabled:!1,description:{content:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",type:"text/plain"},key:"pagination.limit",value:""},{disabled:!1,description:{content:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",type:"text/plain"},key:"pagination.count_total",value:""},{disabled:!1,description:{content:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",type:"text/plain"},key:"pagination.reverse",value:""}],variable:[]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/greenfield-api/greenfield-grpc-gateway-docs",custom_edit_url:null},sidebar:"apiReferenceSidebar",previous:{title:"StreamRecord",permalink:"/greenfield-docs/docs/greenfield-api/stream-record"},next:{title:"QueryGlobalSpStorePriceByTime",permalink:"/greenfield-docs/docs/greenfield-api/query-global-sp-store-price-by-time"}},y={},h=[{value:"StreamRecords",id:"streamrecords",level:2}],g={toc:h},b="wrapper";function _(e){let{components:t,...a}=e;return(0,n.kt)(b,(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"streamrecords"},"StreamRecords"),(0,n.kt)("p",null,"Queries all stream records."),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Query Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},mdxType:"ParamsItem"}),(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"}),(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"}),(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)(i.Z,{mdxType:"ApiTabs"},(0,n.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"A successful response.")),(0,n.kt)("div",null,(0,n.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,n.kt)(m.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"stream_records"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)("li",null,(0,n.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,n.kt)(c.Z,{collapsible:!1,name:"account",required:!1,schemaName:"account address",qualifierMessage:void 0,schema:{type:"string",title:"account address"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"crud_timestamp",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"string",format:"int64",title:"latest update timestamp of the stream record"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"netflow_rate",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The per-second rate that an account's balance is changing.\nIt is the sum of the account's inbound and outbound flow rates."},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"static_balance",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The balance of the stream account at the latest CRUD timestamp."},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"buffer_balance",required:!1,schemaName:"reserved balance of the stream account\nIf the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`",qualifierMessage:void 0,schema:{type:"string",title:"reserved balance of the stream account\nIf the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"lock_balance",required:!1,schemaName:"the locked balance of the stream account after it puts a new object and before the object is sealed",qualifierMessage:void 0,schema:{type:"string",title:"the locked balance of the stream account after it puts a new object and before the object is sealed"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"status",required:!1,schemaName:"the status of the stream account",qualifierMessage:"**Possible values:** [`STREAM_ACCOUNT_STATUS_ACTIVE`, `STREAM_ACCOUNT_STATUS_FROZEN`]",schema:{title:"the status of the stream account",type:"string",enum:["STREAM_ACCOUNT_STATUS_ACTIVE","STREAM_ACCOUNT_STATUS_FROZEN"],default:"STREAM_ACCOUNT_STATUS_ACTIVE",description:"- STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.\n - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.\nA frozen stream account cannot be used as payment address for buckets.\nIt can be unfrozen by depositing more BNB to the stream account."},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"settle_timestamp",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"string",format:"int64",title:"the unix timestamp when the stream account will be settled"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"out_flow_count",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"the count of its out flows"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"frozen_netflow_rate",required:!1,schemaName:"the frozen netflow rate, which is used when resuming stream account",qualifierMessage:void 0,schema:{type:"string",title:"the frozen netflow rate, which is used when resuming stream account"},mdxType:"SchemaItem"}),(0,n.kt)("li",null,(0,n.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,n.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"pagination"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,n.kt)("p",null,"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest."),(0,n.kt)("p",null," message SomeResponse {\nrepeated Bar results = 1;\nPageResponse page = 2;\n}")),(0,n.kt)(c.Z,{collapsible:!1,name:"next_key",required:!1,schemaName:"byte",qualifierMessage:void 0,schema:{type:"string",format:"byte",description:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"total",required:!1,schemaName:"uint64",qualifierMessage:void 0,schema:{type:"string",format:"uint64",title:"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"},mdxType:"SchemaItem"}))))))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(l.Z,{responseExample:'{\n  "stream_records": [\n    {\n      "account": "string",\n      "crud_timestamp": "string",\n      "netflow_rate": "string",\n      "static_balance": "string",\n      "buffer_balance": "string",\n      "lock_balance": "string",\n      "status": "STREAM_ACCOUNT_STATUS_ACTIVE",\n      "settle_timestamp": "string",\n      "out_flow_count": "string",\n      "frozen_netflow_rate": "string"\n    }\n  ],\n  "pagination": {\n    "next_key": "string",\n    "total": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,n.kt)(d.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"An unexpected error response.")),(0,n.kt)("div",null,(0,n.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,n.kt)(m.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"details"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)("li",null,(0,n.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,n.kt)(c.Z,{collapsible:!1,name:"type_url",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"value",required:!1,schemaName:"byte",qualifierMessage:void 0,schema:{type:"string",format:"byte"},mdxType:"SchemaItem"}),(0,n.kt)("li",null,(0,n.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(l.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}_.isMDXComponent=!0}}]);