"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7694],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},b=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),b=o,m=u["".concat(s,".").concat(b)]||u[b]||p[b]||r;return t?a.createElement(m,i(i({ref:n},c),{},{components:t})):a.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=b;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},32570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=t(87462),o=(t(67294),t(3905));const r={},i=void 0,l={unversionedId:"guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version",id:"guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version",title:"Alibaba Cloud BNB Greenfield RunbookV2.4 English Version",description:"Greenfield Storage Provider Deployment Guide - Alibaba Cloud",source:"@site/docs/guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version.md",sourceDirName:"guide/storage-provider/run-book/infra-deployment/alibaba",slug:"/guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version",permalink:"/greenfield-docs/docs/guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/storage-provider/run-book/infra-deployment/alibaba/Alibaba Cloud BNB Greenfield RunbookV2.4 English Version.md",tags:[],version:"current",frontMatter:{}},s={},d=[{value:"Greenfield Storage Provider Deployment Guide - Alibaba Cloud",id:"greenfield-storage-provider-deployment-guide---alibaba-cloud",level:2},{value:"Pre-requisites(Alibaba Cloud ACK Creation)",id:"pre-requisitesalibaba-cloud-ack-creation",level:3},{value:"Pre-requisites(Connect to the ACK cluster through ECS on the Alibaba Cloud)",id:"pre-requisitesconnect-to-the-ack-cluster-through-ecs-on-the-alibaba-cloud",level:3},{value:"Deploy SP by using Alibaba Cloud ACK",id:"deploy-sp-by-using-alibaba-cloud-ack",level:2}],c={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"greenfield-storage-provider-deployment-guide---alibaba-cloud"},"Greenfield Storage Provider Deployment Guide - Alibaba Cloud"),(0,o.kt)("h3",{id:"pre-requisitesalibaba-cloud-ack-creation"},"Pre-requisites(Alibaba Cloud ACK Creation)"),(0,o.kt)("p",null,"1 Create an ACK Container Service K8S cluster \u2013 Search for Container Service Fpr Kubernetes in the console and click Create Kubernetes Cluster"),(0,o.kt)("p",null,"2 Select the Managed Kubernetes version(Managed ACK), deployment region, billing method, VPC network/virtual switch/pod virtual switch, network plug-in (Terway is recommended) and other network-related configuration"),(0,o.kt)("p",null,"3 Create a node pool name, select node instance specifications, quantity, disk size/performance level and operating system (recommended at least 2* ECS with 12vcpu 48G RAM), and set the corresponding login method and password"),(0,o.kt)("p",null,"4 Select the type and specifications of the Ingress service to create, and then confirm the order and create the cluster"),(0,o.kt)("p",null,"View the created ACK cluster information and connect to ACK based on the connection information provided by Alibaba Cloud."),(0,o.kt)("h3",{id:"pre-requisitesconnect-to-the-ack-cluster-through-ecs-on-the-alibaba-cloud"},"Pre-requisites(Connect to the ACK cluster through ECS on the Alibaba Cloud)"),(0,o.kt)("p",null,"1 After ACK is created successfully, go to the Cluster Information \u2013 Connection Information \u2013 Internal Access"),(0,o.kt)("p",null,"2 Create an ECS (Ubuntu 22 or above is recommended for Linux, and CENTOS7 is not recommended), install kubectl according to the instructions, copy and paste the content in the picture above in ","~","/.kube/config. After the configuration is completed, you can use kubectl from ECS to access Kubernetes cluster"),(0,o.kt)("p",null,"2.1 Install kubectl:\n",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/?spm=5176.2020520152.0.0.782d16ddm5WRG6"},"https://kubernetes.io/docs/tasks/tools/?spm=5176.2020520152.0.0.782d16ddm5WRG6")),(0,o.kt)("p",null,"2.2 Reference video (windows version):\n",(0,o.kt)("a",{parentName:"p",href:"https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/getting-started/getting-started-with-ack-using-kubectl"},"https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/getting-started/getting-started-with-ack-using-kubectl")),(0,o.kt)("p",null,"2.3 Verify connectivity:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[root@test ~]# kubectl get node\nNAME                    STATUS   ROLES    AGE   VERSION\ncn-hongkong.13.0.0.10   Ready    <none>   80d   v1.26.3-aliyun.1\ncn-hongkong.13.0.0.8    Ready    <none>   80d   v1.26.3-aliyun.1\n")),(0,o.kt)("h2",{id:"deploy-sp-by-using-alibaba-cloud-ack"},"Deploy SP by using Alibaba Cloud ACK"),(0,o.kt)("p",null,"1 Install kustomization\nReference Link\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://kubectl.docs.kubernetes.io/installation/kustomize/"},"https://kubectl.docs.kubernetes.io/installation/kustomize/")),(0,o.kt)("p",null,"1.1 Install GO(other methods are acceptable as well)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@test ~]# snap install go --classic\n")),(0,o.kt)("p",null,"1.2 GO Install Kustomize via Go\n",(0,o.kt)("a",{parentName:"p",href:"https://kubectl.docs.kubernetes.io/installation/kustomize/source/"},"https://kubectl.docs.kubernetes.io/installation/kustomize/source/")),(0,o.kt)("p",null,"2 Install gnfd"),(0,o.kt)("p",null,"Below reference link to download BNB Greenfield latest releases, we use Linux as an example here, can use cmd or FileZilla and other tools to upload to the test ECS machine\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield/releases"},"https://github.com/bnb-chain/greenfield/releases")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"root@ub:~# mv linux gnfd\nroot@ub:~# chmod a+x gnfd\nroot@ub:~# ./gnfd version\nVersion: v0.2.4\nGit Commit: dba6afc62009d9e1b424613a437bc284f2ac9a1b\nGit Commit Date: 20230829\nArchitecture: amd64\nGo Version: go1.20.7\nOperating System: linuxroot@ub:~# \n")),(0,o.kt)("p",null,"3 Upload and decompress sp.tar.gz\nCan use tools such as cmd or FileZilla to upload to the test ECS machine and decompress it (such as installing unzip, etc.)"),(0,o.kt)("p",null,"cd to the directory cd ","~","/alicloud-sp/base/vendors/alicloud/large"),(0,o.kt)("p",null,"4 Configure ServiceAccount via RRSA"),(0,o.kt)("p",null,"4.1 Alibaba Cloud reference link:\n",(0,o.kt)("a",{parentName:"p",href:"https://www.alibabacloud.com/help/zh/ack/ack-managed-and-ack-dedicated/user-guide/use-rrsa-to-authorize-pods-to-access-different-cloud-services"},"https://www.alibabacloud.com/help/zh/ack/ack-managed-and-ack-dedicated/user-guide/use-rrsa-to-authorize-pods-to-access-different-cloud-services")),(0,o.kt)("p",null,"4.2 Complete the installation of the ack-pod-identity-webhook component:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install the ack-pod-identity-webhook component:"),(0,o.kt)("p",{parentName:"li"},"a.On the cluster Name/ID list page, click the target cluster name, and then select Operations > Add-ons in the left navigation bar."),(0,o.kt)("p",{parentName:"li"},"b.On the Add-ons page, click the Security tab, find the ack-pod-identitv-webhook component, and click Install on the lower right side of the component."),(0,o.kt)("p",{parentName:"li"},"c.After confirming the component information in the prompt dialog box, click OK"))),(0,o.kt)("p",null,"4.3 Create a RAM role, and configure the ACK namespace and a service account name (others can be based on the default values in the document):"),(0,o.kt)("p",null,"\t","Create a RAM role \uff08name: demo-role-for-rrsa\uff09"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Log in to ",(0,o.kt)("a",{parentName:"li",href:"https://ram.console.aliyun.com/"},"RAM Console")," using your Alibaba Cloud account."),(0,o.kt)("li",{parentName:"ol"},"In the left navigation bar, select ",(0,o.kt)("strong",{parentName:"li"},"Identities")," > ",(0,o.kt)("strong",{parentName:"li"},"Roles"),", and then on the ",(0,o.kt)("strong",{parentName:"li"},"Roles")," page, click ",(0,o.kt)("strong",{parentName:"li"},"Create Role"),"."),(0,o.kt)("li",{parentName:"ol"},"In the ",(0,o.kt)("strong",{parentName:"li"},"Create Role")," panel, select the trusted entity type as ",(0,o.kt)("strong",{parentName:"li"},"IdP"),", and then click ",(0,o.kt)("strong",{parentName:"li"},"Next"),"."),(0,o.kt)("li",{parentName:"ol"},"On the ",(0,o.kt)("strong",{parentName:"li"},"Configure Role")," page, after configuring the following role information, click ",(0,o.kt)("strong",{parentName:"li"},"Finish"),".")),(0,o.kt)("p",null,"Here I created a role named greenfield and configured the oss permissions:"),(0,o.kt)("p",null,"4.4 In the yaml deployment file created later, add tags and comments according to the documentation requirements:"),(0,o.kt)("p",null,"\t","In the following YAML example, add the label ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-identity.alibabacloud.com/injection: 'on'")," to the namespace, and add the annotation ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-identity.alibabacloud.com/role-name: demo-role-for to the service account -rrsa"),", enables the automatic injection function of the configuration of the ack-pod-identity-webhook component. For more instructions on ack-pod-identity-webhook component configuration, please see ","[ack-pod-identity-webhook]","(",(0,o.kt)("a",{parentName:"p",href:"https://www.alibabacloud.com/help/zh/ack/product-overview/ack-pod"},"https://www.alibabacloud.com/help/zh/ack/product-overview/ack-pod")," -identity-webhook#task-2295049)."),(0,o.kt)("p",null,"Example: I use the following sp.yaml file as an example. It needs to be modified according to the RAM role you actually created/the ACK namespace you actually used and the service account name. Here I am using\nRAM role=greenfield; namespace = default;\nservice account name = default;"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@test large]# cat sp.yaml |more\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    pod-identity.alibabacloud.com/role-name: default\n  name: default\n  namespace: default\n---\n")),(0,o.kt)("p",null,"Example: Use kubectl edit namespace default"),(0,o.kt)("p",null,"Add the label pod-identity.alibabacloud.com/injection: 'on' to the namespace"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Please edit the object below. Lines beginning with a \'#\' will be ignored,\n# and an empty file will abort the edit. If an error occurs while saving this file will be\n# reopened with the relevant failures.\n#\napiVersion: v1\nkind: Namespace\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"pod-identity.alibabacloud.com/injection":"on"},"name":"default"}}\n  creationTimestamp: "2023-06-20T07:53:35Z"\n  labels:\n    kubernetes.io/metadata.name: default\n    pod-identity.alibabacloud.com/injection: "on"\n  name: default\n  resourceVersion: "8324154"\n  uid: a0ac0aa4-0326-4abd-b9f5-a8756bcb5e06\nspec:\n  finalizers:\n  - kubernetes\nstatus:\n  phase: Active\n\n')),(0,o.kt)("p",null,"4.5 Confirm that the information in ServiceAccount has been changed to real information:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'[root@test large]# kubectl get namespace default -o yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"pod-identity.alibabacloud.com/injection":"on"},"name":"default"}}\n  creationTimestamp: "2023-06-20T07:53:35Z"\n  labels:\n    kubernetes.io/metadata.name: default\n    pod-identity.alibabacloud.com/injection: "on"\n  name: default\n  resourceVersion: "8324154"\n  uid: a0ac0aa4-0326-4abd-b9f5-a8756bcb5e06\nspec:\n  finalizers:\n  - kubernetes\nstatus:\n  phase: Active\n')),(0,o.kt)("p",null,"4.6 Prepare the domain name, which can be provided by yourself or purchased on Alibaba Cloud (international site domain name registration, Cloud DNS, etc.)"),(0,o.kt)("p",null,"4.7 We will use Alibaba Cloud's ALB. For details, please refer to items 2, 3, and 4 under step 1 in the Alibaba Cloud official website documentation:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.alibabacloud.com/help/zh/ack/ack-managed-and-ack-dedicated/user-guide/best-practice-for-migrating-from-a-self-managed-nginx-ingress-to-an-alb-ingress-1?spm=a2c63.p38356.0.0.2cbd1b8deaGwt4"},"https://www.alibabacloud.com/help/zh/ack/ack-managed-and-ack-dedicated/user-guide/best-practice-for-migrating-from-a-self-managed-nginx-ingress-to-an-alb-ingress-1?spm=a2c63.p38356.0.0.2cbd1b8deaGwt4")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    alb.ingress.kubernetes.io/cors-allow-credentials: "false"\n    alb.ingress.kubernetes.io/cors-allow-headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-MD5,Range,Authorization,X-Gnfd-Content-Sha256,X-Gnfd-Unsigned-Msg,X-Gnfd-Txn-Hash,Date,X-Gnfd-Object-ID,X-Gnfd-Resource,X-Gnfd-Piece-Index,X-Gnfd-Redundancy-Index,Address,X-Gnfd-User-Address,X-Gnfd-App-Domain,X-Gnfd-App-Reg-Nonce,X-Gnfd-Date,X-Gnfd-App-Reg-Public-Key,X-Gnfd-App-Reg-Expiry-Date\n    alb.ingress.kubernetes.io/cors-allow-methods: GET,PUT,POST,DELETE,PATCH,OPTIONS\n    alb.ingress.kubernetes.io/cors-allow-origin: \'*\'\n    alb.ingress.kubernetes.io/cors-expose-headers: \'*\'\n    alb.ingress.kubernetes.io/cors-max-age: "600"\n    alb.ingress.kubernetes.io/enable-cors: "true"\n    alb.ingress.kubernetes.io/listen-ports: \'[{"HTTP": 80}, {"HTTPS": 443}]\'\n    alb.ingress.kubernetes.io/ssl-redirect: "true"\n  name: gateway\nspec:\n  ingressClassName: gf-sp\n  rules:\n  - host: yourdomain.com\n    http:\n      paths:\n      - backend:\n          service:\n            name: gateway\n            port:\n              number: 9033\n        path: /\n        pathType: Prefix\n  - host: \'*.yourdomain.com\'\n    http:\n      paths:\n      - backend:\n          service:\n            name: gateway\n            port:\n              number: 9033\n        path: /\n        pathType: Prefix\n')),(0,o.kt)("p",null,"4.8 Modify the corresponding parameters in the config file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n[root@test large]# vim config/config.toml\nEnv = \"testnet\"\nServer = []\nGRPCAddress = '0.0.0.0:9333'\n\n[SpDB]\nUser = ''\nPasswd = ''\nAddress = 'rm-xxxxxxxxxxxx.mysql.rds.aliyuncs.com:3306'\nDatabase = 'storage_provider_db'\n\n[BsDB]\nUser = ''\nPasswd = ''\nAddress = 'rm-xxxxxxxxxxxxxx.mysql.rds.aliyuncs.com:3306'\nDatabase = 'block_syncer'\n\n[PieceStore]\nShards = 0\n\n[PieceStore.Store]\nStorage = 'oss'\nBucketURL = 'https://xxxxxxxxxxxxxxxx.oss-cn-hongkong.aliyuncs.com'\nMaxRetries = 5\nMinRetryDelay = 0\nTLSInsecureSkipVerify = false\nIAMType = 'SA'\n\n[Chain]\nChainID = 'greenfield_5600-1'\nChainAddress = ['https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443']\n\n[SpAccount]\nSpOperatorAddress = 'xxxxxxxxxxxxxxxxxxxxxx'\n\n[Gateway]\nDomainName = 'xxxxxx.com'\nHTTPAddress = '0.0.0.0:9033'\n\n[BlockSyncer]\nModules = ['epoch','bucket','object','payment','group','permission','storage_provider','prefix_tree','virtual_group','sp_exit_events','object_id_map']\nBsDBWriteAddress = \"rm-xxxxxxxxxxxxxx.mysql.rds.aliyuncs.com:3306\"\nWorkers = 50\n\n")),(0,o.kt)("p",null,"4.9 Create secret:\nHere you can choose to use the Alibaba Cloud KMS service. If you do not choose KMS with secrets, you need to manually create a secret file in secrets and complete the execution. You can refer to our reference secret.yaml file"),(0,o.kt)("p",null,"Modify here to correspond to the real namespace and the name of the secret you want to create"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@test large]# kubectl get secret default -o yaml\napiVersion: v1\ndata:\n  SIGNER_APPROVAL_PRIV_KEY: xxx==\n  SIGNER_BLS_PRIV_KEY: xxx==\n  SIGNER_GC_PRIV_KEY: xxx==\n  SIGNER_OPERATOR_PRIV_KEY: xxx==\n  SIGNER_SEAL_PRIV_KEY: xxx==\n  SP_DB_PASSWORD: xxx=\n  SP_DB_USER: xxx==\n\n\n")),(0,o.kt)("p",null,"You can go to the ACK console to see that this secret has been successfully created:"),(0,o.kt)("p",null,"And the corresponding names also appear. Here you need to fill in the corresponding information:"),(0,o.kt)("p",null,"4.10 Secret Key Reference:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SP_DB_PASSWORD: xxx= \nSP_DB_USER: xxx== \nSIGNER_OPERATOR_PRIV_KEY: xxx==\nSIGNER_FUNDING_PRIV_KEY: xxx==\nSIGNER_SEAL_PRIV_KEY: xxx==\nSIGNER_APPROVAL_PRIV_KEY: xxx==\nSIGNER_GC_PRIV_KEY: xxx==\nSIGNER_BLS_PRIV_KEY: xxx==\nP2P_PRIVATE_KEY: xxx==\n")),(0,o.kt)("p",null," ","The private key of SIGNER's operator/funding/seal/approval/gc needs to be obtained by executing the gnfd statement. Please keep it properly afterwards. Reference document: <",(0,o.kt)("a",{parentName:"p",href:"https://github.com/KeefeL/greenfield-docs/blob/update-create"},"https://github.com/KeefeL/greenfield-docs/blob/update-create")," -validator/docs/guide/storage-provider/run-book/run-testnet-SP-node.md>"),(0,o.kt)("p",null,"The value of P2P","_","PRIVATE","_","KEY needs to be obtained by executing the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./gnfd-sp p2p.create.key -n 1\n")),(0,o.kt)("p",null,"4.11\nAfter all configuration modifications are completed, use kustomize to build a new k8s yaml file\nExecute in the alicloud-sp/base/vendors/alicloud/large directory:\nkustomize build . > sp.yaml"),(0,o.kt)("p",null,"Then execute kubectl apply -f sp.yaml to start the pod"),(0,o.kt)("p",null,"4.12 View Pod status:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@test large]# kubectl get pods\nNAME                            READY   STATUS    RESTARTS   AGE\napprover-859f7d674d-chhlq       1/1     Running   0          18d\nblock-syncer-6df857c8fb-h9sh4   1/1     Running   0          18d\ndownloader-7d66cf8dfb-4cnll     1/1     Running   0          18d\ngateway-5d7b49b6dd-trdbf        1/1     Running   0          18d\ngateway-5d7b49b6dd-w5464        1/1     Running   0          18d\nmanager-54f85f5b96-vq679        1/1     Running   0          18d\nmetadata-64ff4ff945-rcmdz       1/1     Running   0          18d\nreceiver-7bd6995f4d-c8czn       1/1     Running   0          18d\nsigner-6c9dd6686c-sbdmk         1/1     Running   0          18d\ntaskexecutor-5d458dc454-f494r   1/1     Running   0          18d\ntaskexecutor-5d458dc454-vbtwd   1/1     Running   0          18d\nuploader-f6dfb66d6-54s2d        1/1     Running   0          18d\n")))}p.isMDXComponent=!0}}]);