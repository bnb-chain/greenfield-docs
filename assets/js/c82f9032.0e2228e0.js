"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[5093],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>P});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),d=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(t),m=o,P=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return t?a.createElement(P,r(r({ref:n},s),{},{components:t})):a.createElement(P,r({ref:n},s))}));function P(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var d=2;d<i;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},55145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(87462),o=(t(67294),t(3905));const i={title:"SP Config"},r=void 0,l={unversionedId:"guide/storage-provider/run-book/config",id:"guide/storage-provider/run-book/config",title:"SP Config",description:"SP Config",source:"@site/docs/guide/storage-provider/run-book/config.md",sourceDirName:"guide/storage-provider/run-book",slug:"/guide/storage-provider/run-book/config",permalink:"/greenfield-docs/docs/guide/storage-provider/run-book/config",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/storage-provider/run-book/config.md",tags:[],version:"current",frontMatter:{title:"SP Config"},sidebar:"guideSidebar",previous:{title:"How to deploy Piece Store",permalink:"/greenfield-docs/docs/guide/storage-provider/run-book/piece-store"},next:{title:"SP Common Issues",permalink:"/greenfield-docs/docs/guide/storage-provider/run-book/common-issues"}},p={},d=[{value:"SP Config",id:"sp-config",level:2},{value:"App info",id:"app-info",level:3},{value:"Database",id:"database",level:3},{value:"PieceStore",id:"piecestore",level:3},{value:"Chain info",id:"chain-info",level:3},{value:"SpAccount",id:"spaccount",level:3},{value:"Endpoint",id:"endpoint",level:3},{value:"P2P",id:"p2p",level:3},{value:"Gateway",id:"gateway",level:3},{value:"BlockSyncer",id:"blocksyncer",level:3},{value:"FundingPrivateKey",id:"fundingprivatekey",level:3},{value:"Rcmgr",id:"rcmgr",level:3},{value:"SP Probe",id:"sp-probe",level:3},{value:"SP Mainnet Recommended Config",id:"sp-mainnet-recommended-config",level:2}],s={toc:d},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"sp-config"},"SP Config"),(0,o.kt)("p",null,"This section gives you a complete config of SP. ",(0,o.kt)("inlineCode",{parentName:"p"},"./gnfd-sp config.dump")," will generate a template config.toml."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"# optional\nEnv = ''\n# optional\nAppID = ''\n# optional\nServer = []\n# optional\nGRPCAddress = ''\n\n[SpDB]\n# required\nUser = ''\n# required\nPasswd = ''\n# required\nAddress = ''\n# required\nDatabase = ''\n# optional\nConnMaxLifetime = 0\n# optional\nConnMaxIdleTime = 0\n# optional\nMaxIdleConns = 0\n# optional\nMaxOpenConns = 0\n# optional\nEnableTracePutEvent = false\n\n[BsDB]\n# required\nUser = ''\n# required\nPasswd = ''\n# required\nAddress = ''\n# required\nDatabase = ''\n# optional\nConnMaxLifetime = 0\n# optional\nConnMaxIdleTime = 0\n# optional\nMaxIdleConns = 0\n# optional\nMaxOpenConns = 0\n# optional\nEnableTracePutEvent = false\n\n[PieceStore]\n# required\nShards = 0\n\n[PieceStore.Store]\n# required\nStorage = ''\n# optional\nBucketURL = ''\n# optional\nMaxRetries = 0\n# optional\nMinRetryDelay = 0\n# optional\nTLSInsecureSkipVerify = false\n# required\nIAMType = ''\n\n[Chain]\n# required\nChainID = ''\n# required\nChainAddress = []\n# optional\nSealGasLimit = 0\n# optional\nSealFeeAmount = 0\n# optional\nRejectSealGasLimit = 0\n# optional\nRejectSealFeeAmount = 0\n# optional\nDiscontinueBucketGasLimit = 0\n# optional\nDiscontinueBucketFeeAmount = 0\n# optional\nCreateGlobalVirtualGroupGasLimit = 0\n# optional\nCreateGlobalVirtualGroupFeeAmount = 0\n# optional\nCompleteMigrateBucketGasLimit = 0\n# optional\nCompleteMigrateBucketFeeAmount = 0\n\n[SpAccount]\n# required\nSpOperatorAddress = ''\n# required\nOperatorPrivateKey = ''\n# optional\nFundingPrivateKey = ''\n# required\nSealPrivateKey = ''\n# required\nApprovalPrivateKey = ''\n# required\nGcPrivateKey = ''\n# required\nBlsPrivateKey = ''\n\n[Endpoint]\n# required\nApproverEndpoint = ''\n# required\nManagerEndpoint = ''\n# required\nDownloaderEndpoint = ''\n# required\nReceiverEndpoint = ''\n# required\nMetadataEndpoint = ''\n# required\nUploaderEndpoint = ''\n# required\nP2PEndpoint = ''\n# required\nSignerEndpoint = ''\n# required\nAuthenticatorEndpoint = ''\n\n[Approval]\n# optional\nBucketApprovalTimeoutHeight = 0\n# optional\nObjectApprovalTimeoutHeight = 0\n# optional\nReplicatePieceTimeoutHeight = 0\n\n[Bucket]\n# optional\nAccountBucketNumber = 0\n# optional\nMaxListReadQuotaNumber = 0\n# optional\nMaxPayloadSize = 0\n\n[Gateway]\n# required\nDomainName = ''\n# required\nHTTPAddress = ''\n\n[Executor]\n# optional\nMaxExecuteNumber = 0\n# optional\nAskTaskInterval = 0\n# optional\nAskReplicateApprovalTimeout = 0\n# optional\nAskReplicateApprovalExFactor = 0.0\n# optional\nListenSealTimeoutHeight = 0\n# optional\nListenSealRetryTimeout = 0\n# optional\nMaxListenSealRetry = 0\n# optional\nMaxObjectMigrationRetry = 0\n# optional\nObjectMigrationRetryTimeout = 0\n# optional\nEnableSkipFailedToMigrateObject = false\n# optional\nBucketTrafficKeepTimeDay = 0\n# optional\nReadRecordKeepTimeDay = 0\n# optional\nReadRecordDeleteLimit = 0\n\n[P2P]\n# optional\nP2PPrivateKey = ''\n# optional\nP2PAddress = ''\n# optional\nP2PAntAddress = ''\n# optional\nP2PBootstrap = []\n# optional\nP2PPingPeriod = 0\n\n[Parallel]\n# optional\nGlobalCreateBucketApprovalParallel = 0\n# optional\nGlobalCreateObjectApprovalParallel = 0\n# optional\nGlobalMaxUploadingParallel = 0\n# optional\nGlobalUploadObjectParallel = 0\n# optional\nGlobalReplicatePieceParallel = 0\n# optional\nGlobalSealObjectParallel = 0\n# optional\nGlobalReceiveObjectParallel = 0\n# optional\nGlobalRecoveryPieceParallel = 0\n# optional\nGlobalMigrateGVGParallel = 0\n# optional\nGlobalBackupTaskParallel = 0\n# optional\nGlobalDownloadObjectTaskCacheSize = 0\n# optional\nGlobalChallengePieceTaskCacheSize = 0\n# optional\nGlobalSyncConsensusInfoInterval = 0\n# optional\nGlobalGCObjectParallel = 0\n# optional\nGlobalGCBucketMigrationParallel = 0\n# optional\nGlobalGCZombieParallel = 0\n# optional\nGlobalGCMetaParallel = 0\n# optional\nUploadObjectParallelPerNode = 0\n# optional\nReceivePieceParallelPerNode = 0\n# optional\nDownloadObjectParallelPerNode = 0\n# optional\nChallengePieceParallelPerNode = 0\n# optional\nAskReplicateApprovalParallelPerNode = 0\n# optional\nQuerySPParallelPerNode = 0\n# required\nDiscontinueBucketEnabled = false\n# optional\nDiscontinueBucketTimeInterval = 0\n# required\nDiscontinueBucketKeepAliveDays = 0\n# optional\nLoadReplicateTimeout = 0\n# optional\nLoadSealTimeout = 0\n\n[Task]\n# optional\nUploadTaskSpeed = 0\n# optional\nDownloadTaskSpeed = 0\n# optional\nReplicateTaskSpeed = 0\n# optional\nReceiveTaskSpeed = 0\n# optional\nSealObjectTaskTimeout = 0\n# optional\nSealObjectTaskRetry = 0\n# optional\nReplicateTaskRetry = 0\n# optional\nReceiveConfirmTaskRetry = 0\n# optional\nGcObjectTaskTimeout = 0\n# optional\nGcZombieTaskTimeout = 0\n# optional\nGcMetaTaskTimeout = 0\n# optional\nGcObjectTaskRetry = 0\n# optional\nGcZombieTaskRetry = 0\n# optional\nGcMetaTaskRetry = 0\n\n[Monitor]\n# required\nDisableMetrics = false\n# required\nDisablePProf = false\n# required\nDisableProbe = false\n# required\nMetricsHTTPAddress = ''\n# required\nPProfHTTPAddress = ''\n# required\nProbeHTTPAddress = ''\n\n# optional\n[Rcmgr]\n# optional\nDisableRcmgr = false\n\n[Log]\n# optional\nLevel = ''\n# optional\nPath = ''\n\n[BlockSyncer]\n# required\nModules = []\n# required\nWorkers = 0\n# optional\nBsDBWriteAddress = ''\n\n[APIRateLimiter]\n# optional\nPathPattern = []\n# optional\nHostPattern = []\n# optional\nAPILimits = []\n# optional\nNameToLimit = []\n\n[APIRateLimiter.IPLimitCfg]\n# optional\nOn = false\n# optional\nRateLimit = 0\n# optional\nRatePeriod = ''\n\n[Manager]\n# optional\nEnableLoadTask = false\n# optional\nEnableHealthyChecker = false\n# optional\nSubscribeSPExitEventIntervalMillisecond = 0\n# optional\nSubscribeSwapOutExitEventIntervalMillisecond = 0\n# optional\nSubscribeBucketMigrateEventIntervalMillisecond = 0\n# optional\nGVGPreferSPList = []\n# optional\nSPBlackList = []\n# optional\nEnableTaskRetryScheduler = false\n# optional\nRejectUnsealThresholdSecond = 0\n\n[GC]\n# optional\nGCObjectTimeInterval = 0\n# optional\nGCObjectBlockInterval = 0\n# optional\nGCObjectSafeBlockDistance = 0\n# optional\nEnableGCZombie = false\n# optional\nGCZombieSafeObjectIDDistance = 0\n# optional\nGCZombiePieceTimeInterval = 0\n# optional\nGCZombiePieceObjectIDInterval = 0\n# optional\nEnableGCMeta = false\n# optional\nGCMetaTimeInterval = 0\n")),(0,o.kt)("h3",{id:"app-info"},"App info"),(0,o.kt)("p",null,"These fields are optional."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# optional\nEnv = ''\n# optional\nAppID = ''\n# optional\nServer = []\n# optional\nGRPCAddress = ''\n")),(0,o.kt)("h3",{id:"database"},"Database"),(0,o.kt)("p",null,"To config ",(0,o.kt)("inlineCode",{parentName:"p"},"[SpDB]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"[BsDB]"),", you have to input the ",(0,o.kt)("inlineCode",{parentName:"p"},"user name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"db password"),",",(0,o.kt)("inlineCode",{parentName:"p"},"db address"),"  and  ",(0,o.kt)("inlineCode",{parentName:"p"},"db name")," in these fields."),(0,o.kt)("h3",{id:"piecestore"},"PieceStore"),(0,o.kt)("p",null,"To config ",(0,o.kt)("inlineCode",{parentName:"p"},"[PieceStore]")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"[PieceStore.Store]"),", you can read the details in this ",(0,o.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/storage-provider/run-book/piece-store"},"doc")),(0,o.kt)("h3",{id:"chain-info"},"Chain info"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ChainID")," of mainnet is ",(0,o.kt)("inlineCode",{parentName:"li"},"greenfield_1017-1")," and testnet is ",(0,o.kt)("inlineCode",{parentName:"li"},"greenfield_5600-1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ChainAddress")," is RPC endpoint of mainnet, you can find RPC info ",(0,o.kt)("a",{parentName:"li",href:"/greenfield-docs/docs/api/endpoints"},"here"))),(0,o.kt)("h3",{id:"spaccount"},"SpAccount"),(0,o.kt)("p",null,"These private keys are generated during wallet setup."),(0,o.kt)("h3",{id:"endpoint"},"Endpoint"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"[Endpoint]")," specified the URL of different services."),(0,o.kt)("p",null,"For single-machine host (not recommended):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"[Endpoint]\nApproverEndpoint = ''\nManagerEndpoint = ''\nDownloaderEndpoint = ''\nReceiverEndpoint = ''\nMetadataEndpoint = ''\nUploaderEndpoint = ''\nP2PEndpoint = ''\nSignerEndpoint = ''\nAuthenticatorEndpoint = ''\n")),(0,o.kt)("p",null,"For K8S cluster:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"[Endpoint]\nApproverEndpoint = 'manager:9333'\nManagerEndpoint = 'manager:9333'\nDownloaderEndpoint = 'downloader:9333'\nReceiverEndpoint = 'receiver:9333'\nMetadataEndpoint = 'metadata:9333'\nUploaderEndpoint = 'uploader:9333'\nP2PEndpoint = 'p2p:9333'\nSignerEndpoint = 'signer:9333'\nAuthenticatorEndpoint = 'localhost:9333'\n")),(0,o.kt)("h3",{id:"p2p"},"P2P"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We don't use P2P service in mainnet and testnet, so users can ignore P2P items.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"P2PPrivateKey")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"node_id")," is generated by ",(0,o.kt)("inlineCode",{parentName:"li"},"./gnfd-sp p2p.create.key -n 1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"P2PAntAddress")," is your load balance address. If you don't have a load balance address, you should have a public IP and use it in ",(0,o.kt)("inlineCode",{parentName:"li"},"P2PAddress"),". It consists of ",(0,o.kt)("inlineCode",{parentName:"li"},"ip:port"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"P2PBootstrap")," can be left empty.")),(0,o.kt)("h3",{id:"gateway"},"Gateway"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"[Gateway]\nDomainName = 'region.sp-name.com'\n")),(0,o.kt)("p",null,"The correct configuration should not include the protocol prefix ",(0,o.kt)("inlineCode",{parentName:"p"},"https://"),"."),(0,o.kt)("h3",{id:"blocksyncer"},"BlockSyncer"),(0,o.kt)("p",null,"Here is block_syncer config. The configuration of BsDBWriteAddress can be the same as the BSDB.Address module here. To enhance performance, you can set up the write database address here and the corresponding read database address in BSDB."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"Modules = ['epoch','bucket','object','payment','group','permission','storage_provider','prefix_tree', 'virtual_group','sp_exit_events','object_id_map']\nWorkers = 50\nBsDBWriteAddress = 'localhost:3306'\n")),(0,o.kt)("h3",{id:"fundingprivatekey"},"FundingPrivateKey"),(0,o.kt)("p",null,"There is no need to write ",(0,o.kt)("inlineCode",{parentName:"p"},"FundingPrivateKey")," in config.toml. It should be kept in cold wallet for safety."),(0,o.kt)("h3",{id:"rcmgr"},"Rcmgr"),(0,o.kt)("p",null,"ResourceManager manages resources within SP system, tracking and accounting for usage across the stack, from internal components to applications. It also allows for resource usage to be limited based on user-configurable policies. Config schema shows as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-proto"},"message GfSpLimit {\n  int64 memory = 1;\n  int32 tasks = 2;\n  int32 tasks_high_priority = 3;\n  int32 tasks_medium_priority = 4;\n  int32 tasks_low_priority = 5;\n  int32 fd = 6;\n  int32 conns = 7;\n  int32 conns_inbound = 8;\n  int32 conns_outbound = 9;\n}\n\nmessage GfSpLimiter {\n  GfSpLimit system = 1;\n  GfSpLimit transient = 2;\n  map<string, GfSpLimit> service_limit = 3;\n}\n")),(0,o.kt)("h3",{id:"sp-probe"},"SP Probe"),(0,o.kt)("p",null,"It contains two probes: liveness and readiness probe. If users want to check SP whether is healthy and ready. Users can refer ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/"},"Kubernetes docs")," to learn related concepts. About detailed SP probe info, users can refer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield-storage-provider/blob/master/core/prober/prober.go"},"SP probe"),"."),(0,o.kt)("h2",{id:"sp-mainnet-recommended-config"},"SP Mainnet Recommended Config"),(0,o.kt)("p",null,"This section shows the config of official in Greenfield, so users can add use similar config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"# optional\nEnv = \"mainnet\"\n# optional\nServer = []\n# optional\nGRPCAddress = '0.0.0.0:9333'\n\n[SpDB]\n# required\nUser = ''\n# required\nPasswd = ''\n# required\nAddress = '{your_db_address}'\n# required\nDatabase = 'storage_provider_db'\n\n[BsDB]\n# required\nUser = ''\n# required\nPasswd = ''\n# required\nAddress = '{your_db_address}'\n# required\nDatabase = 'block_syncer'\n\n[PieceStore]\n# required\nShards = 0\n\n[PieceStore.Store]\n# required\nStorage = 's3'\n# optional\nBucketURL = '{your_bucker_url}'\n# optional\nMaxRetries = 5\n# optional\nMinRetryDelay = 0\n# optional\nTLSInsecureSkipVerify = false\n# required\nIAMType = 'SA'\n\n[Chain]\n# required\nChainID = 'greenfield_1017-1'\n# required\nChainAddress = ['{your_fullnode_address}']\n\n[SpAccount]\n# required\nSpOperatorAddress = '{your_operator_address}'\n# required\n# OperatorPrivateKey = ''\n# required\n# SealPrivateKey = ''\n# required\n# ApprovalPrivateKey = ''\n# required\n# GcPrivateKey = ''\n\n[Endpoint]\n# required\nApproverEndpoint = 'approver:9333'\n# required\nManagerEndpoint = 'manager:9333'\n# required\nDownloaderEndpoint = 'downloader:9333'\n# required\nReceiverEndpoint = 'receiver:9333'\n# required\nMetadataEndpoint = 'metadata:9333'\n# required\nUploaderEndpoint = 'uploader:9333'\n# required\nP2PEndpoint = 'p2p-service:9333'\n# required\nSignerEndpoint = 'signer:9333'\n# required\nAuthenticatorEndpoint = 'localhost:9333'\n\n[Gateway]\n# required\nDomainName = '{your_domain_name}'\n# required\nHTTPAddress = '0.0.0.0:9033'\n\n[P2P]\n# optional\n#P2PPrivateKey = ''\n# optional\nP2PAddress = '0.0.0.0:9933'\n# optional\nP2PAntAddress = ''\n# optional\nP2PBootstrap = []\n# optional\n# P2PPingPeriod = 0\n\n[Parallel]\n# optional\nDiscontinueBucketEnabled = false\n# optional\nDiscontinueBucketKeepAliveDays = 365\n# optional\nGlobalMaxUploadingParallel = 3072\n# optional\nUploadObjectParallelPerNode = 100\n# optional\nReceivePieceParallelPerNode = 1024\n# optional\nDownloadObjectParallelPerNode = 200\n# optional\nChallengePieceParallelPerNode = 200\n# optional\nAskReplicateApprovalParallelPerNode = 10240\n# optional\nGlobalCreateBucketApprovalParallel = 1024\n# optional\nGlobalCreateObjectApprovalParallel = 1024\n# optional\nGlobalUploadObjectParallel = 1024\n# optional\nGlobalReplicatePieceParallel = 1024\n# optional\nGlobalSealObjectParallel = 1024\n# optional\nGlobalReceiveObjectParallel = 10240\n# optional\nGlobalBackupTaskParallel = 1024\n# optional\nGlobalRecoveryPieceParallel = 1024\n# optional\nGlobalGcObjectSafeBlockDistance = 64\n# optional\nGlobalMigrateGVGParallel = 10\n\n[Monitor]\n# required\nDisableMetrics = false\n# required\nDisablePProf = false\n# required\nDisableProbe = false\n# required\nMetricsHTTPAddress = '0.0.0.0:24367'\n# required\nPProfHTTPAddress = '0.0.0.0:24368'\n# required\nProbeHTTPAddress = '0.0.0.0:24369'\n\n# optional\n[Rcmgr]\n# optional\nDisableRcmgr = false\n# optional\n[Rcmgr.GfSpLimiter]\n# optional\n[Rcmgr.GfSpLimiter.System]\n# optional\nMemory = 4294967296\n# optional\nTasks = 10240\n# optional\nTasksHighPriority = 128\n# optional\nTasksMediumPriority = 1024\n# optional\nTasksLowPriority = 16\n# optional\nFd = 2147483647\n# optional\nConns = 2147483647\n# optional\nConnsInbound = 2147483647\n# optional\nConnsOutbound = 2147483647\n\n[BlockSyncer]\n# required\nModules = ['epoch','bucket','object','payment','group','permission','storage_provider','prefix_tree','virtual_group','sp_exit_events','object_id_map']\n# required\nWorkers = 50\n# optional\nBsDBWriteAddress = \"{your_db_address}\"\n\n[APIRateLimiter]\n# optional\nPathPattern = [{Key = \"/auth/request_nonce\", RateLimit = 100, RatePeriod = 'S'}, {Key = \"/auth/update_key\", RateLimit = 100, RatePeriod = 'S'},\n{Key = \"/permission/.+/[^/]*/.+\", RateLimit = 100, RatePeriod = 'S'},{Key = \"/greenfield/admin/v1/get-approval\", RateLimit = 100, RatePeriod = 'S'},\n{Key = \"/greenfield/admin/v1/challenge\", RateLimit = 20, RatePeriod = 'S'},\n{Key = \"/greenfield/admin/v2/challenge\", RateLimit = 20, RatePeriod = 'S'},\n{Key = \"/greenfield/receiver/v1/replicate-piece\", RateLimit = 100, RatePeriod = 'S'},{Key = \"/greenfield/recovery/v1/get-piece\", RateLimit = 50, RatePeriod = 'S'},\n{Key = \"/greenfield/migrate/v1/notify-migrate-swap-out-task\", RateLimit = 10, RatePeriod = 'S'},{Key = \"/greenfield/migrate/v1/migrate-piece\", RateLimit = 10, RatePeriod = 'S'},\n{Key = \"/greenfield/migrate/v1/migration-bucket-approval\", RateLimit = 10, RatePeriod = 'S'},{Key = \"/greenfield/migrate/v1/get-swap-out-approval\", RateLimit = 10, RatePeriod = 'S'},\n{Key = \"/download/[^/]*/.+\", RateLimit = 150, RatePeriod = 'S'},{Key = \"/download\", RateLimit = 150, RatePeriod = 'S'},\n{Key = \"/view/[^/]*/.+\", RateLimit = 150, RatePeriod = 'S'},{Key = \"/view\", RateLimit = 150, RatePeriod = 'S'},\n{Key = \"/status\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/.+/.+[?]offset.*\", RateLimit = 20, RatePeriod = 'S'},\n{Key = \"/.+/.+[?]upload-context.*\", RateLimit = 20, RatePeriod = 'S'},{Key = \"/.+/.+[?]upload-progress.*\", RateLimit = 20, RatePeriod = 'S'},\n{Key = \"/.+/.+[?]bucket-meta.*\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/.+/.+[?]object-meta.*\", RateLimit = 200, RatePeriod = 'S'},\n{Key = \"/.+/.+\", RateLimit = 150, RatePeriod = 'S'},{Key = \"/.+[?]read-quota.*\", RateLimit = 100, RatePeriod = 'S'},{Key = \"/.+[?]list-read-quota.*\", RateLimit = 100, RatePeriod = 'S'},\n{Key = \"/.+/$\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/[?].*group-query.*\", RateLimit = 200, RatePeriod = 'S'},\n{Key = \"/[?].*objects-query.*\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/[?].*buckets-query.*\", RateLimit = 200, RatePeriod = 'S'},\n{Key = \"/[?].*verify-id.*\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/[?].*user-groups.*\", RateLimit = 200, RatePeriod = 'S'},\n{Key = \"/[?].*group-members.*\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/[?].*owned-groups.*\", RateLimit = 200, RatePeriod = 'S'},\n{Key = \"/$\", RateLimit = 200, RatePeriod = 'S'},{Key = \"/.+\", RateLimit = 200, RatePeriod = 'S'}]\n# optional\nHostPattern = []\n\n[Manager]\n# optional\nEnableLoadTask = true\n# optional\nGVGPreferSPList = [1,2,3,4,5,6,7]\n# optional\nEnableTaskRetryScheduler = true\n\n[Executor]\n# optional\nListenSealRetryTimeout = 30\n")))}u.isMDXComponent=!0}}]);