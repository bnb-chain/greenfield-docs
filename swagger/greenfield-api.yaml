openapi: 3.0.1
info:
  title: Greenfield - gRPC Gateway docs
  description: A REST interface for state queries
  version: 1.0.0
servers:
- url: https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org

paths:
  /greenfield/bridge/params:
    get:
      tags:
      - Query
      summary: Parameters queries the parameters of the module.
      operationId: BridgeParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      transfer_out_relayer_fee:
                        title: Relayer fee for the cross chain transfer out tx
                        type: string
                      transfer_out_ack_relayer_fee:
                        title: Relayer fee for the ACK or FAIL_ACK package of the
                          cross chain transfer out tx
                        type: string
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/auto_settle_record:
    get:
      tags:
      - Query
      summary: Queries a list of AutoSettleRecord items.
      operationId: AutoSettleRecordAll
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  auto_settle_record:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: timestamp is the unix timestamp when the stream
                            account will be settled.
                          format: int64
                        addr:
                          title: A stream account address
                          type: string
                      description: |-
                        AutoSettleRecord is the record keeps the auto settle information.
                        The EndBlocker of payment module will scan the list of AutoSettleRecord
                        and settle the stream account if the timestamp is less than the current time.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/dynamic_balance/{account}:
    get:
      tags:
      - Query
      summary: Queries a list of DynamicBalance items.
      operationId: DynamicBalance
      parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  dynamic_balance:
                    title: dynamic balance is static balance + flowDelta
                    type: string
                  stream_record:
                    title: the stream record of the given account, if it does not
                      exist, it will be default values
                    type: object
                    properties:
                      account:
                        title: account address
                        type: string
                      crud_timestamp:
                        title: latest update timestamp of the stream record
                        type: string
                        format: int64
                      netflow_rate:
                        type: string
                        description: |-
                          The per-second rate that an account's balance is changing.
                          It is the sum of the account's inbound and outbound flow rates.
                      static_balance:
                        type: string
                        description: The balance of the stream account at the latest
                          CRUD timestamp.
                      buffer_balance:
                        title: |-
                          reserved balance of the stream account
                          If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
                        type: string
                      lock_balance:
                        title: the locked balance of the stream account after it puts
                          a new object and before the object is sealed
                        type: string
                      status:
                        title: the status of the stream account
                        type: string
                        description: |-
                          - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                           - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                          A frozen stream account cannot be used as payment address for buckets.
                          It can be unfrozen by depositing more BNB to the stream account.
                        default: STREAM_ACCOUNT_STATUS_ACTIVE
                        enum:
                        - STREAM_ACCOUNT_STATUS_ACTIVE
                        - STREAM_ACCOUNT_STATUS_FROZEN
                      settle_timestamp:
                        title: the unix timestamp when the stream account will be
                          settled
                        type: string
                        format: int64
                      out_flows:
                        title: the accumulated outflow rates of the stream account
                        type: array
                        items:
                          title: |-
                            OutFlow defines the accumulative outflow stream rate in BNB
                            from a stream account to a Storage Provider
                          type: object
                          properties:
                            to_address:
                              title: stream account address who receives the flow,
                                usually SP(service provider)
                              type: string
                            rate:
                              title: flow rate
                              type: string
                  current_timestamp:
                    title: the timestamp of the current block
                    type: string
                    format: int64
                  bank_balance:
                    title: bank_balance is the BNB balance of the bank module
                    type: string
                  available_balance:
                    title: available_balance is bank balance + static balance
                    type: string
                  locked_fee:
                    title: locked_fee is buffer balance + locked balance
                    type: string
                  change_rate:
                    title: change_rate is the netflow rate of the given account
                    type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/get_payment_accounts_by_owner/{owner}:
    get:
      tags:
      - Query
      summary: Queries a list of GetPaymentAccountsByOwner items.
      operationId: GetPaymentAccountsByOwner
      parameters:
      - name: owner
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  paymentAccounts:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/params:
    get:
      tags:
      - Query
      summary: Parameters queries the parameters of the module.
      operationId: PaymentParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      reserve_time:
                        title: Time duration which the buffer balance need to be reserved
                          for NetOutFlow e.g. 6 month
                        type: string
                        format: uint64
                      payment_account_count_limit:
                        title: The maximum number of payment accounts that can be
                          created by one user
                        type: string
                        format: uint64
                      forced_settle_time:
                        type: string
                        description: |-
                          Time duration threshold of forced settlement.
                          If dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled.
                        format: uint64
                      max_auto_force_settle_num:
                        title: the maximum number of accounts that will be forced
                          settled in one block
                        type: string
                        format: uint64
                      fee_denom:
                        title: The denom of fee charged in payment module
                        type: string
                      validator_tax_rate:
                        title: The tax rate to pay for validators in storage payment.
                          The default value is 1%(0.01)
                        type: string
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/payment_account:
    get:
      tags:
      - Query
      summary: Queries a list of PaymentAccount items.
      operationId: PaymentAccountAll
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  payment_account:
                    type: array
                    items:
                      title: PaymentAccount defines a payment account
                      type: object
                      properties:
                        addr:
                          title: the address of the payment account
                          type: string
                        owner:
                          title: the owner address of the payment account
                          type: string
                        refundable:
                          title: whether the payment account is refundable
                          type: boolean
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/payment_account/{addr}:
    get:
      tags:
      - Query
      summary: Queries a PaymentAccount by index.
      operationId: PaymentAccount
      parameters:
      - name: addr
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  payment_account:
                    title: PaymentAccount defines a payment account
                    type: object
                    properties:
                      addr:
                        title: the address of the payment account
                        type: string
                      owner:
                        title: the owner address of the payment account
                        type: string
                      refundable:
                        title: whether the payment account is refundable
                        type: boolean
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/payment_account_count:
    get:
      tags:
      - Query
      summary: Queries a list of PaymentAccountCount items.
      operationId: PaymentAccountCountAll
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  payment_account_count:
                    type: array
                    items:
                      title: PaymentAccountCount defines the state struct which stores
                        the number of payment accounts for an account
                      type: object
                      properties:
                        owner:
                          title: owner is the account address
                          type: string
                        count:
                          title: count is the number of payment accounts for the account
                          type: string
                          format: uint64
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/payment_account_count/{owner}:
    get:
      tags:
      - Query
      summary: Queries a PaymentAccountCount by index.
      operationId: PaymentAccountCount
      parameters:
      - name: owner
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  payment_account_count:
                    title: PaymentAccountCount defines the state struct which stores
                      the number of payment accounts for an account
                    type: object
                    properties:
                      owner:
                        title: owner is the account address
                        type: string
                      count:
                        title: count is the number of payment accounts for the account
                        type: string
                        format: uint64
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/stream_record:
    get:
      tags:
      - Query
      summary: Queries a list of StreamRecord items.
      operationId: StreamRecordAll
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  stream_record:
                    type: array
                    items:
                      title: Stream Payment Record of a stream account
                      type: object
                      properties:
                        account:
                          title: account address
                          type: string
                        crud_timestamp:
                          title: latest update timestamp of the stream record
                          type: string
                          format: int64
                        netflow_rate:
                          type: string
                          description: |-
                            The per-second rate that an account's balance is changing.
                            It is the sum of the account's inbound and outbound flow rates.
                        static_balance:
                          type: string
                          description: The balance of the stream account at the latest
                            CRUD timestamp.
                        buffer_balance:
                          title: |-
                            reserved balance of the stream account
                            If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
                          type: string
                        lock_balance:
                          title: the locked balance of the stream account after it
                            puts a new object and before the object is sealed
                          type: string
                        status:
                          title: the status of the stream account
                          type: string
                          description: |-
                            - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                             - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                            A frozen stream account cannot be used as payment address for buckets.
                            It can be unfrozen by depositing more BNB to the stream account.
                          default: STREAM_ACCOUNT_STATUS_ACTIVE
                          enum:
                          - STREAM_ACCOUNT_STATUS_ACTIVE
                          - STREAM_ACCOUNT_STATUS_FROZEN
                        settle_timestamp:
                          title: the unix timestamp when the stream account will be
                            settled
                          type: string
                          format: int64
                        out_flows:
                          title: the accumulated outflow rates of the stream account
                          type: array
                          items:
                            title: |-
                              OutFlow defines the accumulative outflow stream rate in BNB
                              from a stream account to a Storage Provider
                            type: object
                            properties:
                              to_address:
                                title: stream account address who receives the flow,
                                  usually SP(service provider)
                                type: string
                              rate:
                                title: flow rate
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/payment/stream_record/{account}:
    get:
      tags:
      - Query
      summary: Queries a StreamRecord by index.
      operationId: StreamRecord
      parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  stream_record:
                    title: Stream Payment Record of a stream account
                    type: object
                    properties:
                      account:
                        title: account address
                        type: string
                      crud_timestamp:
                        title: latest update timestamp of the stream record
                        type: string
                        format: int64
                      netflow_rate:
                        type: string
                        description: |-
                          The per-second rate that an account's balance is changing.
                          It is the sum of the account's inbound and outbound flow rates.
                      static_balance:
                        type: string
                        description: The balance of the stream account at the latest
                          CRUD timestamp.
                      buffer_balance:
                        title: |-
                          reserved balance of the stream account
                          If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
                        type: string
                      lock_balance:
                        title: the locked balance of the stream account after it puts
                          a new object and before the object is sealed
                        type: string
                      status:
                        title: the status of the stream account
                        type: string
                        description: |-
                          - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                           - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                          A frozen stream account cannot be used as payment address for buckets.
                          It can be unfrozen by depositing more BNB to the stream account.
                        default: STREAM_ACCOUNT_STATUS_ACTIVE
                        enum:
                        - STREAM_ACCOUNT_STATUS_ACTIVE
                        - STREAM_ACCOUNT_STATUS_FROZEN
                      settle_timestamp:
                        title: the unix timestamp when the stream account will be
                          settled
                        type: string
                        format: int64
                      out_flows:
                        title: the accumulated outflow rates of the stream account
                        type: array
                        items:
                          title: |-
                            OutFlow defines the accumulative outflow stream rate in BNB
                            from a stream account to a Storage Provider
                          type: object
                          properties:
                            to_address:
                              title: stream account address who receives the flow,
                                usually SP(service provider)
                              type: string
                            rate:
                              title: flow rate
                              type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/sp/get_secondary_sp_store_price_by_time/{timestamp}:
    get:
      tags:
      - Query
      summary: get secondary store price by time
      operationId: QueryGetSecondarySpStorePriceByTime
      parameters:
      - name: timestamp
        in: path
        description: unix timestamp in seconds. If it's 0, it will return the latest
          price.
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  secondary_sp_store_price:
                    title: global secondary sp store price, the price for all secondary
                      sps
                    type: object
                    properties:
                      update_time_sec:
                        title: update time, unix timestamp in seconds
                        type: string
                        format: int64
                      store_price:
                        title: store price, in bnb wei per charge byte
                        type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/sp/get_sp_storage_price_by_time/{sp_addr}/{timestamp}:
    get:
      tags:
      - Query
      summary: get storage price of specific sp and time
      operationId: QueryGetSpStoragePriceByTime
      parameters:
      - name: sp_addr
        in: path
        description: operator address of sp
        required: true
        schema:
          type: string
      - name: timestamp
        in: path
        description: unix timestamp in seconds. If it's 0, it will return the latest
          price.
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  sp_storage_price:
                    title: storage price of a specific sp
                    type: object
                    properties:
                      sp_address:
                        title: sp address
                        type: string
                      update_time_sec:
                        title: update time, unix timestamp in seconds
                        type: string
                        format: int64
                      read_price:
                        title: read price, in bnb wei per charge byte
                        type: string
                      free_read_quota:
                        title: free read quota, in byte
                        type: string
                        format: uint64
                      store_price:
                        title: store price, in bnb wei per charge byte
                        type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/sp/params:
    get:
      tags:
      - Query
      summary: Parameters queries the parameters of the module.
      operationId: SpParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      deposit_denom:
                        type: string
                        description: deposit_denom defines the staking coin denomination.
                      min_deposit:
                        type: string
                        description: min_deposit defines the minimum deposit amount
                          for storage providers.
                      secondary_sp_store_price_ratio:
                        title: the ratio of the store price of the secondary sp to
                          the primary sp, the default value is 80%
                        type: string
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage_provider/{spAddress}:
    get:
      tags:
      - Query
      summary: Queries a storage provider with specify address
      operationId: StorageProvider
      parameters:
      - name: spAddress
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  storageProvider:
                    title: StorageProvider defines the meta info of storage provider
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the account address
                          of the storage provider's operator; It also is the unique
                          index key of sp.
                      funding_address:
                        type: string
                        description: funding_address defines one of the storage provider's
                          accounts which is used to deposit and reward.
                      seal_address:
                        title: seal_address defines one of the storage provider's
                          accounts which is used to SealObject
                        type: string
                      approval_address:
                        title: approval_address defines one of the storage provider's
                          accounts which is used to approve use's createBucket/createObject
                          request
                        type: string
                      gc_address:
                        type: string
                        description: gc_address defines one of the storage provider's
                          accounts which is used for gc purpose.
                      total_deposit:
                        type: string
                        description: total_deposit defines the number of tokens deposited
                          by this storage provider for staking.
                      status:
                        title: status defines the current service status of this storage
                          provider
                        type: string
                        description: Status is the status of a storage provider.
                        default: STATUS_IN_SERVICE
                        enum:
                        - STATUS_IN_SERVICE
                        - STATUS_IN_JAILED
                        - STATUS_GRACEFUL_EXITING
                        - STATUS_OUT_OF_SERVICE
                      endpoint:
                        title: endpoint define the storage provider's network service
                          address
                        type: string
                      description:
                        type: object
                        properties:
                          moniker:
                            title: moniker defines a human-readable name for the storage
                              provider
                            type: string
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the storage provider.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage_providers:
    get:
      tags:
      - Query
      summary: Queries a list of GetStorageProviders items.
      operationId: StorageProviders
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  sps:
                    type: array
                    items:
                      title: StorageProvider defines the meta info of storage provider
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the account address
                            of the storage provider's operator; It also is the unique
                            index key of sp.
                        funding_address:
                          type: string
                          description: funding_address defines one of the storage
                            provider's accounts which is used to deposit and reward.
                        seal_address:
                          title: seal_address defines one of the storage provider's
                            accounts which is used to SealObject
                          type: string
                        approval_address:
                          title: approval_address defines one of the storage provider's
                            accounts which is used to approve use's createBucket/createObject
                            request
                          type: string
                        gc_address:
                          type: string
                          description: gc_address defines one of the storage provider's
                            accounts which is used for gc purpose.
                        total_deposit:
                          type: string
                          description: total_deposit defines the number of tokens
                            deposited by this storage provider for staking.
                        status:
                          title: status defines the current service status of this
                            storage provider
                          type: string
                          description: Status is the status of a storage provider.
                          default: STATUS_IN_SERVICE
                          enum:
                          - STATUS_IN_SERVICE
                          - STATUS_IN_JAILED
                          - STATUS_GRACEFUL_EXITING
                          - STATUS_OUT_OF_SERVICE
                        endpoint:
                          title: endpoint define the storage provider's network service
                            address
                          type: string
                        description:
                          type: object
                          properties:
                            moniker:
                              title: moniker defines a human-readable name for the
                                storage provider
                              type: string
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the storage provider.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_bucket/{bucket_name}:
    get:
      tags:
      - Query
      summary: Queries a bucket with specify name.
      operationId: HeadBucket
      parameters:
      - name: bucket_name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  bucket_info:
                    type: object
                    properties:
                      owner:
                        type: string
                        description: owner is the account address of bucket creator,
                          it is also the bucket owner.
                      bucket_name:
                        title: bucket_name is a globally unique name of bucket
                        type: string
                      visibility:
                        type: string
                        description: visibility defines the highest permissions for
                          bucket. When a bucket is public, everyone can get storage
                          objects in it.
                        default: VISIBILITY_TYPE_UNSPECIFIED
                        enum:
                        - VISIBILITY_TYPE_UNSPECIFIED
                        - VISIBILITY_TYPE_PUBLIC_READ
                        - VISIBILITY_TYPE_PRIVATE
                        - VISIBILITY_TYPE_INHERIT
                      id:
                        type: string
                        description: id is the unique identification for bucket.
                      source_type:
                        title: source_type defines which chain the user should send
                          the bucket management transactions to
                        type: string
                        default: SOURCE_TYPE_ORIGIN
                        enum:
                        - SOURCE_TYPE_ORIGIN
                        - SOURCE_TYPE_BSC_CROSS_CHAIN
                        - SOURCE_TYPE_MIRROR_PENDING
                      create_at:
                        type: string
                        description: create_at define the block timestamp when the
                          bucket created.
                        format: int64
                      payment_address:
                        title: payment_address is the address of the payment account
                        type: string
                      primary_sp_address:
                        type: string
                        description: |-
                          primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
                          leave this SP, unless you explicitly shift them to another SP.
                      charged_read_quota:
                        type: string
                        description: |-
                          charged_read_quota defines the traffic quota for read in bytes per month.
                          The available read data for each user is the sum of the free read data provided by SP and
                          the ChargeReadQuota specified here.
                        format: uint64
                      billing_info:
                        title: billing info of the bucket
                        type: object
                        properties:
                          price_time:
                            title: the time of the payment price, used to calculate
                              the charge rate of the bucket
                            type: string
                            format: int64
                          total_charge_size:
                            title: the total size of the objects in the bucket, used
                              to calculate the charge rate of the bucket
                            type: string
                            format: uint64
                          secondary_sp_objects_size:
                            title: secondary sp objects size statistics
                            type: array
                            items:
                              title: secondary sp objects size statistics
                              type: object
                              properties:
                                sp_address:
                                  title: address is the address of the secondary sp
                                  type: string
                                total_charge_size:
                                  title: size is the total size of the objects in
                                    the secondary sp
                                  type: string
                                  format: uint64
                      bucket_status:
                        type: string
                        description: bucket_status define the status of the bucket.
                        default: BUCKET_STATUS_CREATED
                        enum:
                        - BUCKET_STATUS_CREATED
                        - BUCKET_STATUS_DISCONTINUED
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_bucket_by_id/{bucket_id}:
    get:
      tags:
      - Query
      summary: Queries a bucket by id
      operationId: HeadBucketById
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  bucket_info:
                    type: object
                    properties:
                      owner:
                        type: string
                        description: owner is the account address of bucket creator,
                          it is also the bucket owner.
                      bucket_name:
                        title: bucket_name is a globally unique name of bucket
                        type: string
                      visibility:
                        type: string
                        description: visibility defines the highest permissions for
                          bucket. When a bucket is public, everyone can get storage
                          objects in it.
                        default: VISIBILITY_TYPE_UNSPECIFIED
                        enum:
                        - VISIBILITY_TYPE_UNSPECIFIED
                        - VISIBILITY_TYPE_PUBLIC_READ
                        - VISIBILITY_TYPE_PRIVATE
                        - VISIBILITY_TYPE_INHERIT
                      id:
                        type: string
                        description: id is the unique identification for bucket.
                      source_type:
                        title: source_type defines which chain the user should send
                          the bucket management transactions to
                        type: string
                        default: SOURCE_TYPE_ORIGIN
                        enum:
                        - SOURCE_TYPE_ORIGIN
                        - SOURCE_TYPE_BSC_CROSS_CHAIN
                        - SOURCE_TYPE_MIRROR_PENDING
                      create_at:
                        type: string
                        description: create_at define the block timestamp when the
                          bucket created.
                        format: int64
                      payment_address:
                        title: payment_address is the address of the payment account
                        type: string
                      primary_sp_address:
                        type: string
                        description: |-
                          primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
                          leave this SP, unless you explicitly shift them to another SP.
                      charged_read_quota:
                        type: string
                        description: |-
                          charged_read_quota defines the traffic quota for read in bytes per month.
                          The available read data for each user is the sum of the free read data provided by SP and
                          the ChargeReadQuota specified here.
                        format: uint64
                      billing_info:
                        title: billing info of the bucket
                        type: object
                        properties:
                          price_time:
                            title: the time of the payment price, used to calculate
                              the charge rate of the bucket
                            type: string
                            format: int64
                          total_charge_size:
                            title: the total size of the objects in the bucket, used
                              to calculate the charge rate of the bucket
                            type: string
                            format: uint64
                          secondary_sp_objects_size:
                            title: secondary sp objects size statistics
                            type: array
                            items:
                              title: secondary sp objects size statistics
                              type: object
                              properties:
                                sp_address:
                                  title: address is the address of the secondary sp
                                  type: string
                                total_charge_size:
                                  title: size is the total size of the objects in
                                    the secondary sp
                                  type: string
                                  format: uint64
                      bucket_status:
                        type: string
                        description: bucket_status define the status of the bucket.
                        default: BUCKET_STATUS_CREATED
                        enum:
                        - BUCKET_STATUS_CREATED
                        - BUCKET_STATUS_DISCONTINUED
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_bucket_nft/{token_id}:
    get:
      tags:
      - Query
      summary: Queries a bucket with EIP712 standard metadata info
      operationId: HeadBucketNFT
      parameters:
      - name: token_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  meta_data:
                    type: object
                    properties:
                      description:
                        title: description
                        type: string
                      external_url:
                        title: externalUrl a link to external site to view NFT
                        type: string
                      bucket_name:
                        title: name of bucket NFT
                        type: string
                      image:
                        title: image is the link to image
                        type: string
                      attributes:
                        title: attributes
                        type: array
                        items:
                          type: object
                          properties:
                            trait_type:
                              type: string
                            value:
                              type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_group/{group_owner}/{group_name}:
    get:
      tags:
      - Query
      summary: Queries a group with specify owner and name .
      operationId: HeadGroup
      parameters:
      - name: group_owner
        in: path
        required: true
        schema:
          type: string
      - name: group_name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  group_info:
                    type: object
                    properties:
                      owner:
                        type: string
                        description: owner is the owner of the group. It can not changed
                          once it created.
                      group_name:
                        type: string
                        description: group_name is the name of group which is unique
                          under an account.
                      source_type:
                        title: source_type
                        type: string
                        default: SOURCE_TYPE_ORIGIN
                        enum:
                        - SOURCE_TYPE_ORIGIN
                        - SOURCE_TYPE_BSC_CROSS_CHAIN
                        - SOURCE_TYPE_MIRROR_PENDING
                      id:
                        title: id is the unique identifier of group
                        type: string
                      extra:
                        title: extra is used to store extra info for the group
                        type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_group_member:
    get:
      tags:
      - Query
      summary: Queries a list of HeadGroupMember items.
      operationId: HeadGroupMember
      parameters:
      - name: member
        in: query
        schema:
          type: string
      - name: group_owner
        in: query
        schema:
          type: string
      - name: group_name
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  group_member:
                    type: object
                    properties:
                      id:
                        title: id is an unique u256 sequence for each group member.
                          It also be used as NFT tokenID
                        type: string
                      group_id:
                        title: group_id is the unique id of the group
                        type: string
                      member:
                        title: member is the account address of the member
                        type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_group_nft/{token_id}:
    get:
      tags:
      - Query
      summary: Queries a group with EIP712 standard metadata info
      operationId: HeadGroupNFT
      parameters:
      - name: token_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  meta_data:
                    type: object
                    properties:
                      description:
                        title: description
                        type: string
                      external_url:
                        title: externalUrl a link to external site to view NFT
                        type: string
                      group_name:
                        title: name of group NFT
                        type: string
                      image:
                        title: image is the link to image
                        type: string
                      attributes:
                        title: attributes
                        type: array
                        items:
                          type: object
                          properties:
                            trait_type:
                              type: string
                            value:
                              type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_object/{bucket_name}/{object_name}:
    get:
      tags:
      - Query
      summary: Queries a object with specify name.
      operationId: HeadObject
      parameters:
      - name: bucket_name
        in: path
        required: true
        schema:
          type: string
      - name: object_name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  object_info:
                    type: object
                    properties:
                      owner:
                        type: string
                      bucket_name:
                        title: bucket_name is the name of the bucket
                        type: string
                      object_name:
                        title: object_name is the name of object
                        type: string
                      id:
                        title: id is the unique identifier of object
                        type: string
                      payload_size:
                        title: payloadSize is the total size of the object payload
                        type: string
                        format: uint64
                      visibility:
                        type: string
                        description: visibility defines the highest permissions for
                          object. When an object is public, everyone can access it.
                        default: VISIBILITY_TYPE_UNSPECIFIED
                        enum:
                        - VISIBILITY_TYPE_UNSPECIFIED
                        - VISIBILITY_TYPE_PUBLIC_READ
                        - VISIBILITY_TYPE_PRIVATE
                        - VISIBILITY_TYPE_INHERIT
                      content_type:
                        type: string
                        description: content_type define the format of the object
                          which should be a standard MIME type.
                      create_at:
                        title: create_at define the block timestamp when the object
                          is created
                        type: string
                        format: int64
                      object_status:
                        type: string
                        description: object_status define the upload status of the
                          object.
                        default: OBJECT_STATUS_CREATED
                        enum:
                        - OBJECT_STATUS_CREATED
                        - OBJECT_STATUS_SEALED
                        - OBJECT_STATUS_DISCONTINUED
                      redundancy_type:
                        type: string
                        description: redundancy_type define the type of the redundancy
                          which can be multi-replication or EC.
                        default: REDUNDANCY_EC_TYPE
                        enum:
                        - REDUNDANCY_EC_TYPE
                        - REDUNDANCY_REPLICA_TYPE
                      source_type:
                        title: |-
                          SourceType represents the source of resource creation, which can
                          from Greenfield native or from a cross-chain transfer from BSC
                        type: string
                        description: source_type define the source of the object.
                        default: SOURCE_TYPE_ORIGIN
                        enum:
                        - SOURCE_TYPE_ORIGIN
                        - SOURCE_TYPE_BSC_CROSS_CHAIN
                        - SOURCE_TYPE_MIRROR_PENDING
                      checksums:
                        title: |-
                          checksums define the root hash of the pieces which stored in a SP.
                          add omit tag to omit the field when converting to NFT metadata
                        type: array
                        items:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      secondary_sp_addresses:
                        title: secondary_sp_addresses define the addresses of secondary_sps
                        type: array
                        items:
                          type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_object_by_id/{object_id}:
    get:
      tags:
      - Query
      summary: Queries an object by id
      operationId: HeadObjectById
      parameters:
      - name: object_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  object_info:
                    type: object
                    properties:
                      owner:
                        type: string
                      bucket_name:
                        title: bucket_name is the name of the bucket
                        type: string
                      object_name:
                        title: object_name is the name of object
                        type: string
                      id:
                        title: id is the unique identifier of object
                        type: string
                      payload_size:
                        title: payloadSize is the total size of the object payload
                        type: string
                        format: uint64
                      visibility:
                        type: string
                        description: visibility defines the highest permissions for
                          object. When an object is public, everyone can access it.
                        default: VISIBILITY_TYPE_UNSPECIFIED
                        enum:
                        - VISIBILITY_TYPE_UNSPECIFIED
                        - VISIBILITY_TYPE_PUBLIC_READ
                        - VISIBILITY_TYPE_PRIVATE
                        - VISIBILITY_TYPE_INHERIT
                      content_type:
                        type: string
                        description: content_type define the format of the object
                          which should be a standard MIME type.
                      create_at:
                        title: create_at define the block timestamp when the object
                          is created
                        type: string
                        format: int64
                      object_status:
                        type: string
                        description: object_status define the upload status of the
                          object.
                        default: OBJECT_STATUS_CREATED
                        enum:
                        - OBJECT_STATUS_CREATED
                        - OBJECT_STATUS_SEALED
                        - OBJECT_STATUS_DISCONTINUED
                      redundancy_type:
                        type: string
                        description: redundancy_type define the type of the redundancy
                          which can be multi-replication or EC.
                        default: REDUNDANCY_EC_TYPE
                        enum:
                        - REDUNDANCY_EC_TYPE
                        - REDUNDANCY_REPLICA_TYPE
                      source_type:
                        title: |-
                          SourceType represents the source of resource creation, which can
                          from Greenfield native or from a cross-chain transfer from BSC
                        type: string
                        description: source_type define the source of the object.
                        default: SOURCE_TYPE_ORIGIN
                        enum:
                        - SOURCE_TYPE_ORIGIN
                        - SOURCE_TYPE_BSC_CROSS_CHAIN
                        - SOURCE_TYPE_MIRROR_PENDING
                      checksums:
                        title: |-
                          checksums define the root hash of the pieces which stored in a SP.
                          add omit tag to omit the field when converting to NFT metadata
                        type: array
                        items:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      secondary_sp_addresses:
                        title: secondary_sp_addresses define the addresses of secondary_sps
                        type: array
                        items:
                          type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/head_object_nft/{token_id}:
    get:
      tags:
      - Query
      summary: Queries a object with EIP712 standard metadata info
      operationId: HeadObjectNFT
      parameters:
      - name: token_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  meta_data:
                    type: object
                    properties:
                      description:
                        title: description
                        type: string
                      external_url:
                        title: externalUrl a link to external site to view NFT
                        type: string
                      object_name:
                        title: name of object NFT
                        type: string
                      image:
                        title: image is the link to image
                        type: string
                      attributes:
                        title: attributes
                        type: array
                        items:
                          type: object
                          properties:
                            trait_type:
                              type: string
                            value:
                              type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/list_buckets:
    get:
      tags:
      - Query
      summary: Queries a list of bucket items.
      operationId: ListBuckets
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  bucket_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        owner:
                          type: string
                          description: owner is the account address of bucket creator,
                            it is also the bucket owner.
                        bucket_name:
                          title: bucket_name is a globally unique name of bucket
                          type: string
                        visibility:
                          type: string
                          description: visibility defines the highest permissions
                            for bucket. When a bucket is public, everyone can get
                            storage objects in it.
                          default: VISIBILITY_TYPE_UNSPECIFIED
                          enum:
                          - VISIBILITY_TYPE_UNSPECIFIED
                          - VISIBILITY_TYPE_PUBLIC_READ
                          - VISIBILITY_TYPE_PRIVATE
                          - VISIBILITY_TYPE_INHERIT
                        id:
                          type: string
                          description: id is the unique identification for bucket.
                        source_type:
                          title: source_type defines which chain the user should send
                            the bucket management transactions to
                          type: string
                          default: SOURCE_TYPE_ORIGIN
                          enum:
                          - SOURCE_TYPE_ORIGIN
                          - SOURCE_TYPE_BSC_CROSS_CHAIN
                          - SOURCE_TYPE_MIRROR_PENDING
                        create_at:
                          type: string
                          description: create_at define the block timestamp when the
                            bucket created.
                          format: int64
                        payment_address:
                          title: payment_address is the address of the payment account
                          type: string
                        primary_sp_address:
                          type: string
                          description: |-
                            primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
                            leave this SP, unless you explicitly shift them to another SP.
                        charged_read_quota:
                          type: string
                          description: |-
                            charged_read_quota defines the traffic quota for read in bytes per month.
                            The available read data for each user is the sum of the free read data provided by SP and
                            the ChargeReadQuota specified here.
                          format: uint64
                        billing_info:
                          title: billing info of the bucket
                          type: object
                          properties:
                            price_time:
                              title: the time of the payment price, used to calculate
                                the charge rate of the bucket
                              type: string
                              format: int64
                            total_charge_size:
                              title: the total size of the objects in the bucket,
                                used to calculate the charge rate of the bucket
                              type: string
                              format: uint64
                            secondary_sp_objects_size:
                              title: secondary sp objects size statistics
                              type: array
                              items:
                                title: secondary sp objects size statistics
                                type: object
                                properties:
                                  sp_address:
                                    title: address is the address of the secondary
                                      sp
                                    type: string
                                  total_charge_size:
                                    title: size is the total size of the objects in
                                      the secondary sp
                                    type: string
                                    format: uint64
                        bucket_status:
                          type: string
                          description: bucket_status define the status of the bucket.
                          default: BUCKET_STATUS_CREATED
                          enum:
                          - BUCKET_STATUS_CREATED
                          - BUCKET_STATUS_DISCONTINUED
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/list_group/{group_owner}:
    get:
      tags:
      - Query
      summary: Queries a list of ListGroup items.
      operationId: ListGroup
      parameters:
      - name: group_owner
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  group_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        owner:
                          type: string
                          description: owner is the owner of the group. It can not
                            changed once it created.
                        group_name:
                          type: string
                          description: group_name is the name of group which is unique
                            under an account.
                        source_type:
                          title: source_type
                          type: string
                          default: SOURCE_TYPE_ORIGIN
                          enum:
                          - SOURCE_TYPE_ORIGIN
                          - SOURCE_TYPE_BSC_CROSS_CHAIN
                          - SOURCE_TYPE_MIRROR_PENDING
                        id:
                          title: id is the unique identifier of group
                          type: string
                        extra:
                          title: extra is used to store extra info for the group
                          type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/list_objects/{bucket_name}:
    get:
      tags:
      - Query
      summary: Queries a list of object items under the bucket.
      operationId: ListObjects
      parameters:
      - name: bucket_name
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  object_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        owner:
                          type: string
                        bucket_name:
                          title: bucket_name is the name of the bucket
                          type: string
                        object_name:
                          title: object_name is the name of object
                          type: string
                        id:
                          title: id is the unique identifier of object
                          type: string
                        payload_size:
                          title: payloadSize is the total size of the object payload
                          type: string
                          format: uint64
                        visibility:
                          type: string
                          description: visibility defines the highest permissions
                            for object. When an object is public, everyone can access
                            it.
                          default: VISIBILITY_TYPE_UNSPECIFIED
                          enum:
                          - VISIBILITY_TYPE_UNSPECIFIED
                          - VISIBILITY_TYPE_PUBLIC_READ
                          - VISIBILITY_TYPE_PRIVATE
                          - VISIBILITY_TYPE_INHERIT
                        content_type:
                          type: string
                          description: content_type define the format of the object
                            which should be a standard MIME type.
                        create_at:
                          title: create_at define the block timestamp when the object
                            is created
                          type: string
                          format: int64
                        object_status:
                          type: string
                          description: object_status define the upload status of the
                            object.
                          default: OBJECT_STATUS_CREATED
                          enum:
                          - OBJECT_STATUS_CREATED
                          - OBJECT_STATUS_SEALED
                          - OBJECT_STATUS_DISCONTINUED
                        redundancy_type:
                          type: string
                          description: redundancy_type define the type of the redundancy
                            which can be multi-replication or EC.
                          default: REDUNDANCY_EC_TYPE
                          enum:
                          - REDUNDANCY_EC_TYPE
                          - REDUNDANCY_REPLICA_TYPE
                        source_type:
                          title: |-
                            SourceType represents the source of resource creation, which can
                            from Greenfield native or from a cross-chain transfer from BSC
                          type: string
                          description: source_type define the source of the object.
                          default: SOURCE_TYPE_ORIGIN
                          enum:
                          - SOURCE_TYPE_ORIGIN
                          - SOURCE_TYPE_BSC_CROSS_CHAIN
                          - SOURCE_TYPE_MIRROR_PENDING
                        checksums:
                          title: |-
                            checksums define the root hash of the pieces which stored in a SP.
                            add omit tag to omit the field when converting to NFT metadata
                          type: array
                          items:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        secondary_sp_addresses:
                          title: secondary_sp_addresses define the addresses of secondary_sps
                          type: array
                          items:
                            type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/list_objects_by_bucket_id/{bucket_id}:
    get:
      tags:
      - Query
      summary: Queries a list of object items under the bucket.
      operationId: ListObjectsByBucketId
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  object_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        owner:
                          type: string
                        bucket_name:
                          title: bucket_name is the name of the bucket
                          type: string
                        object_name:
                          title: object_name is the name of object
                          type: string
                        id:
                          title: id is the unique identifier of object
                          type: string
                        payload_size:
                          title: payloadSize is the total size of the object payload
                          type: string
                          format: uint64
                        visibility:
                          type: string
                          description: visibility defines the highest permissions
                            for object. When an object is public, everyone can access
                            it.
                          default: VISIBILITY_TYPE_UNSPECIFIED
                          enum:
                          - VISIBILITY_TYPE_UNSPECIFIED
                          - VISIBILITY_TYPE_PUBLIC_READ
                          - VISIBILITY_TYPE_PRIVATE
                          - VISIBILITY_TYPE_INHERIT
                        content_type:
                          type: string
                          description: content_type define the format of the object
                            which should be a standard MIME type.
                        create_at:
                          title: create_at define the block timestamp when the object
                            is created
                          type: string
                          format: int64
                        object_status:
                          type: string
                          description: object_status define the upload status of the
                            object.
                          default: OBJECT_STATUS_CREATED
                          enum:
                          - OBJECT_STATUS_CREATED
                          - OBJECT_STATUS_SEALED
                          - OBJECT_STATUS_DISCONTINUED
                        redundancy_type:
                          type: string
                          description: redundancy_type define the type of the redundancy
                            which can be multi-replication or EC.
                          default: REDUNDANCY_EC_TYPE
                          enum:
                          - REDUNDANCY_EC_TYPE
                          - REDUNDANCY_REPLICA_TYPE
                        source_type:
                          title: |-
                            SourceType represents the source of resource creation, which can
                            from Greenfield native or from a cross-chain transfer from BSC
                          type: string
                          description: source_type define the source of the object.
                          default: SOURCE_TYPE_ORIGIN
                          enum:
                          - SOURCE_TYPE_ORIGIN
                          - SOURCE_TYPE_BSC_CROSS_CHAIN
                          - SOURCE_TYPE_MIRROR_PENDING
                        checksums:
                          title: |-
                            checksums define the root hash of the pieces which stored in a SP.
                            add omit tag to omit the field when converting to NFT metadata
                          type: array
                          items:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        secondary_sp_addresses:
                          title: secondary_sp_addresses define the addresses of secondary_sps
                          type: array
                          items:
                            type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/params:
    get:
      tags:
      - Query
      summary: Parameters queries the parameters of the module.
      operationId: StorageParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      versioned_params:
                        type: object
                        properties:
                          max_segment_size:
                            title: 'max_segment_size is the maximum size of a segment.
                              default: 16M'
                            type: string
                            format: uint64
                          redundant_data_chunk_num:
                            title: redundant_data_check_num is the num of data chunks
                              of EC redundancy algorithm
                            type: integer
                            format: int64
                          redundant_parity_chunk_num:
                            title: redundant_data_check_num is the num of parity chunks
                              of EC redundancy algorithm
                            type: integer
                            format: int64
                          min_charge_size:
                            title: min_charge_size is the minimum charge size of the
                              payload, objects smaller than this size will be charged
                              as this size
                            type: string
                            format: uint64
                        description: VersionedParams defines the parameters for the
                          storage module with multi version, each version store with
                          different timestamp.
                      max_payload_size:
                        title: 'max_payload_size is the maximum size of the payload,
                          default: 2G'
                        type: string
                        format: uint64
                      mirror_bucket_relayer_fee:
                        title: relayer fee for the mirror bucket tx
                        type: string
                      mirror_bucket_ack_relayer_fee:
                        title: relayer fee for the ACK or FAIL_ACK package of the
                          mirror bucket tx
                        type: string
                      mirror_object_relayer_fee:
                        title: relayer fee for the mirror object tx
                        type: string
                      mirror_object_ack_relayer_fee:
                        title: Relayer fee for the ACK or FAIL_ACK package of the
                          mirror object tx
                        type: string
                      mirror_group_relayer_fee:
                        title: relayer fee for the mirror object tx
                        type: string
                      mirror_group_ack_relayer_fee:
                        title: Relayer fee for the ACK or FAIL_ACK package of the
                          mirror object tx
                        type: string
                      max_buckets_per_account:
                        title: The maximum number of buckets that can be created per
                          account
                        type: integer
                        format: int64
                      discontinue_counting_window:
                        title: The window to count the discontinued objects or buckets
                        type: string
                        format: uint64
                      discontinue_object_max:
                        title: The max objects can be requested in a window
                        type: string
                        format: uint64
                      discontinue_bucket_max:
                        title: The max buckets can be requested in a window
                        type: string
                        format: uint64
                      discontinue_confirm_period:
                        title: The object will be deleted after the confirm period
                          in seconds
                        type: string
                        format: int64
                      discontinue_deletion_max:
                        title: The max delete objects in each end block
                        type: string
                        format: uint64
                      stale_policy_cleanup_max:
                        title: The max number for deleting policy in each end block
                        type: string
                        format: uint64
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/params/{timestamp}:
    get:
      tags:
      - Query
      summary: Parameters queries the parameters of the module.
      operationId: QueryParamsByTimestamp
      parameters:
      - name: timestamp
        in: path
        description: the timestamp of the block time you want to query
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      versioned_params:
                        type: object
                        properties:
                          max_segment_size:
                            title: 'max_segment_size is the maximum size of a segment.
                              default: 16M'
                            type: string
                            format: uint64
                          redundant_data_chunk_num:
                            title: redundant_data_check_num is the num of data chunks
                              of EC redundancy algorithm
                            type: integer
                            format: int64
                          redundant_parity_chunk_num:
                            title: redundant_data_check_num is the num of parity chunks
                              of EC redundancy algorithm
                            type: integer
                            format: int64
                          min_charge_size:
                            title: min_charge_size is the minimum charge size of the
                              payload, objects smaller than this size will be charged
                              as this size
                            type: string
                            format: uint64
                        description: VersionedParams defines the parameters for the
                          storage module with multi version, each version store with
                          different timestamp.
                      max_payload_size:
                        title: 'max_payload_size is the maximum size of the payload,
                          default: 2G'
                        type: string
                        format: uint64
                      mirror_bucket_relayer_fee:
                        title: relayer fee for the mirror bucket tx
                        type: string
                      mirror_bucket_ack_relayer_fee:
                        title: relayer fee for the ACK or FAIL_ACK package of the
                          mirror bucket tx
                        type: string
                      mirror_object_relayer_fee:
                        title: relayer fee for the mirror object tx
                        type: string
                      mirror_object_ack_relayer_fee:
                        title: Relayer fee for the ACK or FAIL_ACK package of the
                          mirror object tx
                        type: string
                      mirror_group_relayer_fee:
                        title: relayer fee for the mirror object tx
                        type: string
                      mirror_group_ack_relayer_fee:
                        title: Relayer fee for the ACK or FAIL_ACK package of the
                          mirror object tx
                        type: string
                      max_buckets_per_account:
                        title: The maximum number of buckets that can be created per
                          account
                        type: integer
                        format: int64
                      discontinue_counting_window:
                        title: The window to count the discontinued objects or buckets
                        type: string
                        format: uint64
                      discontinue_object_max:
                        title: The max objects can be requested in a window
                        type: string
                        format: uint64
                      discontinue_bucket_max:
                        title: The max buckets can be requested in a window
                        type: string
                        format: uint64
                      discontinue_confirm_period:
                        title: The object will be deleted after the confirm period
                          in seconds
                        type: string
                        format: int64
                      discontinue_deletion_max:
                        title: The max delete objects in each end block
                        type: string
                        format: uint64
                      stale_policy_cleanup_max:
                        title: The max number for deleting policy in each end block
                        type: string
                        format: uint64
                    description: params holds all the parameters of this module.
                description: QueryVersionedParamsResponse is response type for the
                  Query/Params RPC method with timestamp.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/policy_by_id/{policy_id}:
    get:
      tags:
      - Query
      summary: Queries a policy by policy id
      operationId: QueryPolicyById
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  policy:
                    type: object
                    properties:
                      id:
                        title: id is an unique u256 sequence for each policy. It also
                          be used as NFT tokenID
                        type: string
                      principal:
                        title: principal defines the accounts/group which the permission
                          grants to
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              PrincipalType refers to the identity type of system users or entities.
                              In Greenfield, it usually refers to accounts or groups.
                            default: PRINCIPAL_TYPE_UNSPECIFIED
                            enum:
                            - PRINCIPAL_TYPE_UNSPECIFIED
                            - PRINCIPAL_TYPE_GNFD_ACCOUNT
                            - PRINCIPAL_TYPE_GNFD_GROUP
                          value:
                            title: |-
                              When the type is an account, its value is sdk.AccAddress().String();
                              when the type is a group, its value is math.Uint().String()
                            type: string
                        description: Principal define the roles that can grant permissions.
                          Currently, it can be account or group.
                      resource_type:
                        title: resource_type defines the type of resource that grants
                          permission for
                        type: string
                        default: RESOURCE_TYPE_UNSPECIFIED
                        enum:
                        - RESOURCE_TYPE_UNSPECIFIED
                        - RESOURCE_TYPE_BUCKET
                        - RESOURCE_TYPE_OBJECT
                        - RESOURCE_TYPE_GROUP
                      resource_id:
                        title: resource_id defines the bucket/object/group id of the
                          resource that grants permission for
                        type: string
                      statements:
                        title: statements defines the details content of the permission,
                          including effect/actions/sub-resources
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              title: effect define the impact of permissions, which
                                can be Allow/Deny
                              type: string
                              default: EFFECT_UNSPECIFIED
                              enum:
                              - EFFECT_UNSPECIFIED
                              - EFFECT_ALLOW
                              - EFFECT_DENY
                            actions:
                              type: array
                              description: |-
                                action_type define the operation type you can act. greenfield defines a set of permission
                                that you can specify in a permissionInfo. see ActionType enum for detail.
                              items:
                                title: ActionType defines the operations you can execute
                                  in greenfield storage network
                                type: string
                                default: ACTION_UNSPECIFIED
                                enum:
                                - ACTION_UNSPECIFIED
                                - ACTION_UPDATE_BUCKET_INFO
                                - ACTION_DELETE_BUCKET
                                - ACTION_CREATE_OBJECT
                                - ACTION_DELETE_OBJECT
                                - ACTION_COPY_OBJECT
                                - ACTION_GET_OBJECT
                                - ACTION_EXECUTE_OBJECT
                                - ACTION_LIST_OBJECT
                                - ACTION_UPDATE_GROUP_MEMBER
                                - ACTION_DELETE_GROUP
                                - ACTION_UPDATE_OBJECT_INFO
                                - ACTION_UPDATE_GROUP_EXTRA
                                - ACTION_TYPE_ALL
                            resources:
                              type: array
                              description: |-
                                CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                                The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                                If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                                If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                                If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                              items:
                                type: string
                            expiration_time:
                              type: string
                              description: expiration_time defines how long the permission
                                is valid. If not explicitly specified, it means it
                                will not expire.
                              format: date-time
                            limit_size:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The uint64 value.
                                  format: uint64
                              description: limit_size defines the total data size
                                that is allowed to operate. If not explicitly specified,
                                it means it will not limit.
                      expiration_time:
                        title: |-
                          expiration_time defines the whole expiration time of all the statements.
                          Notices: Its priority is higher than the expiration time inside the Statement
                        type: string
                        format: date-time
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/policy_for_account/{resource}/{principal_address}:
    get:
      tags:
      - Query
      summary: Queries a policy which grants permission to account
      operationId: QueryPolicyForAccount
      parameters:
      - name: resource
        in: path
        required: true
        schema:
          type: string
      - name: principal_address
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  policy:
                    type: object
                    properties:
                      id:
                        title: id is an unique u256 sequence for each policy. It also
                          be used as NFT tokenID
                        type: string
                      principal:
                        title: principal defines the accounts/group which the permission
                          grants to
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              PrincipalType refers to the identity type of system users or entities.
                              In Greenfield, it usually refers to accounts or groups.
                            default: PRINCIPAL_TYPE_UNSPECIFIED
                            enum:
                            - PRINCIPAL_TYPE_UNSPECIFIED
                            - PRINCIPAL_TYPE_GNFD_ACCOUNT
                            - PRINCIPAL_TYPE_GNFD_GROUP
                          value:
                            title: |-
                              When the type is an account, its value is sdk.AccAddress().String();
                              when the type is a group, its value is math.Uint().String()
                            type: string
                        description: Principal define the roles that can grant permissions.
                          Currently, it can be account or group.
                      resource_type:
                        title: resource_type defines the type of resource that grants
                          permission for
                        type: string
                        default: RESOURCE_TYPE_UNSPECIFIED
                        enum:
                        - RESOURCE_TYPE_UNSPECIFIED
                        - RESOURCE_TYPE_BUCKET
                        - RESOURCE_TYPE_OBJECT
                        - RESOURCE_TYPE_GROUP
                      resource_id:
                        title: resource_id defines the bucket/object/group id of the
                          resource that grants permission for
                        type: string
                      statements:
                        title: statements defines the details content of the permission,
                          including effect/actions/sub-resources
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              title: effect define the impact of permissions, which
                                can be Allow/Deny
                              type: string
                              default: EFFECT_UNSPECIFIED
                              enum:
                              - EFFECT_UNSPECIFIED
                              - EFFECT_ALLOW
                              - EFFECT_DENY
                            actions:
                              type: array
                              description: |-
                                action_type define the operation type you can act. greenfield defines a set of permission
                                that you can specify in a permissionInfo. see ActionType enum for detail.
                              items:
                                title: ActionType defines the operations you can execute
                                  in greenfield storage network
                                type: string
                                default: ACTION_UNSPECIFIED
                                enum:
                                - ACTION_UNSPECIFIED
                                - ACTION_UPDATE_BUCKET_INFO
                                - ACTION_DELETE_BUCKET
                                - ACTION_CREATE_OBJECT
                                - ACTION_DELETE_OBJECT
                                - ACTION_COPY_OBJECT
                                - ACTION_GET_OBJECT
                                - ACTION_EXECUTE_OBJECT
                                - ACTION_LIST_OBJECT
                                - ACTION_UPDATE_GROUP_MEMBER
                                - ACTION_DELETE_GROUP
                                - ACTION_UPDATE_OBJECT_INFO
                                - ACTION_UPDATE_GROUP_EXTRA
                                - ACTION_TYPE_ALL
                            resources:
                              type: array
                              description: |-
                                CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                                The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                                If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                                If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                                If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                              items:
                                type: string
                            expiration_time:
                              type: string
                              description: expiration_time defines how long the permission
                                is valid. If not explicitly specified, it means it
                                will not expire.
                              format: date-time
                            limit_size:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The uint64 value.
                                  format: uint64
                              description: limit_size defines the total data size
                                that is allowed to operate. If not explicitly specified,
                                it means it will not limit.
                      expiration_time:
                        title: |-
                          expiration_time defines the whole expiration time of all the statements.
                          Notices: Its priority is higher than the expiration time inside the Statement
                        type: string
                        format: date-time
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/policy_for_group/{resource}/{principal_group_id}:
    get:
      tags:
      - Query
      summary: Queries a policy that grants permission to a group
      operationId: QueryPolicyForGroup
      parameters:
      - name: resource
        in: path
        required: true
        schema:
          type: string
      - name: principal_group_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  policy:
                    type: object
                    properties:
                      id:
                        title: id is an unique u256 sequence for each policy. It also
                          be used as NFT tokenID
                        type: string
                      principal:
                        title: principal defines the accounts/group which the permission
                          grants to
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              PrincipalType refers to the identity type of system users or entities.
                              In Greenfield, it usually refers to accounts or groups.
                            default: PRINCIPAL_TYPE_UNSPECIFIED
                            enum:
                            - PRINCIPAL_TYPE_UNSPECIFIED
                            - PRINCIPAL_TYPE_GNFD_ACCOUNT
                            - PRINCIPAL_TYPE_GNFD_GROUP
                          value:
                            title: |-
                              When the type is an account, its value is sdk.AccAddress().String();
                              when the type is a group, its value is math.Uint().String()
                            type: string
                        description: Principal define the roles that can grant permissions.
                          Currently, it can be account or group.
                      resource_type:
                        title: resource_type defines the type of resource that grants
                          permission for
                        type: string
                        default: RESOURCE_TYPE_UNSPECIFIED
                        enum:
                        - RESOURCE_TYPE_UNSPECIFIED
                        - RESOURCE_TYPE_BUCKET
                        - RESOURCE_TYPE_OBJECT
                        - RESOURCE_TYPE_GROUP
                      resource_id:
                        title: resource_id defines the bucket/object/group id of the
                          resource that grants permission for
                        type: string
                      statements:
                        title: statements defines the details content of the permission,
                          including effect/actions/sub-resources
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              title: effect define the impact of permissions, which
                                can be Allow/Deny
                              type: string
                              default: EFFECT_UNSPECIFIED
                              enum:
                              - EFFECT_UNSPECIFIED
                              - EFFECT_ALLOW
                              - EFFECT_DENY
                            actions:
                              type: array
                              description: |-
                                action_type define the operation type you can act. greenfield defines a set of permission
                                that you can specify in a permissionInfo. see ActionType enum for detail.
                              items:
                                title: ActionType defines the operations you can execute
                                  in greenfield storage network
                                type: string
                                default: ACTION_UNSPECIFIED
                                enum:
                                - ACTION_UNSPECIFIED
                                - ACTION_UPDATE_BUCKET_INFO
                                - ACTION_DELETE_BUCKET
                                - ACTION_CREATE_OBJECT
                                - ACTION_DELETE_OBJECT
                                - ACTION_COPY_OBJECT
                                - ACTION_GET_OBJECT
                                - ACTION_EXECUTE_OBJECT
                                - ACTION_LIST_OBJECT
                                - ACTION_UPDATE_GROUP_MEMBER
                                - ACTION_DELETE_GROUP
                                - ACTION_UPDATE_OBJECT_INFO
                                - ACTION_UPDATE_GROUP_EXTRA
                                - ACTION_TYPE_ALL
                            resources:
                              type: array
                              description: |-
                                CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                                The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                                If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                                If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                                If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                              items:
                                type: string
                            expiration_time:
                              type: string
                              description: expiration_time defines how long the permission
                                is valid. If not explicitly specified, it means it
                                will not expire.
                              format: date-time
                            limit_size:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The uint64 value.
                                  format: uint64
                              description: limit_size defines the total data size
                                that is allowed to operate. If not explicitly specified,
                                it means it will not limit.
                      expiration_time:
                        title: |-
                          expiration_time defines the whole expiration time of all the statements.
                          Notices: Its priority is higher than the expiration time inside the Statement
                        type: string
                        format: date-time
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /greenfield/storage/verify_permission/{operator}/{bucket_name}/{action_type}:
    get:
      tags:
      - Query
      summary: Queries a list of VerifyPermission items.
      operationId: VerifyPermission
      parameters:
      - name: operator
        in: path
        required: true
        schema:
          type: string
      - name: bucket_name
        in: path
        required: true
        schema:
          type: string
      - name: action_type
        in: path
        required: true
        schema:
          type: string
          enum:
          - ACTION_UNSPECIFIED
          - ACTION_UPDATE_BUCKET_INFO
          - ACTION_DELETE_BUCKET
          - ACTION_CREATE_OBJECT
          - ACTION_DELETE_OBJECT
          - ACTION_COPY_OBJECT
          - ACTION_GET_OBJECT
          - ACTION_EXECUTE_OBJECT
          - ACTION_LIST_OBJECT
          - ACTION_UPDATE_GROUP_MEMBER
          - ACTION_DELETE_GROUP
          - ACTION_UPDATE_OBJECT_INFO
          - ACTION_UPDATE_GROUP_EXTRA
          - ACTION_TYPE_ALL
      - name: object_name
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  effect:
                    title: Effect define the effect of the operation permission, include
                      Allow or deny
                    type: string
                    default: EFFECT_UNSPECIFIED
                    enum:
                    - EFFECT_UNSPECIFIED
                    - EFFECT_ALLOW
                    - EFFECT_DENY
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      tags:
      - Query
      summary: AccountInfo queries account info which is common to all account types.
      description: 'Since: cosmos-sdk 0.47'
      operationId: AccountInfo
      parameters:
      - name: address
        in: path
        description: address is the account address string.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      address:
                        type: string
                      pub_key:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      account_number:
                        type: string
                        format: uint64
                      sequence:
                        type: string
                        format: uint64
                    description: info is the account info which is represented by
                      BaseAccount.
                description: |-
                  QueryAccountInfoResponse is the Query/AccountInfo response type.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/accounts:
    get:
      tags:
      - Query
      summary: Accounts returns all the existing accounts.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.43
      operationId: Accounts
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  accounts:
                    title: accounts are the existing accounts
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAccountsResponse is the response type for the Query/Accounts RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      tags:
      - Query
      summary: Account returns account details based on address.
      operationId: Account
      parameters:
      - name: address
        in: path
        description: address defines the address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryAccountResponse is the response type for the Query/Account
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      tags:
      - Query
      summary: AccountAddressByID returns account address based on account number.
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID
      parameters:
      - name: id
        in: path
        description: |-
          Deprecated, use account_id instead

          id is the account number of the address to be queried. This field
          should have been an uint64 (like all account numbers), and will be
          updated to uint64 in a future version of the auth query.
        required: true
        schema:
          type: string
          format: int64
      - name: account_id
        in: query
        description: |-
          account_id is the account number of the address to be queried.

          Since: cosmos-sdk 0.47
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID
                  rpc method
                type: object
                properties:
                  account_address:
                    type: string
                description: 'Since: cosmos-sdk 0.46.2'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/module_accounts:
    get:
      tags:
      - Query
      summary: ModuleAccounts returns all the existing module accounts.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                description: |-
                  QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      tags:
      - Query
      summary: ModuleAccountByName returns the module account info by module name
      operationId: ModuleAccountByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryModuleAccountByNameResponse is the response type
                  for the Query/ModuleAccountByName RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_memo_characters:
                        type: string
                        format: uint64
                      tx_sig_limit:
                        type: string
                        format: uint64
                      tx_size_cost_per_byte:
                        type: string
                        format: uint64
                      sig_verify_cost_ed25519:
                        type: string
                        format: uint64
                      sig_verify_cost_secp256k1:
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants:
    get:
      tags:
      - Query
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: Grants
      parameters:
      - name: granter
        in: query
        schema:
          type: string
      - name: grantee
        in: query
        schema:
          type: string
      - name: msg_type_url
        in: query
        description: Optional, msg_type_url, when set, will query only grants matching
          given msg type.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: authorizations is a list of grants granted for grantee
                      by granter.
                    items:
                      type: object
                      properties:
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          title: |-
                            time when the grant will expire and will be pruned. If null, then the grant
                            doesn't have a time expiration (other conditions  in `authorization`
                            may apply to invalidate the grant)
                          type: string
                          format: date-time
                      description: |-
                        Grant gives permissions to execute
                        the provide method with expiration time.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGrantsResponse is the response type for the Query/Authorizations
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      tags:
      - Query
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants
      parameters:
      - name: grantee
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: grants is a list of grants granted to the grantee.
                    items:
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGranteeGrantsResponse is the response type for the
                  Query/GranteeGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      tags:
      - Query
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants
      parameters:
      - name: granter
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: grants is a list of grants granted by the granter.
                    items:
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGranterGrantsResponse is the response type for the
                  Query/GranterGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      tags:
      - Query
      summary: AllBalances queries the balance of all coins for a single account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    description: balances is the balances of all the coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      tags:
      - Query
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QueryBalanceResponse is the response type for the Query/Balance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      tags:
      - Query
      summary: |-
        DenomOwners queries for all account addresses that own a particular token
        denomination.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      parameters:
      - name: denom
        in: path
        description: denom defines the coin denomination to query all account holders
          for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_owners:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: address defines the address that owns a particular
                            denomination.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DenomOwner defines structure representing an account that owns or holds a
                        particular denominated token. It contains the account address and account
                        balance of the denominated token.

                        Since: cosmos-sdk 0.46
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      tags:
      - Query
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadatas:
                    type: array
                    description: metadata provides the client information for all
                      the registered tokens.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        denom_units:
                          title: denom_units represents the list of DenomUnit's for
                            a given coin
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                description: denom represents the string name of the
                                  given denom unit (e.g uatom).
                              exponent:
                                type: integer
                                description: |-
                                  exponent represents power of 10 exponent that one must
                                  raise the base_denom to in order to equal the given DenomUnit's denom
                                  1 denom = 10^exponent base_denom
                                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                  exponent = 6, thus: 1 atom = 10^6 uatom).
                                format: int64
                              aliases:
                                title: aliases is a list of string aliases for the
                                  given denom
                                type: array
                                items:
                                  type: string
                            description: |-
                              DenomUnit represents a struct that describes a given
                              denomination unit of the basic token.
                        base:
                          type: string
                          description: base represents the base denom (should be the
                            DenomUnit with exponent = 0).
                        display:
                          type: string
                          description: |-
                            display indicates the suggested denom that should be
                            displayed in clients.
                        name:
                          title: 'name defines the name of the token (eg: Cosmos Atom)'
                          type: string
                          description: 'Since: cosmos-sdk 0.43'
                        symbol:
                          type: string
                          description: |-
                            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                            be the same as the display.

                            Since: cosmos-sdk 0.43
                        uri:
                          type: string
                          description: |-
                            URI to a document (on or off-chain) that contains additional information. Optional.

                            Since: cosmos-sdk 0.46
                        uri_hash:
                          type: string
                          description: |-
                            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                            the document didn't change. Optional.

                            Since: cosmos-sdk 0.46
                      description: |-
                        Metadata represents a struct that describes
                        a basic token.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      tags:
      - Query
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      parameters:
      - name: denom
        in: path
        description: denom is the coin denom to query the metadata for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      description:
                        type: string
                      denom_units:
                        title: denom_units represents the list of DenomUnit's for
                          a given coin
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              description: denom represents the string name of the
                                given denom unit (e.g uatom).
                            exponent:
                              type: integer
                              description: |-
                                exponent represents power of 10 exponent that one must
                                raise the base_denom to in order to equal the given DenomUnit's denom
                                1 denom = 10^exponent base_denom
                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                exponent = 6, thus: 1 atom = 10^6 uatom).
                              format: int64
                            aliases:
                              title: aliases is a list of string aliases for the given
                                denom
                              type: array
                              items:
                                type: string
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                      base:
                        type: string
                        description: base represents the base denom (should be the
                          DenomUnit with exponent = 0).
                      display:
                        type: string
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                      name:
                        title: 'name defines the name of the token (eg: Cosmos Atom)'
                        type: string
                        description: 'Since: cosmos-sdk 0.43'
                      symbol:
                        type: string
                        description: |-
                          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                          be the same as the display.

                          Since: cosmos-sdk 0.43
                      uri:
                        type: string
                        description: |-
                          URI to a document (on or off-chain) that contains additional information. Optional.

                          Since: cosmos-sdk 0.46
                      uri_hash:
                        type: string
                        description: |-
                          URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                          the document didn't change. Optional.

                          Since: cosmos-sdk 0.46
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                description: |-
                  QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: array
                        description: |-
                          Deprecated: Use of SendEnabled in params is deprecated.
                          For genesis, use the newly added send_enabled field in the genesis object.
                          Storage, lookup, and manipulation of this information is now in the keeper.

                          As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          description: |-
                            SendEnabled maps coin denom to a send_enabled status (whether a denom is
                            sendable).
                      default_send_enabled:
                        type: boolean
                    description: Params defines the parameters for the bank module.
                description: QueryParamsResponse defines the response type for querying
                  x/bank parameters.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/send_enabled:
    get:
      tags:
      - Query
      summary: SendEnabled queries for SendEnabled entries.
      description: |-
        This query only returns denominations that have specific SendEnabled settings.
        Any denomination that does not have a specific setting will use the default
        params.default_send_enabled, and will not be returned by this query.

        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      parameters:
      - name: denoms
        in: query
        description: denoms is the specific denoms you want look up. Leave empty to
          get all entries.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  send_enabled:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: |-
                        SendEnabled maps coin denom to a send_enabled status (whether a denom is
                        sendable).
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response. This field is only
                      populated if the denoms field in the request is empty.
                description: |-
                  QuerySendEnabledResponse defines the RPC response of a SendEnable query.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      tags:
      - Query
      summary: |-
        SpendableBalances queries the spendable balance of all coins for a single
        account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      parameters:
      - name: address
        in: path
        description: address is the address to query spendable balances for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    description: balances is the spendable balances of all the coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QuerySpendableBalancesResponse defines the gRPC response structure for querying
                  an account's spendable balances.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      tags:
      - Query
      summary: |-
        SpendableBalanceByDenom queries the spendable balance of a single denom for
        a single account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: |-
                  QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
                  querying an account's spendable balance for a specific denom.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply:
    get:
      tags:
      - Query
      summary: TotalSupply queries the total supply of all coins.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
                  method
                type: object
                properties:
                  supply:
                    title: supply is the supply of the coins
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response.

                      Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      tags:
      - Query
      summary: SupplyOf queries the supply of a single coin.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      parameters:
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      tags:
      - Service
      summary: |-
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery
      parameters:
      - name: data
        in: query
        schema:
          type: string
          format: byte
      - name: path
        in: query
        schema:
          type: string
      - name: height
        in: query
        schema:
          type: string
          format: int64
      - name: prove
        in: query
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int64
                  log:
                    type: string
                  info:
                    type: string
                  index:
                    type: string
                    format: int64
                  key:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_ops:
                    type: object
                    properties:
                      ops:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            key:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            data:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                          description: |-
                            ProofOp defines an operation used for calculating Merkle root. The data could
                            be arbitrary format, providing necessary data for example neighbouring node
                            hash.

                            Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
                    description: |-
                      ProofOps is Merkle proof defined by the list of ProofOps.

                      Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
                  height:
                    type: string
                    format: int64
                  codespace:
                    type: string
                description: |-
                  ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

                  Note: This type is a duplicate of the ResponseQuery proto type defined in
                  Tendermint.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      tags:
      - Service
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                  block:
                    title: 'Deprecated: please use `sdk_block` instead'
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                  sdk_block:
                    title: 'Since: cosmos-sdk 0.47'
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            type: string
                            description: |-
                              proposer_address is the original block proposer address, formatted as a hex string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
                              for better UX.
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to hex string.
                description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      tags:
      - Service
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                  block:
                    title: 'Deprecated: please use `sdk_block` instead'
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                  sdk_block:
                    title: 'Since: cosmos-sdk 0.47'
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            type: string
                            description: |-
                              proposer_address is the original block proposer address, formatted as a hex string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
                              for better UX.
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to hex string.
                description: GetBlockByHeightResponse is the response type for the
                  Query/GetBlockByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      tags:
      - Service
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  default_node_info:
                    type: object
                    properties:
                      protocol_version:
                        type: object
                        properties:
                          p2p:
                            type: string
                            format: uint64
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      network:
                        type: string
                      version:
                        type: string
                      channels:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      moniker:
                        type: string
                      other:
                        type: object
                        properties:
                          tx_index:
                            type: string
                          rpc_address:
                            type: string
                  application_version:
                    type: object
                    properties:
                      name:
                        type: string
                      app_name:
                        type: string
                      version:
                        type: string
                      git_commit:
                        type: string
                      build_tags:
                        type: string
                      go_version:
                        type: string
                      build_deps:
                        type: array
                        items:
                          title: Module is the type for VersionInfo
                          type: object
                          properties:
                            path:
                              title: module path
                              type: string
                            version:
                              title: module version
                              type: string
                            sum:
                              title: checksum
                              type: string
                      cosmos_sdk_version:
                        title: 'Since: cosmos-sdk 0.43'
                        type: string
                    description: VersionInfo is the type for the GetNodeInfoResponse
                      message.
                description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      tags:
      - Service
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                description: GetSyncingResponse is the response type for the Query/GetSyncing
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      tags:
      - Service
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetLatestValidatorSetResponse is the response type for
                  the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      tags:
      - Service
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetValidatorSetByHeightResponse is the response type
                  for the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/crosschain/v1/cross_chain_package:
    get:
      tags:
      - Query
      summary: CrossChainPackage returns the specified cross chain package
      operationId: CrossChainPackage
      parameters:
      - name: channel_id
        in: query
        description: channel id of the cross chain package.
        schema:
          type: integer
          format: int64
      - name: sequence
        in: query
        description: sequence of the cross chain package.
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  package:
                    title: content of the cross chain package
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: QueryCrossChainPackageResponse is the response type for
                  the Query/CrossChainPackage RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/crosschain/v1/params:
    get:
      tags:
      - Query
      summary: Params returns the total set of cross chain parameters.
      operationId: CrosschainParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      init_module_balance:
                        title: initial balance to mint for crosschain module when
                          the chain starts
                        type: string
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/crosschain/v1/receive_sequence:
    get:
      tags:
      - Query
      summary: ReceiveSequence returns the receive sequence of the channel
      operationId: ReceiveSequence
      parameters:
      - name: channel_id
        in: query
        description: channel id of the cross chain package.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  sequence:
                    title: sequence of the cross chain package
                    type: string
                    format: uint64
                description: QuerySendSequenceResponse is the response type for the
                  Query/ReceiveSequence RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/crosschain/v1/send_sequence:
    get:
      tags:
      - Query
      summary: SendSequence returns the send sequence of the channel
      operationId: SendSequence
      parameters:
      - name: channel_id
        in: query
        description: channel id of the cross chain package.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  sequence:
                    title: sequence of the cross chain package
                    type: string
                    format: uint64
                description: QuerySendSequenceResponse is the response type for the
                  Query/SendSequence RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/community_pool:
    get:
      tags:
      - Query
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: array
                    description: pool defines community pool's coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryCommunityPoolResponse is the response type for the Query/CommunityPool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      tags:
      - Query
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines all the rewards accrued by a delegator.
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                        reward:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              DecCoin defines a token with a denomination and a decimal amount.

                              NOTE: The amount field is an Dec which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        DelegationDelegatorReward represents the properties
                        of a delegator's delegation reward.
                  total:
                    type: array
                    description: total defines the sum of all the rewards.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationTotalRewardsResponse is the response type for the
                  Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      tags:
      - Query
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines the rewards accrued by a delegation.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationRewardsResponse is the response type for the
                  Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      tags:
      - Query
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DelegatorValidators
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the validators a delegator is
                      delegating for.
                    items:
                      type: string
                description: |-
                  QueryDelegatorValidatorsResponse is the response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      tags:
      - Query
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  withdraw_address:
                    type: string
                    description: withdraw_address defines the delegator address to
                      query for.
                description: |-
                  QueryDelegatorWithdrawAddressResponse is the response type for the
                  Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries params of the distribution module.
      operationId: DistributionParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      community_tax:
                        type: string
                      base_proposer_reward:
                        type: string
                        description: |-
                          Deprecated: The base_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                      bonus_proposer_reward:
                        type: string
                        description: |-
                          Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                      withdraw_addr_enabled:
                        type: boolean
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      tags:
      - Query
      summary: ValidatorDistributionInfo queries validator commission and self-delegation
        rewards for validator
      operationId: ValidatorDistributionInfo
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the validator operator address.
                  self_bond_rewards:
                    type: array
                    description: self_bond_rewards defines the self delegations rewards.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                  commission:
                    type: array
                    description: commission defines the commission the validator received.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: QueryValidatorDistributionInfoResponse is the response
                  type for the Query/ValidatorDistributionInfo RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      tags:
      - Query
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorCommissionResponse is the response type for the
                  Query/ValidatorCommission RPC method
                type: object
                properties:
                  commission:
                    type: object
                    properties:
                      commission:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: commission defines the commission the validator received.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      tags:
      - Query
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: object
                    properties:
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
                      for a validator inexpensive to track, allows simple sanity checks.
                description: |-
                  QueryValidatorOutstandingRewardsResponse is the response type for the
                  Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      tags:
      - Query
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: starting_height
        in: query
        description: starting_height defines the optional starting height to query
          the slashes.
        schema:
          type: string
          format: uint64
      - name: ending_height
        in: query
        description: starting_height defines the optional ending height to query the
          slashes.
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  slashes:
                    type: array
                    description: slashes defines the slashes the validator received.
                    items:
                      type: object
                      properties:
                        validator_period:
                          type: string
                          format: uint64
                        fraction:
                          type: string
                      description: |-
                        ValidatorSlashEvent represents a validator slash event.
                        Height is implicit within the store key.
                        This is needed to calculate appropriate amount of staking tokens
                        for delegations which are withdrawn after a slash has occurred.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorSlashesResponse is the response type for the
                  Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/evidence/v1beta1/evidence:
    get:
      tags:
      - Query
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: array
                    description: evidence returns all evidences.
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      tags:
      - Query
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence
      parameters:
      - name: hash
        in: path
        description: |-
          hash defines the evidence hash of the requested evidence.

          Since: cosmos-sdk 0.47
        required: true
        schema:
          type: string
      - name: evidence_hash
        in: query
        description: |-
          evidence_hash defines the hash of the requested evidence.
          Deprecated: Use hash, a HEX encoded string, instead.
        schema:
          type: string
          format: byte
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryEvidenceResponse is the response type for the Query/Evidence
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      tags:
      - Query
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance
      parameters:
      - name: granter
        in: path
        description: granter is the address of the user granting an allowance of their
          funds.
        required: true
        schema:
          type: string
      - name: grantee
        in: path
        description: grantee is the address of the user being granted an allowance
          of another user's funds.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowance:
                    title: Grant is stored in the KVStore to record a grant with full
                      context
                    type: object
                    properties:
                      granter:
                        type: string
                        description: granter is the address of the user granting an
                          allowance of their funds.
                      grantee:
                        type: string
                        description: grantee is the address of the user being granted
                          an allowance of another user's funds.
                      allowance:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: allowance can be any of basic, periodic, allowed
                          fee allowance.
                    description: allowance is a allowance granted for grantee by granter.
                description: QueryAllowanceResponse is the response type for the Query/Allowance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      tags:
      - Query
      summary: Allowances returns all the grants for address.
      operationId: Allowances
      parameters:
      - name: grantee
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    description: allowances are allowance's granted for grantee by
                      granter.
                    items:
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting
                            an allowance of their funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: allowance can be any of basic, periodic, allowed
                            fee allowance.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryAllowancesResponse is the response type for the
                  Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      tags:
      - Query
      summary: AllowancesByGranter returns all the grants given by an address
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter
      parameters:
      - name: granter
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    description: allowances that have been issued by the granter.
                    items:
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting
                            an allowance of their funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: allowance can be any of basic, periodic, allowed
                            fee allowance.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: |-
                  QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gashub/v1beta1/msg_gas_params:
    get:
      tags:
      - Query
      summary: MsgGasParams queries for MsgGasParams entries.
      description: |-
        This query only returns params that have specific MsgGasParams settings.
        Any msg type that does not have a specific setting will not be returned by this query.
      operationId: MsgGasParams
      parameters:
      - name: msg_type_urls
        in: query
        description: msg_type_urls is the specific type urls you want look up. Leave
          empty to get all entries.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  msg_gas_params:
                    type: array
                    items:
                      title: MsgGasParams defines gas consumption for a msg type
                      type: object
                      properties:
                        msg_type_url:
                          type: string
                        fixed_type:
                          type: object
                          properties:
                            fixed_gas:
                              title: fixed_gas is the gas cost for a fixed type msg
                              type: string
                              format: uint64
                          description: fixed_type specifies fixed type gas params.
                        grant_type:
                          type: object
                          properties:
                            fixed_gas:
                              title: fixed_gas is the base gas cost for a dynamic
                                type msg
                              type: string
                              format: uint64
                            gas_per_item:
                              title: gas_per_item is the gas cost for a dynamic type
                                msg per item
                              type: string
                              format: uint64
                          description: grant_type specifies dynamic type gas params
                            for msg/grant.
                        multi_send_type:
                          type: object
                          properties:
                            fixed_gas:
                              title: fixed_gas is the base gas cost for a dynamic
                                type msg
                              type: string
                              format: uint64
                            gas_per_item:
                              title: gas_per_item is the gas cost for a dynamic type
                                msg per item
                              type: string
                              format: uint64
                          description: grant_type specifies dynamic type gas params
                            for msg/multiSend.
                        grant_allowance_type:
                          type: object
                          properties:
                            fixed_gas:
                              title: fixed_gas is the base gas cost for a dynamic
                                type msg
                              type: string
                              format: uint64
                            gas_per_item:
                              title: gas_per_item is the gas cost for a dynamic type
                                msg per item
                              type: string
                              format: uint64
                          description: grant_type specifies dynamic type gas params
                            for msg/grantAllowance.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response. This field is only
                      populated if the msg_type_urls field in the request is empty.
                description: QueryMsgGasParamsResponse defines the RPC response of
                  a MsgGasParams query.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/gashub/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of x/gashub module.
      operationId: GashubParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_tx_size:
                        type: string
                        description: max_tx_size is the maximum size of a transaction's
                          bytes.
                        format: uint64
                      min_gas_per_byte:
                        title: min_gas_per_byte is the minimum gas to be paid per
                          byte of a transaction's
                        type: string
                        format: uint64
                    description: Params defines the parameters for the gashub module.
                description: QueryParamsResponse defines the response type for querying
                  x/gashub parameters.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/gov/v1/params/{params_type}:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the gov module.
      operationId: GovV1Params
      parameters:
      - name: params_type
        in: path
        description: |-
          params_type defines which parameters to query for, can be one of "voting",
          "tallying" or "deposit".
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  voting_params:
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Duration of the voting period.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      voting_params defines the parameters related to voting.
                  deposit_params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      deposit_params defines the parameters related to deposit.
                  tally_params:
                    type: object
                    properties:
                      quorum:
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                          considered valid.
                      threshold:
                        type: string
                        description: 'Minimum proportion of Yes votes for proposal
                          to pass. Default value: 0.5.'
                      veto_threshold:
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                          vetoed. Default value: 1/3.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      tally_params defines the parameters related to tally.
                  params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                      voting_period:
                        type: string
                        description: Duration of the voting period.
                      quorum:
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                           considered valid.
                      threshold:
                        type: string
                        description: 'Minimum proportion of Yes votes for proposal
                          to pass. Default value: 0.5.'
                      veto_threshold:
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                           vetoed. Default value: 1/3.
                      min_initial_deposit_ratio:
                        type: string
                        description: The ratio representing the proportion of the
                          deposit value that must be paid at proposal submission.
                      burn_vote_quorum:
                        title: burn deposits if a proposal does not meet quorum
                        type: boolean
                      burn_proposal_deposit_prevote:
                        title: burn deposits if the proposal does not enter voting
                          period
                        type: boolean
                      burn_vote_veto:
                        title: burn deposits if quorum with vote type no_veto is met
                        type: boolean
                    description: |-
                      params defines all the paramaters of x/gov module.

                      Since: cosmos-sdk 0.47
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals:
    get:
      tags:
      - Query
      summary: Proposals queries all proposals based on given status.
      operationId: GovV1Proposal
      parameters:
      - name: proposal_status
        in: query
        description: |-
          proposal_status defines the status of the proposals.

           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
          period.
           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
          period.
           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
          passed.
           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
          been rejected.
           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
          failed.
        schema:
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
      - name: voter
        in: query
        description: voter defines the voter address for the proposals.
        schema:
          type: string
      - name: depositor
        in: query
        description: depositor defines the deposit addresses from the proposals.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    description: proposals defines all the requested governance proposals.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id defines the unique id of the proposal.
                          format: uint64
                        messages:
                          type: array
                          description: messages are the arbitrary messages to be executed
                            if the proposal passes.
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                                description: |-
                                  A URL/resource name that uniquely identifies the type of the serialized
                                  protocol buffer message. This string must contain at least
                                  one "/" character. The last segment of the URL's path must represent
                                  the fully qualified name of the type (as in
                                  `path/google.protobuf.Duration`). The name should be in a canonical form
                                  (e.g., leading "." is not accepted).

                                  In practice, teams usually precompile into the binary all types that they
                                  expect it to use in the context of Any. However, for URLs which use the
                                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                                  server that maps type URLs to message definitions as follows:

                                  * If no scheme is provided, `https` is assumed.
                                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                    value in binary format, or produce an error.
                                  * Applications are allowed to cache lookup results based on the
                                    URL, or have them precompiled into a binary to avoid any
                                    lookup. Therefore, binary compatibility needs to be preserved
                                    on changes to types. (Use versioned type names to manage
                                    breaking changes.)

                                  Note: this functionality is not currently available in the official
                                  protobuf release, and it is not used for type URLs beginning with
                                  type.googleapis.com.

                                  Schemes other than `http`, `https` (or the empty scheme) might be
                                  used with implementation specific semantics.
                              value:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                description: Must be a valid serialized protocol buffer
                                  of the above specified type.
                                format: byte
                            description: |-
                              `Any` contains an arbitrary serialized protocol buffer message along with a
                              URL that describes the type of the serialized message.

                              Protobuf library provides support to pack/unpack Any values in the form
                              of utility functions or additional generated methods of the Any type.

                              Example 1: Pack and unpack a message in C++.

                                  Foo foo = ...;
                                  Any any;
                                  any.PackFrom(foo);
                                  ...
                                  if (any.UnpackTo(&foo)) {
                                    ...
                                  }

                              Example 2: Pack and unpack a message in Java.

                                  Foo foo = ...;
                                  Any any = Any.pack(foo);
                                  ...
                                  if (any.is(Foo.class)) {
                                    foo = any.unpack(Foo.class);
                                  }

                              Example 3: Pack and unpack a message in Python.

                                  foo = Foo(...)
                                  any = Any()
                                  any.Pack(foo)
                                  ...
                                  if any.Is(Foo.DESCRIPTOR):
                                    any.Unpack(foo)
                                    ...

                              Example 4: Pack and unpack a message in Go

                                   foo := &pb.Foo{...}
                                   any, err := anypb.New(foo)
                                   if err != nil {
                                     ...
                                   }
                                   ...
                                   foo := &pb.Foo{}
                                   if err := any.UnmarshalTo(foo); err != nil {
                                     ...
                                   }

                              The pack methods provided by protobuf library will by default use
                              'type.googleapis.com/full.type.name' as the type URL and the unpack
                              methods only use the fully qualified type name after the last '/'
                              in the type URL, for example "foo.bar.com/x/y.z" will yield type
                              name "y.z".


                              JSON

                              The JSON representation of an `Any` value uses the regular
                              representation of the deserialized, embedded message, with an
                              additional field `@type` which contains the type URL. Example:

                                  package google.profile;
                                  message Person {
                                    string first_name = 1;
                                    string last_name = 2;
                                  }

                                  {
                                    "@type": "type.googleapis.com/google.profile.Person",
                                    "firstName": <string>,
                                    "lastName": <string>
                                  }

                              If the embedded message type is well-known and has a custom JSON
                              representation, that representation will be embedded adding a field
                              `value` which holds the custom JSON in addition to the `@type`
                              field. Example (for message [google.protobuf.Duration][]):

                                  {
                                    "@type": "type.googleapis.com/google.protobuf.Duration",
                                    "value": "1.212s"
                                  }
                        status:
                          type: string
                          description: status defines the proposal status.
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        final_tally_result:
                          type: object
                          properties:
                            yes_count:
                              type: string
                              description: yes_count is the number of yes votes on
                                a proposal.
                            abstain_count:
                              type: string
                              description: abstain_count is the number of abstain
                                votes on a proposal.
                            no_count:
                              type: string
                              description: no_count is the number of no votes on a
                                proposal.
                            no_with_veto_count:
                              type: string
                              description: no_with_veto_count is the number of no
                                with veto votes on a proposal.
                          description: |-
                            final_tally_result is the final tally result of the proposal. When
                            querying a proposal via gRPC, this field is not populated until the
                            proposal's voting period has ended.
                        submit_time:
                          type: string
                          description: submit_time is the time of proposal submission.
                          format: date-time
                        deposit_end_time:
                          type: string
                          description: deposit_end_time is the end time for deposition.
                          format: date-time
                        total_deposit:
                          type: array
                          description: total_deposit is the total deposit on the proposal.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        voting_start_time:
                          type: string
                          description: voting_start_time is the starting time to vote
                            on a proposal.
                          format: date-time
                        voting_end_time:
                          type: string
                          description: voting_end_time is the end time of voting on
                            a proposal.
                          format: date-time
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata attached
                            to the proposal.
                        title:
                          title: title is the title of the proposal
                          type: string
                          description: 'Since: cosmos-sdk 0.47'
                        summary:
                          title: summary is a short summary of the proposal
                          type: string
                          description: 'Since: cosmos-sdk 0.47'
                        proposer:
                          title: Proposer is the address of the proposal sumbitter
                          type: string
                          description: 'Since: cosmos-sdk 0.47'
                      description: Proposal defines the core field members of a governance
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      tags:
      - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: GovV1Proposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      id:
                        type: string
                        description: id defines the unique id of the proposal.
                        format: uint64
                      messages:
                        type: array
                        description: messages are the arbitrary messages to be executed
                          if the proposal passes.
                        items:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      status:
                        type: string
                        description: status defines the proposal status.
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      final_tally_result:
                        type: object
                        properties:
                          yes_count:
                            type: string
                            description: yes_count is the number of yes votes on a
                              proposal.
                          abstain_count:
                            type: string
                            description: abstain_count is the number of abstain votes
                              on a proposal.
                          no_count:
                            type: string
                            description: no_count is the number of no votes on a proposal.
                          no_with_veto_count:
                            type: string
                            description: no_with_veto_count is the number of no with
                              veto votes on a proposal.
                        description: |-
                          final_tally_result is the final tally result of the proposal. When
                          querying a proposal via gRPC, this field is not populated until the
                          proposal's voting period has ended.
                      submit_time:
                        type: string
                        description: submit_time is the time of proposal submission.
                        format: date-time
                      deposit_end_time:
                        type: string
                        description: deposit_end_time is the end time for deposition.
                        format: date-time
                      total_deposit:
                        type: array
                        description: total_deposit is the total deposit on the proposal.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      voting_start_time:
                        type: string
                        description: voting_start_time is the starting time to vote
                          on a proposal.
                        format: date-time
                      voting_end_time:
                        type: string
                        description: voting_end_time is the end time of voting on
                          a proposal.
                        format: date-time
                      metadata:
                        type: string
                        description: metadata is any arbitrary metadata attached to
                          the proposal.
                      title:
                        title: title is the title of the proposal
                        type: string
                        description: 'Since: cosmos-sdk 0.47'
                      summary:
                        title: summary is a short summary of the proposal
                        type: string
                        description: 'Since: cosmos-sdk 0.47'
                      proposer:
                        title: Proposer is the address of the proposal sumbitter
                        type: string
                        description: 'Since: cosmos-sdk 0.47'
                    description: Proposal defines the core field members of a governance
                      proposal.
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      tags:
      - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: GovV1Deposit
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposits:
                    type: array
                    description: deposits defines the requested deposits.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        depositor:
                          type: string
                          description: depositor defines the deposit addresses from
                            the proposals.
                        amount:
                          type: array
                          description: amount to be deposited by depositor.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
      - Query
      summary: Deposit queries single deposit information based proposalID, depositAddr.
      operationId: GovV1Deposit
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: depositor
        in: path
        description: depositor defines the deposit addresses from the proposals.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposit:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      depositor:
                        type: string
                        description: depositor defines the deposit addresses from
                          the proposals.
                      amount:
                        type: array
                        description: amount to be deposited by depositor.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                description: QueryDepositResponse is the response type for the Query/Deposit
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      tags:
      - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: GovV1TallyResult
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      yes_count:
                        type: string
                        description: yes_count is the number of yes votes on a proposal.
                      abstain_count:
                        type: string
                        description: abstain_count is the number of abstain votes
                          on a proposal.
                      no_count:
                        type: string
                        description: no_count is the number of no votes on a proposal.
                      no_with_veto_count:
                        type: string
                        description: no_with_veto_count is the number of no with veto
                          votes on a proposal.
                    description: tally defines the requested tally.
                description: QueryTallyResultResponse is the response type for the
                  Query/Tally RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      tags:
      - Query
      summary: Votes queries votes of a given proposal.
      operationId: GovV1Votes
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes defines the queried votes.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        voter:
                          type: string
                          description: voter is the voter address of the proposal.
                        options:
                          type: array
                          description: options is the weighted vote options.
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                description: option defines the valid vote options,
                                  it must not contain duplicate vote options.
                                default: VOTE_OPTION_UNSPECIFIED
                                enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              weight:
                                type: string
                                description: weight is the vote weight associated
                                  with the vote option.
                            description: WeightedVoteOption defines a unit of vote
                              for vote split.
                        metadata:
                          type: string
                          description: metadata is any  arbitrary metadata to attached
                            to the vote.
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesResponse is the response type for the Query/Votes
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
      - Query
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: GovV1Vote
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: voter
        in: path
        description: voter defines the voter address for the proposals.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      voter:
                        type: string
                        description: voter is the voter address of the proposal.
                      options:
                        type: array
                        description: options is the weighted vote options.
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                              description: option defines the valid vote options,
                                it must not contain duplicate vote options.
                              default: VOTE_OPTION_UNSPECIFIED
                              enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            weight:
                              type: string
                              description: weight is the vote weight associated with
                                the vote option.
                          description: WeightedVoteOption defines a unit of vote for
                            vote split.
                      metadata:
                        type: string
                        description: metadata is any  arbitrary metadata to attached
                          to the vote.
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                description: QueryVoteResponse is the response type for the Query/Vote
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      tags:
      - Query
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  annual_provisions:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: annual_provisions is the current minting annual provisions
                      value.
                    format: byte
                description: |-
                  QueryAnnualProvisionsResponse is the response type for the
                  Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/inflation:
    get:
      tags:
      - Query
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  inflation:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: inflation is the current minting inflation value.
                    format: byte
                description: |-
                  QueryInflationResponse is the response type for the Query/Inflation RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      mint_denom:
                        title: type of coin to mint
                        type: string
                      inflation_rate_change:
                        title: maximum annual change in inflation rate
                        type: string
                      inflation_max:
                        title: maximum inflation rate
                        type: string
                      inflation_min:
                        title: minimum inflation rate
                        type: string
                      goal_bonded:
                        title: goal of percent bonded atoms
                        type: string
                      blocks_per_year:
                        title: expected blocks per year
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/oracle/v1/inturn_relayer:
    get:
      tags:
      - Query
      summary: InturnRelayer returns the inturn relayer bls pub key and its relay
        interval
      operationId: InturnRelayer
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  bls_pub_key:
                    type: string
                  relay_interval:
                    title: RelayInterval holds start and end(exclusive) time of in-turn
                      relayer, [start, end)
                    type: object
                    properties:
                      start:
                        type: string
                        format: uint64
                      end:
                        type: string
                        format: uint64
                description: QueryInturnRelayerResponse is the response type for the
                  Query In-turn relayer RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/oracle/v1/params:
    get:
      tags:
      - Query
      summary: Params returns the total set of cross chain parameters.
      operationId: OracleParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      relayer_timeout:
                        title: Timeout for the in turn relayer in seconds
                        type: string
                        format: uint64
                      relayer_interval:
                        title: RelayInterval is for in-turn relayer in seconds
                        type: string
                        format: uint64
                      relayer_reward_share:
                        type: integer
                        description: |-
                          Reward share for the relayer sends the claim message,
                          the other relayers signed the bls message will share the reward evenly.
                        format: int64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of slashing module
      operationId: SlashingParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryParamsResponse is the response type for the Query/Params
                  RPC method
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      signed_blocks_window:
                        type: string
                        format: int64
                      min_signed_per_window:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      downtime_jail_duration:
                        type: string
                      slash_fraction_double_sign:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      slash_fraction_downtime:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: Params represents the parameters used for by the
                      slashing module.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      tags:
      - Query
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
                  method
                type: object
                properties:
                  info:
                    title: info is the signing info of all validators
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        start_height:
                          title: Height at which validator was first a candidate OR
                            was unjailed
                          type: string
                          format: int64
                        index_offset:
                          type: string
                          description: |-
                            Index which is incremented each time the validator was a bonded
                            in a block and may have signed a precommit or not. This in conjunction with the
                            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                          format: int64
                        jailed_until:
                          type: string
                          description: Timestamp until which the validator is jailed
                            due to liveness downtime.
                          format: date-time
                        tombstoned:
                          type: boolean
                          description: |-
                            Whether or not a validator has been tombstoned (killed out of validator set). It is set
                            once the validator commits an equivocation or for any other configured misbehiavor.
                        missed_blocks_counter:
                          type: string
                          description: |-
                            A counter kept to avoid unnecessary array reads.
                            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                          format: int64
                      description: |-
                        ValidatorSigningInfo defines a validator's signing info for monitoring their
                        liveness activity.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      tags:
      - Query
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo
      parameters:
      - name: cons_address
        in: path
        description: cons_address is the address to query signing info of
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
                  method
                type: object
                properties:
                  val_signing_info:
                    title: val_signing_info is the signing info of requested val cons
                      address
                    type: object
                    properties:
                      address:
                        type: string
                      start_height:
                        title: Height at which validator was first a candidate OR
                          was unjailed
                        type: string
                        format: int64
                      index_offset:
                        type: string
                        description: |-
                          Index which is incremented each time the validator was a bonded
                          in a block and may have signed a precommit or not. This in conjunction with the
                          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                        format: int64
                      jailed_until:
                        type: string
                        description: Timestamp until which the validator is jailed
                          due to liveness downtime.
                        format: date-time
                      tombstoned:
                        type: boolean
                        description: |-
                          Whether or not a validator has been tombstoned (killed out of validator set). It is set
                          once the validator commits an equivocation or for any other configured misbehiavor.
                      missed_blocks_counter:
                        type: string
                        description: |-
                          A counter kept to avoid unnecessary array reads.
                          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                        format: int64
                    description: |-
                      ValidatorSigningInfo defines a validator's signing info for monitoring their
                      liveness activity.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_responses:
                    type: array
                    description: delegation_responses defines all the delegations'
                      info of a delegator.
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorDelegationsResponse is response type for the
                  Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      tags:
      - Query
      summary: Redelegations queries redelegations of given address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Redelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: src_validator_addr
        in: query
        description: src_validator_addr defines the validator address to redelegate
          from.
        schema:
          type: string
      - name: dst_validator_addr
        in: query
        description: dst_validator_addr defines the validator address to redelegate
          to.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  redelegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        redelegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_src_address:
                              type: string
                              description: validator_src_address is the validator
                                redelegation source operator address.
                            validator_dst_address:
                              type: string
                              description: validator_dst_address is the validator
                                redelegation destination operator address.
                            entries:
                              type: array
                              description: entries are the redelegation entries.
                              items:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                  unbonding_id:
                                    title: Incrementing id that uniquely identifies
                                      this entry
                                    type: string
                                    format: uint64
                                  unbonding_on_hold_ref_count:
                                    title: Strictly positive if this entry's unbonding
                                      has been stopped by external modules
                                    type: string
                                    format: int64
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                          description: |-
                            Redelegation contains the list of a particular delegator's redelegating bonds
                            from a particular source validator to a particular destination validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              redelegation_entry:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                  unbonding_id:
                                    title: Incrementing id that uniquely identifies
                                      this entry
                                    type: string
                                    format: uint64
                                  unbonding_on_hold_ref_count:
                                    title: Strictly positive if this entry's unbonding
                                      has been stopped by external modules
                                    type: string
                                    format: int64
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                              balance:
                                type: string
                            description: |-
                              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                              contains a balance in addition to shares which is more suitable for client
                              responses.
                      description: |-
                        RedelegationResponse is equivalent to a Redelegation except that its entries
                        contain a balance in addition to shares which is more suitable for client
                        responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryRedelegationsResponse is response type for the Query/Redelegations RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: |-
        DelegatorUnbondingDelegations queries all unbonding delegations of a given
        delegator address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorUnbondingDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                              unbonding_id:
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                                format: uint64
                              unbonding_on_hold_ref_count:
                                title: Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                                type: string
                                format: int64
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryUnbondingDelegatorDelegationsResponse is response type for the
                  Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: StakingDelegatorValidators
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the validators' info of a delegator.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                        unbonding_time:
                          type: string
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                        unbonding_on_hold_ref_count:
                          title: strictly positive if this validator's unbonding has
                            been stopped by external modules
                          type: string
                          format: int64
                        unbonding_ids:
                          title: list of unbonding ids, each uniquely identifing an
                            unbonding of this validator
                          type: array
                          items:
                            type: string
                            format: uint64
                        self_del_address:
                          type: string
                          description: self_del_address defines the address of the
                            validator for self delegation.
                        relayer_address:
                          type: string
                          description: relayer_address defines the address of the
                            validator's authorized relayer;.
                        challenger_address:
                          type: string
                          description: challenger_address defines the address of the
                            validator's authorized challenger;.
                        bls_key:
                          title: bls_key defines the bls pubkey of the validator's
                            authorized relayer/challenger/operator;
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorValidatorsResponse is response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                      unbonding_time:
                        type: string
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                      unbonding_on_hold_ref_count:
                        title: strictly positive if this validator's unbonding has
                          been stopped by external modules
                        type: string
                        format: int64
                      unbonding_ids:
                        title: list of unbonding ids, each uniquely identifing an
                          unbonding of this validator
                        type: array
                        items:
                          type: string
                          format: uint64
                      self_del_address:
                        type: string
                        description: self_del_address defines the address of the validator
                          for self delegation.
                      relayer_address:
                        type: string
                        description: relayer_address defines the address of the validator's
                          authorized relayer;.
                      challenger_address:
                        type: string
                        description: challenger_address defines the address of the
                          validator's authorized challenger;.
                      bls_key:
                        title: bls_key defines the bls pubkey of the validator's authorized
                          relayer/challenger/operator;
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
                description: |-
                  QueryDelegatorValidatorResponse response type for the
                  Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      tags:
      - Query
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo
      parameters:
      - name: height
        in: path
        description: height defines at which height to query the historical info.
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  hist:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: prev block info
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      valset:
                        type: array
                        items:
                          type: object
                          properties:
                            operator_address:
                              type: string
                              description: operator_address defines the address of
                                the validator's operator; bech encoded in JSON.
                            consensus_pubkey:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                  description: |-
                                    A URL/resource name that uniquely identifies the type of the serialized
                                    protocol buffer message. This string must contain at least
                                    one "/" character. The last segment of the URL's path must represent
                                    the fully qualified name of the type (as in
                                    `path/google.protobuf.Duration`). The name should be in a canonical form
                                    (e.g., leading "." is not accepted).

                                    In practice, teams usually precompile into the binary all types that they
                                    expect it to use in the context of Any. However, for URLs which use the
                                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                                    server that maps type URLs to message definitions as follows:

                                    * If no scheme is provided, `https` is assumed.
                                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                      value in binary format, or produce an error.
                                    * Applications are allowed to cache lookup results based on the
                                      URL, or have them precompiled into a binary to avoid any
                                      lookup. Therefore, binary compatibility needs to be preserved
                                      on changes to types. (Use versioned type names to manage
                                      breaking changes.)

                                    Note: this functionality is not currently available in the official
                                    protobuf release, and it is not used for type URLs beginning with
                                    type.googleapis.com.

                                    Schemes other than `http`, `https` (or the empty scheme) might be
                                    used with implementation specific semantics.
                                value:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  description: Must be a valid serialized protocol
                                    buffer of the above specified type.
                                  format: byte
                              description: |-
                                `Any` contains an arbitrary serialized protocol buffer message along with a
                                URL that describes the type of the serialized message.

                                Protobuf library provides support to pack/unpack Any values in the form
                                of utility functions or additional generated methods of the Any type.

                                Example 1: Pack and unpack a message in C++.

                                    Foo foo = ...;
                                    Any any;
                                    any.PackFrom(foo);
                                    ...
                                    if (any.UnpackTo(&foo)) {
                                      ...
                                    }

                                Example 2: Pack and unpack a message in Java.

                                    Foo foo = ...;
                                    Any any = Any.pack(foo);
                                    ...
                                    if (any.is(Foo.class)) {
                                      foo = any.unpack(Foo.class);
                                    }

                                Example 3: Pack and unpack a message in Python.

                                    foo = Foo(...)
                                    any = Any()
                                    any.Pack(foo)
                                    ...
                                    if any.Is(Foo.DESCRIPTOR):
                                      any.Unpack(foo)
                                      ...

                                Example 4: Pack and unpack a message in Go

                                     foo := &pb.Foo{...}
                                     any, err := anypb.New(foo)
                                     if err != nil {
                                       ...
                                     }
                                     ...
                                     foo := &pb.Foo{}
                                     if err := any.UnmarshalTo(foo); err != nil {
                                       ...
                                     }

                                The pack methods provided by protobuf library will by default use
                                'type.googleapis.com/full.type.name' as the type URL and the unpack
                                methods only use the fully qualified type name after the last '/'
                                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                                name "y.z".


                                JSON

                                The JSON representation of an `Any` value uses the regular
                                representation of the deserialized, embedded message, with an
                                additional field `@type` which contains the type URL. Example:

                                    package google.profile;
                                    message Person {
                                      string first_name = 1;
                                      string last_name = 2;
                                    }

                                    {
                                      "@type": "type.googleapis.com/google.profile.Person",
                                      "firstName": <string>,
                                      "lastName": <string>
                                    }

                                If the embedded message type is well-known and has a custom JSON
                                representation, that representation will be embedded adding a field
                                `value` which holds the custom JSON in addition to the `@type`
                                field. Example (for message [google.protobuf.Duration][]):

                                    {
                                      "@type": "type.googleapis.com/google.protobuf.Duration",
                                      "value": "1.212s"
                                    }
                            jailed:
                              type: boolean
                              description: jailed defined whether the validator has
                                been jailed from bonded status or not.
                            status:
                              type: string
                              description: status is the validator status (bonded/unbonding/unbonded).
                              default: BOND_STATUS_UNSPECIFIED
                              enum:
                              - BOND_STATUS_UNSPECIFIED
                              - BOND_STATUS_UNBONDED
                              - BOND_STATUS_UNBONDING
                              - BOND_STATUS_BONDED
                            tokens:
                              type: string
                              description: tokens define the delegated tokens (incl.
                                self-delegation).
                            delegator_shares:
                              type: string
                              description: delegator_shares defines total shares issued
                                to a validator's delegators.
                            description:
                              type: object
                              properties:
                                moniker:
                                  type: string
                                  description: moniker defines a human-readable name
                                    for the validator.
                                identity:
                                  type: string
                                  description: identity defines an optional identity
                                    signature (ex. UPort or Keybase).
                                website:
                                  type: string
                                  description: website defines an optional website
                                    link.
                                security_contact:
                                  type: string
                                  description: security_contact defines an optional
                                    email for security contact.
                                details:
                                  type: string
                                  description: details define other optional details.
                              description: description defines the description terms
                                for the validator.
                            unbonding_height:
                              type: string
                              description: unbonding_height defines, if unbonding,
                                the height at which this validator has begun unbonding.
                              format: int64
                            unbonding_time:
                              type: string
                              description: unbonding_time defines, if unbonding, the
                                min time for the validator to complete unbonding.
                              format: date-time
                            commission:
                              type: object
                              properties:
                                commission_rates:
                                  type: object
                                  properties:
                                    rate:
                                      type: string
                                      description: rate is the commission rate charged
                                        to delegators, as a fraction.
                                    max_rate:
                                      type: string
                                      description: max_rate defines the maximum commission
                                        rate which validator can ever charge, as a
                                        fraction.
                                    max_change_rate:
                                      type: string
                                      description: max_change_rate defines the maximum
                                        daily increase of the validator commission,
                                        as a fraction.
                                  description: commission_rates defines the initial
                                    commission rates to be used for creating a validator.
                                update_time:
                                  type: string
                                  description: update_time is the last time the commission
                                    rate was changed.
                                  format: date-time
                              description: commission defines the commission parameters.
                            min_self_delegation:
                              type: string
                              description: |-
                                min_self_delegation is the validator's self declared minimum self delegation.

                                Since: cosmos-sdk 0.46
                            unbonding_on_hold_ref_count:
                              title: strictly positive if this validator's unbonding
                                has been stopped by external modules
                              type: string
                              format: int64
                            unbonding_ids:
                              title: list of unbonding ids, each uniquely identifing
                                an unbonding of this validator
                              type: array
                              items:
                                type: string
                                format: uint64
                            self_del_address:
                              type: string
                              description: self_del_address defines the address of
                                the validator for self delegation.
                            relayer_address:
                              type: string
                              description: relayer_address defines the address of
                                the validator's authorized relayer;.
                            challenger_address:
                              type: string
                              description: challenger_address defines the address
                                of the validator's authorized challenger;.
                            bls_key:
                              title: bls_key defines the bls pubkey of the validator's
                                authorized relayer/challenger/operator;
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                          description: |-
                            Validator defines a validator, together with the total amount of the
                            Validator's bond shares and their exchange rate to coins. Slashing results in
                            a decrease in the exchange rate, allowing correct calculation of future
                            undelegations without iterating over delegators. When coins are delegated to
                            this validator, the validator is credited with a delegation whose number of
                            bond shares is based on the amount of coins delegated divided by the current
                            exchange rate. Voting power can be calculated as total bonded shares
                            multiplied by exchange rate.
                    description: hist defines the historical info at the given height.
                description: |-
                  QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/params:
    get:
      tags:
      - Query
      summary: Parameters queries the staking parameters.
      operationId: StakingParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      unbonding_time:
                        type: string
                        description: unbonding_time is the time duration of unbonding.
                      max_validators:
                        type: integer
                        description: max_validators is the maximum number of validators.
                        format: int64
                      max_entries:
                        type: integer
                        description: max_entries is the max entries for either unbonding
                          delegation or redelegation (per pair/trio).
                        format: int64
                      historical_entries:
                        type: integer
                        description: historical_entries is the number of historical
                          entries to persist.
                        format: int64
                      bond_denom:
                        type: string
                        description: bond_denom defines the bondable coin denomination.
                      min_commission_rate:
                        title: min_commission_rate is the chain-wide minimum commission
                          rate that a validator can charge their delegators
                        type: string
                      min_self_delegation:
                        type: string
                        description: min_self_delegation defines the minimum self
                          delegation for validators.
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/pool:
    get:
      tags:
      - Query
      summary: Pool queries the pool info.
      operationId: Pool
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: object
                    properties:
                      not_bonded_tokens:
                        type: string
                      bonded_tokens:
                        type: string
                    description: pool defines the pool info.
                description: QueryPoolResponse is response type for the Query/Pool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators:
    get:
      tags:
      - Query
      summary: Validators queries all validators that match the given status.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Validators
      parameters:
      - name: status
        in: query
        description: status enables to query for validators matching a given status.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorsResponse is response type for the Query/Validators
                  RPC method
                type: object
                properties:
                  validators:
                    type: array
                    description: validators contains all the queried validators.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                        unbonding_time:
                          type: string
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                        unbonding_on_hold_ref_count:
                          title: strictly positive if this validator's unbonding has
                            been stopped by external modules
                          type: string
                          format: int64
                        unbonding_ids:
                          title: list of unbonding ids, each uniquely identifing an
                            unbonding of this validator
                          type: array
                          items:
                            type: string
                            format: uint64
                        self_del_address:
                          type: string
                          description: self_del_address defines the address of the
                            validator for self delegation.
                        relayer_address:
                          type: string
                          description: relayer_address defines the address of the
                            validator's authorized relayer;.
                        challenger_address:
                          type: string
                          description: challenger_address defines the address of the
                            validator's authorized challenger;.
                        bls_key:
                          title: bls_key defines the bls pubkey of the validator's
                            authorized relayer/challenger/operator;
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: Validator queries validator info for given validator address.
      operationId: Validator
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorResponse is response type for the Query/Validator
                  RPC method
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                      unbonding_time:
                        type: string
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                      unbonding_on_hold_ref_count:
                        title: strictly positive if this validator's unbonding has
                          been stopped by external modules
                        type: string
                        format: int64
                      unbonding_ids:
                        title: list of unbonding ids, each uniquely identifing an
                          unbonding of this validator
                        type: array
                        items:
                          type: string
                          format: uint64
                      self_del_address:
                        type: string
                        description: self_del_address defines the address of the validator
                          for self delegation.
                      relayer_address:
                        type: string
                        description: relayer_address defines the address of the validator's
                          authorized relayer;.
                      challenger_address:
                        type: string
                        description: challenger_address defines the address of the
                          validator's authorized challenger;.
                      bls_key:
                        title: bls_key defines the bls pubkey of the validator's authorized
                          relayer/challenger/operator;
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      tags:
      - Query
      summary: ValidatorDelegations queries delegate info for given validator.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorDelegationsResponse is response type for the
                  Query/ValidatorDelegations RPC method
                type: object
                properties:
                  delegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_response:
                    type: object
                    properties:
                      delegation:
                        type: object
                        properties:
                          delegator_address:
                            type: string
                            description: delegator_address is the bech32-encoded address
                              of the delegator.
                          validator_address:
                            type: string
                            description: validator_address is the bech32-encoded address
                              of the validator.
                          shares:
                            type: string
                            description: shares define the delegation shares received.
                        description: |-
                          Delegation represents the bond with tokens held by an account. It is
                          owned by one delegator, and is associated with the voting power of one
                          validator.
                      balance:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                    description: |-
                      DelegationResponse is equivalent to Delegation except that it contains a
                      balance in addition to shares which is more suitable for client responses.
                description: QueryDelegationResponse is response type for the Query/Delegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      tags:
      - Query
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbond:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                        description: delegator_address is the bech32-encoded address
                          of the delegator.
                      validator_address:
                        type: string
                        description: validator_address is the bech32-encoded address
                          of the validator.
                      entries:
                        type: array
                        description: entries are the unbonding delegation entries.
                        items:
                          type: object
                          properties:
                            creation_height:
                              type: string
                              description: creation_height is the height which the
                                unbonding took place.
                              format: int64
                            completion_time:
                              type: string
                              description: completion_time is the unix time for unbonding
                                completion.
                              format: date-time
                            initial_balance:
                              type: string
                              description: initial_balance defines the tokens initially
                                scheduled to receive at completion.
                            balance:
                              type: string
                              description: balance defines the tokens to receive at
                                completion.
                            unbonding_id:
                              title: Incrementing id that uniquely identifies this
                                entry
                              type: string
                              format: uint64
                            unbonding_on_hold_ref_count:
                              title: Strictly positive if this entry's unbonding has
                                been stopped by external modules
                              type: string
                              format: int64
                          description: UnbondingDelegationEntry defines an unbonding
                            object with relevant metadata.
                    description: |-
                      UnbondingDelegation stores all of a single delegator's unbonding bonds
                      for a single validator in an time-ordered list.
                description: |-
                  QueryDelegationResponse is response type for the Query/UnbondingDelegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorUnbondingDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                              unbonding_id:
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                                format: uint64
                              unbonding_on_hold_ref_count:
                                title: Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                                type: string
                                format: int64
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorUnbondingDelegationsResponse is response type for the
                  Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/tx/v1beta1/decode:
    post:
      tags:
      - Service
      summary: TxDecode decodes the transaction.
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecode
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                tx_bytes:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: tx_bytes is the raw transaction.
                  format: byte
              description: |-
                TxDecodeRequest is the request type for the Service.TxDecode
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.TxDecodeResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/decode/amino:
    post:
      tags:
      - Service
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecodeAmino
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                amino_binary:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: |-
                TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amino_json:
                    type: string
                description: |-
                  TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/encode:
    post:
      tags:
      - Service
      summary: TxEncode encodes the transaction.
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncode
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.TxEncodeRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tx_bytes:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: tx_bytes is the encoded transaction bytes.
                    format: byte
                description: |-
                  TxEncodeResponse is the response type for the
                  Service.TxEncode method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/encode/amino:
    post:
      tags:
      - Service
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncodeAmino
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                amino_json:
                  type: string
              description: |-
                TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amino_binary:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/simulate:
    post:
      tags:
      - Service
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.SimulateRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  gas_info:
                    type: object
                    properties:
                      gas_wanted:
                        type: string
                        description: GasWanted is the maximum units of work we allow
                          this tx to perform.
                        format: uint64
                      gas_used:
                        type: string
                        description: GasUsed is the amount of gas actually consumed.
                        format: uint64
                      min_gas_price:
                        type: string
                        description: MinGasPrice are the min gas price.
                    description: gas_info is the information about gas used in the
                      simulation.
                  result:
                    type: object
                    properties:
                      data:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          Data is any data returned from message or handler execution. It MUST be
                          length prefixed in order to separate data from multiple message executions.
                          Deprecated. This field is still populated, but prefer msg_response instead
                          because it also contains the Msg response typeURL.
                        format: byte
                      log:
                        type: string
                        description: Log contains the log information from message
                          or handler execution.
                      events:
                        type: array
                        description: |-
                          Events contains a slice of Event objects that were emitted during message
                          or handler execution.
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                      msg_responses:
                        type: array
                        description: |-
                          msg_responses contains the Msg handler responses type packed in Anys.

                          Since: cosmos-sdk 0.46
                        items:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                    description: result is the result of the simulation.
                description: |-
                  SimulateResponse is the response type for the
                  Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs:
    get:
      tags:
      - Service
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent
      parameters:
      - name: events
        in: query
        description: events is the list of transaction event type.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: order_by
        in: query
        description: |2-
           - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
           - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
           - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
        schema:
          type: string
          default: ORDER_BY_UNSPECIFIED
          enum:
          - ORDER_BY_UNSPECIFIED
          - ORDER_BY_ASC
          - ORDER_BY_DESC
      - name: page
        in: query
        description: page is the page number to query, starts at 1. If not provided,
          will default to first page.
        schema:
          type: string
          format: uint64
      - name: limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
    post:
      tags:
      - Service
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                tx_bytes:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: tx_bytes is the raw transaction.
                  format: byte
                mode:
                  type: string
                  description: |-
                    BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

                     - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                     - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
                    BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
                     - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                    a CheckTx execution response only.
                     - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                    immediately.
                  default: BROADCAST_MODE_UNSPECIFIED
                  enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
              description: |-
                BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
                RPC method.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tx_response:
                    type: object
                    properties:
                      height:
                        title: The block height
                        type: string
                        format: int64
                      txhash:
                        type: string
                        description: The transaction hash.
                      codespace:
                        title: Namespace for the Code
                        type: string
                      code:
                        type: integer
                        description: Response code.
                        format: int64
                      data:
                        type: string
                        description: Result bytes, if any.
                      raw_log:
                        type: string
                        description: |-
                          The output of the application's logger (raw string). May be
                          non-deterministic.
                      logs:
                        type: array
                        description: The output of the application's logger (typed).
                          May be non-deterministic.
                        items:
                          type: object
                          properties:
                            msg_index:
                              type: integer
                              format: int64
                            log:
                              type: string
                            events:
                              type: array
                              description: |-
                                Events contains a slice of Event objects that were emitted during some
                                execution.
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  attributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      description: |-
                                        Attribute defines an attribute wrapper where the key and value are
                                        strings instead of raw bytes.
                                description: |-
                                  StringEvent defines en Event object wrapper where all the attributes
                                  contain key/value pairs that are strings instead of raw bytes.
                          description: ABCIMessageLog defines a structure containing
                            an indexed tx ABCI message log.
                      info:
                        type: string
                        description: Additional information. May be non-deterministic.
                      gas_wanted:
                        type: string
                        description: Amount of gas requested for transaction.
                        format: int64
                      gas_used:
                        type: string
                        description: Amount of gas consumed by transaction.
                        format: int64
                      tx:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      timestamp:
                        type: string
                        description: |-
                          Time of the previous block. For heights > 1, it's the weighted median of
                          the timestamps of the valid votes in the block.LastCommit. For height == 1,
                          it's genesis time.
                      events:
                        type: array
                        description: |-
                          Events defines all the events emitted by processing a transaction. Note,
                          these events include those emitted by processing all the messages and those
                          emitted from the ante. Whereas Logs contains the events, with
                          additional metadata, emitted only by processing the messages.

                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                    description: |-
                      TxResponse defines a structure containing relevant tx data and metadata. The
                      tags are stringified and the log is JSON decoded.
                description: |-
                  BroadcastTxResponse is the response type for the
                  Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      tags:
      - Service
      summary: GetBlockWithTxs fetches a block with decoded txs.
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs
      parameters:
      - name: height
        in: path
        description: height is the height of the block to query.
        required: true
        schema:
          type: string
          format: int64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      tags:
      - Service
      summary: GetTx fetches a tx by hash.
      operationId: GetTx
      parameters:
      - name: hash
        in: path
        description: hash is the tx hash to query, encoded as a hex string.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      tags:
      - Query
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan
      parameters:
      - name: name
        in: path
        description: name is the name of the applied plan to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  height:
                    type: string
                    description: height is the block height at which the plan was
                      applied.
                    format: int64
                description: |-
                  QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      tags:
      - Query
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  plan:
                    type: array
                    description: plan is the current upgrade plan.
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |-
                            Sets the name for the upgrade. This name will be used by the upgraded
                            version of the software to apply any special "on-upgrade" commands during
                            the first BeginBlock method after the upgrade is applied. It is also used
                            to detect whether a software version can handle a given upgrade. If no
                            upgrade handler with this name has been set in the software, it will be
                            assumed that the software is out-of-date when the upgrade Time or Height is
                            reached and the software will exit.
                        height:
                          type: string
                          description: |-
                            The height at which the upgrade must be performed.
                            Only used if Time is not set.
                          format: int64
                        info:
                          title: |-
                            Any application specific upgrade info to be included on-chain
                            such as a git commit that validators could automatically upgrade to
                          type: string
                      description: Plan specifies information about a planned upgrade
                        and when it should occur.
                description: |-
                  QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      tags:
      - Query
      summary: ModuleVersions queries the list of module versions from state.
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      parameters:
      - name: module_name
        in: query
        description: |-
          module_name is a field to query a specific module
          consensus version from state. Leaving this empty will
          fetch the full list of module versions from state.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  module_versions:
                    type: array
                    description: module_versions is a list of module names with their
                      consensus versions.
                    items:
                      type: object
                      properties:
                        name:
                          title: name of the app module
                          type: string
                        version:
                          title: consensus version of the app module
                          type: string
                          format: uint64
                      description: |-
                        ModuleVersion specifies a module and its consensus version.

                        Since: cosmos-sdk 0.43
                description: |-
                  QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
                  RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      tags:
      - Query
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
        This rpc is deprecated now that IBC has its own replacement
        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState
      parameters:
      - name: last_height
        in: path
        description: |-
          last height of the current chain must be sent in request
          as this is the height under which next consensus state is stored
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    title: 'Since: cosmos-sdk 0.43'
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
components:
  schemas:
    google.protobuf.Any:
      type: object
      properties:
        type_url:
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    greenfield.bridge.Params:
      type: object
      properties:
        transfer_out_relayer_fee:
          title: Relayer fee for the cross chain transfer out tx
          type: string
        transfer_out_ack_relayer_fee:
          title: Relayer fee for the ACK or FAIL_ACK package of the cross chain transfer
            out tx
          type: string
      description: Params defines the parameters for the module.
    greenfield.bridge.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            transfer_out_relayer_fee:
              title: Relayer fee for the cross chain transfer out tx
              type: string
            transfer_out_ack_relayer_fee:
              title: Relayer fee for the ACK or FAIL_ACK package of the cross chain
                transfer out tx
              type: string
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    grpc.gateway.runtime.Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
    cosmos.base.query.v1beta1.PageRequest:
      title: |-
        PageRequest is to be embedded in gRPC request messages for efficient
        pagination. Ex:
      type: object
      properties:
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
        offset:
          type: string
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          format: uint64
        limit:
          type: string
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          format: uint64
        count_total:
          type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
        reverse:
          type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
      description: |-
        message SomeRequest {
                 Foo some_parameter = 1;
                 PageRequest pagination = 2;
         }
    cosmos.base.query.v1beta1.PageResponse:
      type: object
      properties:
        next_key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            next_key is the key to be passed to PageRequest.key to
            query the next page most efficiently. It will be empty if
            there are no more results.
          format: byte
        total:
          title: |-
            total is total number of results available if PageRequest.count_total
            was set, its value is undefined otherwise
          type: string
          format: uint64
      description: |-
        PageResponse is to be embedded in gRPC response messages where the
        corresponding request message has used PageRequest.

         message SomeResponse {
                 repeated Bar results = 1;
                 PageResponse page = 2;
         }
    greenfield.payment.AutoSettleRecord:
      type: object
      properties:
        timestamp:
          type: string
          description: timestamp is the unix timestamp when the stream account will
            be settled.
          format: int64
        addr:
          title: A stream account address
          type: string
      description: |-
        AutoSettleRecord is the record keeps the auto settle information.
        The EndBlocker of payment module will scan the list of AutoSettleRecord
        and settle the stream account if the timestamp is less than the current time.
    greenfield.payment.OutFlow:
      title: |-
        OutFlow defines the accumulative outflow stream rate in BNB
        from a stream account to a Storage Provider
      type: object
      properties:
        to_address:
          title: stream account address who receives the flow, usually SP(service
            provider)
          type: string
        rate:
          title: flow rate
          type: string
    greenfield.payment.Params:
      type: object
      properties:
        reserve_time:
          title: Time duration which the buffer balance need to be reserved for NetOutFlow
            e.g. 6 month
          type: string
          format: uint64
        payment_account_count_limit:
          title: The maximum number of payment accounts that can be created by one
            user
          type: string
          format: uint64
        forced_settle_time:
          type: string
          description: |-
            Time duration threshold of forced settlement.
            If dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled.
          format: uint64
        max_auto_force_settle_num:
          title: the maximum number of accounts that will be forced settled in one
            block
          type: string
          format: uint64
        fee_denom:
          title: The denom of fee charged in payment module
          type: string
        validator_tax_rate:
          title: The tax rate to pay for validators in storage payment. The default
            value is 1%(0.01)
          type: string
      description: Params defines the parameters for the module.
    greenfield.payment.PaymentAccount:
      title: PaymentAccount defines a payment account
      type: object
      properties:
        addr:
          title: the address of the payment account
          type: string
        owner:
          title: the owner address of the payment account
          type: string
        refundable:
          title: whether the payment account is refundable
          type: boolean
    greenfield.payment.PaymentAccountCount:
      title: PaymentAccountCount defines the state struct which stores the number
        of payment accounts for an account
      type: object
      properties:
        owner:
          title: owner is the account address
          type: string
        count:
          title: count is the number of payment accounts for the account
          type: string
          format: uint64
    greenfield.payment.QueryAllAutoSettleRecordResponse:
      type: object
      properties:
        auto_settle_record:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                description: timestamp is the unix timestamp when the stream account
                  will be settled.
                format: int64
              addr:
                title: A stream account address
                type: string
            description: |-
              AutoSettleRecord is the record keeps the auto settle information.
              The EndBlocker of payment module will scan the list of AutoSettleRecord
              and settle the stream account if the timestamp is less than the current time.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.payment.QueryAllPaymentAccountCountResponse:
      type: object
      properties:
        payment_account_count:
          type: array
          items:
            title: PaymentAccountCount defines the state struct which stores the number
              of payment accounts for an account
            type: object
            properties:
              owner:
                title: owner is the account address
                type: string
              count:
                title: count is the number of payment accounts for the account
                type: string
                format: uint64
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.payment.QueryAllPaymentAccountResponse:
      type: object
      properties:
        payment_account:
          type: array
          items:
            title: PaymentAccount defines a payment account
            type: object
            properties:
              addr:
                title: the address of the payment account
                type: string
              owner:
                title: the owner address of the payment account
                type: string
              refundable:
                title: whether the payment account is refundable
                type: boolean
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.payment.QueryAllStreamRecordResponse:
      type: object
      properties:
        stream_record:
          type: array
          items:
            title: Stream Payment Record of a stream account
            type: object
            properties:
              account:
                title: account address
                type: string
              crud_timestamp:
                title: latest update timestamp of the stream record
                type: string
                format: int64
              netflow_rate:
                type: string
                description: |-
                  The per-second rate that an account's balance is changing.
                  It is the sum of the account's inbound and outbound flow rates.
              static_balance:
                type: string
                description: The balance of the stream account at the latest CRUD
                  timestamp.
              buffer_balance:
                title: |-
                  reserved balance of the stream account
                  If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
                type: string
              lock_balance:
                title: the locked balance of the stream account after it puts a new
                  object and before the object is sealed
                type: string
              status:
                title: the status of the stream account
                type: string
                description: |-
                  - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                   - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                  A frozen stream account cannot be used as payment address for buckets.
                  It can be unfrozen by depositing more BNB to the stream account.
                default: STREAM_ACCOUNT_STATUS_ACTIVE
                enum:
                - STREAM_ACCOUNT_STATUS_ACTIVE
                - STREAM_ACCOUNT_STATUS_FROZEN
              settle_timestamp:
                title: the unix timestamp when the stream account will be settled
                type: string
                format: int64
              out_flows:
                title: the accumulated outflow rates of the stream account
                type: array
                items:
                  title: |-
                    OutFlow defines the accumulative outflow stream rate in BNB
                    from a stream account to a Storage Provider
                  type: object
                  properties:
                    to_address:
                      title: stream account address who receives the flow, usually
                        SP(service provider)
                      type: string
                    rate:
                      title: flow rate
                      type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.payment.QueryDynamicBalanceResponse:
      type: object
      properties:
        dynamic_balance:
          title: dynamic balance is static balance + flowDelta
          type: string
        stream_record:
          title: the stream record of the given account, if it does not exist, it
            will be default values
          type: object
          properties:
            account:
              title: account address
              type: string
            crud_timestamp:
              title: latest update timestamp of the stream record
              type: string
              format: int64
            netflow_rate:
              type: string
              description: |-
                The per-second rate that an account's balance is changing.
                It is the sum of the account's inbound and outbound flow rates.
            static_balance:
              type: string
              description: The balance of the stream account at the latest CRUD timestamp.
            buffer_balance:
              title: |-
                reserved balance of the stream account
                If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
              type: string
            lock_balance:
              title: the locked balance of the stream account after it puts a new
                object and before the object is sealed
              type: string
            status:
              title: the status of the stream account
              type: string
              description: |-
                - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                 - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                A frozen stream account cannot be used as payment address for buckets.
                It can be unfrozen by depositing more BNB to the stream account.
              default: STREAM_ACCOUNT_STATUS_ACTIVE
              enum:
              - STREAM_ACCOUNT_STATUS_ACTIVE
              - STREAM_ACCOUNT_STATUS_FROZEN
            settle_timestamp:
              title: the unix timestamp when the stream account will be settled
              type: string
              format: int64
            out_flows:
              title: the accumulated outflow rates of the stream account
              type: array
              items:
                title: |-
                  OutFlow defines the accumulative outflow stream rate in BNB
                  from a stream account to a Storage Provider
                type: object
                properties:
                  to_address:
                    title: stream account address who receives the flow, usually SP(service
                      provider)
                    type: string
                  rate:
                    title: flow rate
                    type: string
        current_timestamp:
          title: the timestamp of the current block
          type: string
          format: int64
        bank_balance:
          title: bank_balance is the BNB balance of the bank module
          type: string
        available_balance:
          title: available_balance is bank balance + static balance
          type: string
        locked_fee:
          title: locked_fee is buffer balance + locked balance
          type: string
        change_rate:
          title: change_rate is the netflow rate of the given account
          type: string
    greenfield.payment.QueryGetPaymentAccountCountResponse:
      type: object
      properties:
        payment_account_count:
          title: PaymentAccountCount defines the state struct which stores the number
            of payment accounts for an account
          type: object
          properties:
            owner:
              title: owner is the account address
              type: string
            count:
              title: count is the number of payment accounts for the account
              type: string
              format: uint64
    greenfield.payment.QueryGetPaymentAccountResponse:
      type: object
      properties:
        payment_account:
          title: PaymentAccount defines a payment account
          type: object
          properties:
            addr:
              title: the address of the payment account
              type: string
            owner:
              title: the owner address of the payment account
              type: string
            refundable:
              title: whether the payment account is refundable
              type: boolean
    greenfield.payment.QueryGetPaymentAccountsByOwnerResponse:
      type: object
      properties:
        paymentAccounts:
          type: array
          items:
            type: string
    greenfield.payment.QueryGetStreamRecordResponse:
      type: object
      properties:
        stream_record:
          title: Stream Payment Record of a stream account
          type: object
          properties:
            account:
              title: account address
              type: string
            crud_timestamp:
              title: latest update timestamp of the stream record
              type: string
              format: int64
            netflow_rate:
              type: string
              description: |-
                The per-second rate that an account's balance is changing.
                It is the sum of the account's inbound and outbound flow rates.
            static_balance:
              type: string
              description: The balance of the stream account at the latest CRUD timestamp.
            buffer_balance:
              title: |-
                reserved balance of the stream account
                If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
              type: string
            lock_balance:
              title: the locked balance of the stream account after it puts a new
                object and before the object is sealed
              type: string
            status:
              title: the status of the stream account
              type: string
              description: |-
                - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
                 - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
                A frozen stream account cannot be used as payment address for buckets.
                It can be unfrozen by depositing more BNB to the stream account.
              default: STREAM_ACCOUNT_STATUS_ACTIVE
              enum:
              - STREAM_ACCOUNT_STATUS_ACTIVE
              - STREAM_ACCOUNT_STATUS_FROZEN
            settle_timestamp:
              title: the unix timestamp when the stream account will be settled
              type: string
              format: int64
            out_flows:
              title: the accumulated outflow rates of the stream account
              type: array
              items:
                title: |-
                  OutFlow defines the accumulative outflow stream rate in BNB
                  from a stream account to a Storage Provider
                type: object
                properties:
                  to_address:
                    title: stream account address who receives the flow, usually SP(service
                      provider)
                    type: string
                  rate:
                    title: flow rate
                    type: string
    greenfield.payment.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            reserve_time:
              title: Time duration which the buffer balance need to be reserved for
                NetOutFlow e.g. 6 month
              type: string
              format: uint64
            payment_account_count_limit:
              title: The maximum number of payment accounts that can be created by
                one user
              type: string
              format: uint64
            forced_settle_time:
              type: string
              description: |-
                Time duration threshold of forced settlement.
                If dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled.
              format: uint64
            max_auto_force_settle_num:
              title: the maximum number of accounts that will be forced settled in
                one block
              type: string
              format: uint64
            fee_denom:
              title: The denom of fee charged in payment module
              type: string
            validator_tax_rate:
              title: The tax rate to pay for validators in storage payment. The default
                value is 1%(0.01)
              type: string
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    greenfield.payment.StreamAccountStatus:
      title: StreamAccountStatus defines the status of a stream account
      type: string
      description: |-
        - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
         - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
        A frozen stream account cannot be used as payment address for buckets.
        It can be unfrozen by depositing more BNB to the stream account.
      default: STREAM_ACCOUNT_STATUS_ACTIVE
      enum:
      - STREAM_ACCOUNT_STATUS_ACTIVE
      - STREAM_ACCOUNT_STATUS_FROZEN
    greenfield.payment.StreamRecord:
      title: Stream Payment Record of a stream account
      type: object
      properties:
        account:
          title: account address
          type: string
        crud_timestamp:
          title: latest update timestamp of the stream record
          type: string
          format: int64
        netflow_rate:
          type: string
          description: |-
            The per-second rate that an account's balance is changing.
            It is the sum of the account's inbound and outbound flow rates.
        static_balance:
          type: string
          description: The balance of the stream account at the latest CRUD timestamp.
        buffer_balance:
          title: |-
            reserved balance of the stream account
            If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
          type: string
        lock_balance:
          title: the locked balance of the stream account after it puts a new object
            and before the object is sealed
          type: string
        status:
          title: the status of the stream account
          type: string
          description: |-
            - STREAM_ACCOUNT_STATUS_ACTIVE: STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
             - STREAM_ACCOUNT_STATUS_FROZEN: STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
            A frozen stream account cannot be used as payment address for buckets.
            It can be unfrozen by depositing more BNB to the stream account.
          default: STREAM_ACCOUNT_STATUS_ACTIVE
          enum:
          - STREAM_ACCOUNT_STATUS_ACTIVE
          - STREAM_ACCOUNT_STATUS_FROZEN
        settle_timestamp:
          title: the unix timestamp when the stream account will be settled
          type: string
          format: int64
        out_flows:
          title: the accumulated outflow rates of the stream account
          type: array
          items:
            title: |-
              OutFlow defines the accumulative outflow stream rate in BNB
              from a stream account to a Storage Provider
            type: object
            properties:
              to_address:
                title: stream account address who receives the flow, usually SP(service
                  provider)
                type: string
              rate:
                title: flow rate
                type: string
    greenfield.sp.Description:
      type: object
      properties:
        moniker:
          title: moniker defines a human-readable name for the storage provider
          type: string
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a storage provider description.
    greenfield.sp.Params:
      type: object
      properties:
        deposit_denom:
          type: string
          description: deposit_denom defines the staking coin denomination.
        min_deposit:
          type: string
          description: min_deposit defines the minimum deposit amount for storage
            providers.
        secondary_sp_store_price_ratio:
          title: the ratio of the store price of the secondary sp to the primary sp,
            the default value is 80%
          type: string
      description: Params defines the parameters for the module.
    greenfield.sp.QueryGetSecondarySpStorePriceByTimeResponse:
      type: object
      properties:
        secondary_sp_store_price:
          title: global secondary sp store price, the price for all secondary sps
          type: object
          properties:
            update_time_sec:
              title: update time, unix timestamp in seconds
              type: string
              format: int64
            store_price:
              title: store price, in bnb wei per charge byte
              type: string
    greenfield.sp.QueryGetSpStoragePriceByTimeResponse:
      type: object
      properties:
        sp_storage_price:
          title: storage price of a specific sp
          type: object
          properties:
            sp_address:
              title: sp address
              type: string
            update_time_sec:
              title: update time, unix timestamp in seconds
              type: string
              format: int64
            read_price:
              title: read price, in bnb wei per charge byte
              type: string
            free_read_quota:
              title: free read quota, in byte
              type: string
              format: uint64
            store_price:
              title: store price, in bnb wei per charge byte
              type: string
    greenfield.sp.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            deposit_denom:
              type: string
              description: deposit_denom defines the staking coin denomination.
            min_deposit:
              type: string
              description: min_deposit defines the minimum deposit amount for storage
                providers.
            secondary_sp_store_price_ratio:
              title: the ratio of the store price of the secondary sp to the primary
                sp, the default value is 80%
              type: string
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    greenfield.sp.QueryStorageProviderResponse:
      type: object
      properties:
        storageProvider:
          title: StorageProvider defines the meta info of storage provider
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the account address of the storage
                provider's operator; It also is the unique index key of sp.
            funding_address:
              type: string
              description: funding_address defines one of the storage provider's accounts
                which is used to deposit and reward.
            seal_address:
              title: seal_address defines one of the storage provider's accounts which
                is used to SealObject
              type: string
            approval_address:
              title: approval_address defines one of the storage provider's accounts
                which is used to approve use's createBucket/createObject request
              type: string
            gc_address:
              type: string
              description: gc_address defines one of the storage provider's accounts
                which is used for gc purpose.
            total_deposit:
              type: string
              description: total_deposit defines the number of tokens deposited by
                this storage provider for staking.
            status:
              title: status defines the current service status of this storage provider
              type: string
              description: Status is the status of a storage provider.
              default: STATUS_IN_SERVICE
              enum:
              - STATUS_IN_SERVICE
              - STATUS_IN_JAILED
              - STATUS_GRACEFUL_EXITING
              - STATUS_OUT_OF_SERVICE
            endpoint:
              title: endpoint define the storage provider's network service address
              type: string
            description:
              type: object
              properties:
                moniker:
                  title: moniker defines a human-readable name for the storage provider
                  type: string
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the storage
                provider.
    greenfield.sp.QueryStorageProvidersResponse:
      type: object
      properties:
        sps:
          type: array
          items:
            title: StorageProvider defines the meta info of storage provider
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the account address of the storage
                  provider's operator; It also is the unique index key of sp.
              funding_address:
                type: string
                description: funding_address defines one of the storage provider's
                  accounts which is used to deposit and reward.
              seal_address:
                title: seal_address defines one of the storage provider's accounts
                  which is used to SealObject
                type: string
              approval_address:
                title: approval_address defines one of the storage provider's accounts
                  which is used to approve use's createBucket/createObject request
                type: string
              gc_address:
                type: string
                description: gc_address defines one of the storage provider's accounts
                  which is used for gc purpose.
              total_deposit:
                type: string
                description: total_deposit defines the number of tokens deposited
                  by this storage provider for staking.
              status:
                title: status defines the current service status of this storage provider
                type: string
                description: Status is the status of a storage provider.
                default: STATUS_IN_SERVICE
                enum:
                - STATUS_IN_SERVICE
                - STATUS_IN_JAILED
                - STATUS_GRACEFUL_EXITING
                - STATUS_OUT_OF_SERVICE
              endpoint:
                title: endpoint define the storage provider's network service address
                type: string
              description:
                type: object
                properties:
                  moniker:
                    title: moniker defines a human-readable name for the storage provider
                    type: string
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the storage
                  provider.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    greenfield.sp.SecondarySpStorePrice:
      title: global secondary sp store price, the price for all secondary sps
      type: object
      properties:
        update_time_sec:
          title: update time, unix timestamp in seconds
          type: string
          format: int64
        store_price:
          title: store price, in bnb wei per charge byte
          type: string
    greenfield.sp.SpStoragePrice:
      title: storage price of a specific sp
      type: object
      properties:
        sp_address:
          title: sp address
          type: string
        update_time_sec:
          title: update time, unix timestamp in seconds
          type: string
          format: int64
        read_price:
          title: read price, in bnb wei per charge byte
          type: string
        free_read_quota:
          title: free read quota, in byte
          type: string
          format: uint64
        store_price:
          title: store price, in bnb wei per charge byte
          type: string
    greenfield.sp.Status:
      type: string
      description: Status is the status of a storage provider.
      default: STATUS_IN_SERVICE
      enum:
      - STATUS_IN_SERVICE
      - STATUS_IN_JAILED
      - STATUS_GRACEFUL_EXITING
      - STATUS_OUT_OF_SERVICE
    greenfield.sp.StorageProvider:
      title: StorageProvider defines the meta info of storage provider
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the account address of the storage
            provider's operator; It also is the unique index key of sp.
        funding_address:
          type: string
          description: funding_address defines one of the storage provider's accounts
            which is used to deposit and reward.
        seal_address:
          title: seal_address defines one of the storage provider's accounts which
            is used to SealObject
          type: string
        approval_address:
          title: approval_address defines one of the storage provider's accounts which
            is used to approve use's createBucket/createObject request
          type: string
        gc_address:
          type: string
          description: gc_address defines one of the storage provider's accounts which
            is used for gc purpose.
        total_deposit:
          type: string
          description: total_deposit defines the number of tokens deposited by this
            storage provider for staking.
        status:
          title: status defines the current service status of this storage provider
          type: string
          description: Status is the status of a storage provider.
          default: STATUS_IN_SERVICE
          enum:
          - STATUS_IN_SERVICE
          - STATUS_IN_JAILED
          - STATUS_GRACEFUL_EXITING
          - STATUS_OUT_OF_SERVICE
        endpoint:
          title: endpoint define the storage provider's network service address
          type: string
        description:
          type: object
          properties:
            moniker:
              title: moniker defines a human-readable name for the storage provider
              type: string
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: description defines the description terms for the storage provider.
    greenfield.common.UInt64Value:
      type: object
      properties:
        value:
          type: string
          description: The uint64 value.
          format: uint64
      description: |-
        Wrapper message for `uint64`.

        The JSON representation for `UInt64Value` is JSON string.
    greenfield.permission.ActionType:
      title: ActionType defines the operations you can execute in greenfield storage
        network
      type: string
      default: ACTION_UNSPECIFIED
      enum:
      - ACTION_UNSPECIFIED
      - ACTION_UPDATE_BUCKET_INFO
      - ACTION_DELETE_BUCKET
      - ACTION_CREATE_OBJECT
      - ACTION_DELETE_OBJECT
      - ACTION_COPY_OBJECT
      - ACTION_GET_OBJECT
      - ACTION_EXECUTE_OBJECT
      - ACTION_LIST_OBJECT
      - ACTION_UPDATE_GROUP_MEMBER
      - ACTION_DELETE_GROUP
      - ACTION_UPDATE_OBJECT_INFO
      - ACTION_UPDATE_GROUP_EXTRA
      - ACTION_TYPE_ALL
    greenfield.permission.Effect:
      title: Effect define the effect of the operation permission, include Allow or
        deny
      type: string
      default: EFFECT_UNSPECIFIED
      enum:
      - EFFECT_UNSPECIFIED
      - EFFECT_ALLOW
      - EFFECT_DENY
    greenfield.permission.GroupMember:
      type: object
      properties:
        id:
          title: id is an unique u256 sequence for each group member. It also be used
            as NFT tokenID
          type: string
        group_id:
          title: group_id is the unique id of the group
          type: string
        member:
          title: member is the account address of the member
          type: string
    greenfield.permission.Policy:
      type: object
      properties:
        id:
          title: id is an unique u256 sequence for each policy. It also be used as
            NFT tokenID
          type: string
        principal:
          title: principal defines the accounts/group which the permission grants
            to
          type: object
          properties:
            type:
              type: string
              description: |-
                PrincipalType refers to the identity type of system users or entities.
                In Greenfield, it usually refers to accounts or groups.
              default: PRINCIPAL_TYPE_UNSPECIFIED
              enum:
              - PRINCIPAL_TYPE_UNSPECIFIED
              - PRINCIPAL_TYPE_GNFD_ACCOUNT
              - PRINCIPAL_TYPE_GNFD_GROUP
            value:
              title: |-
                When the type is an account, its value is sdk.AccAddress().String();
                when the type is a group, its value is math.Uint().String()
              type: string
          description: Principal define the roles that can grant permissions. Currently,
            it can be account or group.
        resource_type:
          title: resource_type defines the type of resource that grants permission
            for
          type: string
          default: RESOURCE_TYPE_UNSPECIFIED
          enum:
          - RESOURCE_TYPE_UNSPECIFIED
          - RESOURCE_TYPE_BUCKET
          - RESOURCE_TYPE_OBJECT
          - RESOURCE_TYPE_GROUP
        resource_id:
          title: resource_id defines the bucket/object/group id of the resource that
            grants permission for
          type: string
        statements:
          title: statements defines the details content of the permission, including
            effect/actions/sub-resources
          type: array
          items:
            type: object
            properties:
              effect:
                title: effect define the impact of permissions, which can be Allow/Deny
                type: string
                default: EFFECT_UNSPECIFIED
                enum:
                - EFFECT_UNSPECIFIED
                - EFFECT_ALLOW
                - EFFECT_DENY
              actions:
                type: array
                description: |-
                  action_type define the operation type you can act. greenfield defines a set of permission
                  that you can specify in a permissionInfo. see ActionType enum for detail.
                items:
                  title: ActionType defines the operations you can execute in greenfield
                    storage network
                  type: string
                  default: ACTION_UNSPECIFIED
                  enum:
                  - ACTION_UNSPECIFIED
                  - ACTION_UPDATE_BUCKET_INFO
                  - ACTION_DELETE_BUCKET
                  - ACTION_CREATE_OBJECT
                  - ACTION_DELETE_OBJECT
                  - ACTION_COPY_OBJECT
                  - ACTION_GET_OBJECT
                  - ACTION_EXECUTE_OBJECT
                  - ACTION_LIST_OBJECT
                  - ACTION_UPDATE_GROUP_MEMBER
                  - ACTION_DELETE_GROUP
                  - ACTION_UPDATE_OBJECT_INFO
                  - ACTION_UPDATE_GROUP_EXTRA
                  - ACTION_TYPE_ALL
              resources:
                type: array
                description: |-
                  CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                  The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                  If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                  If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                  If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                items:
                  type: string
              expiration_time:
                type: string
                description: expiration_time defines how long the permission is valid.
                  If not explicitly specified, it means it will not expire.
                format: date-time
              limit_size:
                type: object
                properties:
                  value:
                    type: string
                    description: The uint64 value.
                    format: uint64
                description: limit_size defines the total data size that is allowed
                  to operate. If not explicitly specified, it means it will not limit.
        expiration_time:
          title: |-
            expiration_time defines the whole expiration time of all the statements.
            Notices: Its priority is higher than the expiration time inside the Statement
          type: string
          format: date-time
    greenfield.permission.Principal:
      type: object
      properties:
        type:
          type: string
          description: |-
            PrincipalType refers to the identity type of system users or entities.
            In Greenfield, it usually refers to accounts or groups.
          default: PRINCIPAL_TYPE_UNSPECIFIED
          enum:
          - PRINCIPAL_TYPE_UNSPECIFIED
          - PRINCIPAL_TYPE_GNFD_ACCOUNT
          - PRINCIPAL_TYPE_GNFD_GROUP
        value:
          title: |-
            When the type is an account, its value is sdk.AccAddress().String();
            when the type is a group, its value is math.Uint().String()
          type: string
      description: Principal define the roles that can grant permissions. Currently,
        it can be account or group.
    greenfield.permission.PrincipalType:
      type: string
      description: |-
        PrincipalType refers to the identity type of system users or entities.
        In Greenfield, it usually refers to accounts or groups.
      default: PRINCIPAL_TYPE_UNSPECIFIED
      enum:
      - PRINCIPAL_TYPE_UNSPECIFIED
      - PRINCIPAL_TYPE_GNFD_ACCOUNT
      - PRINCIPAL_TYPE_GNFD_GROUP
    greenfield.permission.Statement:
      type: object
      properties:
        effect:
          title: effect define the impact of permissions, which can be Allow/Deny
          type: string
          default: EFFECT_UNSPECIFIED
          enum:
          - EFFECT_UNSPECIFIED
          - EFFECT_ALLOW
          - EFFECT_DENY
        actions:
          type: array
          description: |-
            action_type define the operation type you can act. greenfield defines a set of permission
            that you can specify in a permissionInfo. see ActionType enum for detail.
          items:
            title: ActionType defines the operations you can execute in greenfield
              storage network
            type: string
            default: ACTION_UNSPECIFIED
            enum:
            - ACTION_UNSPECIFIED
            - ACTION_UPDATE_BUCKET_INFO
            - ACTION_DELETE_BUCKET
            - ACTION_CREATE_OBJECT
            - ACTION_DELETE_OBJECT
            - ACTION_COPY_OBJECT
            - ACTION_GET_OBJECT
            - ACTION_EXECUTE_OBJECT
            - ACTION_LIST_OBJECT
            - ACTION_UPDATE_GROUP_MEMBER
            - ACTION_DELETE_GROUP
            - ACTION_UPDATE_OBJECT_INFO
            - ACTION_UPDATE_GROUP_EXTRA
            - ACTION_TYPE_ALL
        resources:
          type: array
          description: |-
            CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
            The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
            If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
            If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
            If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
          items:
            type: string
        expiration_time:
          type: string
          description: expiration_time defines how long the permission is valid. If
            not explicitly specified, it means it will not expire.
          format: date-time
        limit_size:
          type: object
          properties:
            value:
              type: string
              description: The uint64 value.
              format: uint64
          description: limit_size defines the total data size that is allowed to operate.
            If not explicitly specified, it means it will not limit.
    greenfield.resource.ResourceType:
      type: string
      default: RESOURCE_TYPE_UNSPECIFIED
      enum:
      - RESOURCE_TYPE_UNSPECIFIED
      - RESOURCE_TYPE_BUCKET
      - RESOURCE_TYPE_OBJECT
      - RESOURCE_TYPE_GROUP
    greenfield.storage.BillingInfo:
      title: BillingInfo is the billing information of the bucket
      type: object
      properties:
        price_time:
          title: the time of the payment price, used to calculate the charge rate
            of the bucket
          type: string
          format: int64
        total_charge_size:
          title: the total size of the objects in the bucket, used to calculate the
            charge rate of the bucket
          type: string
          format: uint64
        secondary_sp_objects_size:
          title: secondary sp objects size statistics
          type: array
          items:
            title: secondary sp objects size statistics
            type: object
            properties:
              sp_address:
                title: address is the address of the secondary sp
                type: string
              total_charge_size:
                title: size is the total size of the objects in the secondary sp
                type: string
                format: uint64
    greenfield.storage.BucketInfo:
      type: object
      properties:
        owner:
          type: string
          description: owner is the account address of bucket creator, it is also
            the bucket owner.
        bucket_name:
          title: bucket_name is a globally unique name of bucket
          type: string
        visibility:
          type: string
          description: visibility defines the highest permissions for bucket. When
            a bucket is public, everyone can get storage objects in it.
          default: VISIBILITY_TYPE_UNSPECIFIED
          enum:
          - VISIBILITY_TYPE_UNSPECIFIED
          - VISIBILITY_TYPE_PUBLIC_READ
          - VISIBILITY_TYPE_PRIVATE
          - VISIBILITY_TYPE_INHERIT
        id:
          type: string
          description: id is the unique identification for bucket.
        source_type:
          title: source_type defines which chain the user should send the bucket management
            transactions to
          type: string
          default: SOURCE_TYPE_ORIGIN
          enum:
          - SOURCE_TYPE_ORIGIN
          - SOURCE_TYPE_BSC_CROSS_CHAIN
          - SOURCE_TYPE_MIRROR_PENDING
        create_at:
          type: string
          description: create_at define the block timestamp when the bucket created.
          format: int64
        payment_address:
          title: payment_address is the address of the payment account
          type: string
        primary_sp_address:
          type: string
          description: |-
            primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
            leave this SP, unless you explicitly shift them to another SP.
        charged_read_quota:
          type: string
          description: |-
            charged_read_quota defines the traffic quota for read in bytes per month.
            The available read data for each user is the sum of the free read data provided by SP and
            the ChargeReadQuota specified here.
          format: uint64
        billing_info:
          title: billing info of the bucket
          type: object
          properties:
            price_time:
              title: the time of the payment price, used to calculate the charge rate
                of the bucket
              type: string
              format: int64
            total_charge_size:
              title: the total size of the objects in the bucket, used to calculate
                the charge rate of the bucket
              type: string
              format: uint64
            secondary_sp_objects_size:
              title: secondary sp objects size statistics
              type: array
              items:
                title: secondary sp objects size statistics
                type: object
                properties:
                  sp_address:
                    title: address is the address of the secondary sp
                    type: string
                  total_charge_size:
                    title: size is the total size of the objects in the secondary
                      sp
                    type: string
                    format: uint64
        bucket_status:
          type: string
          description: bucket_status define the status of the bucket.
          default: BUCKET_STATUS_CREATED
          enum:
          - BUCKET_STATUS_CREATED
          - BUCKET_STATUS_DISCONTINUED
    greenfield.storage.BucketMetaData:
      type: object
      properties:
        description:
          title: description
          type: string
        external_url:
          title: externalUrl a link to external site to view NFT
          type: string
        bucket_name:
          title: name of bucket NFT
          type: string
        image:
          title: image is the link to image
          type: string
        attributes:
          title: attributes
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                type: string
    greenfield.storage.BucketStatus:
      type: string
      description: |-
        BucketStatus represents the status of a bucket. After a user successfully
        sends a CreateBucket transaction onto the chain, the status is set to 'Created'.
        When a Discontinue Object transaction is received on chain, the status is set to 'Discontinued'.
      default: BUCKET_STATUS_CREATED
      enum:
      - BUCKET_STATUS_CREATED
      - BUCKET_STATUS_DISCONTINUED
    greenfield.storage.GroupInfo:
      type: object
      properties:
        owner:
          type: string
          description: owner is the owner of the group. It can not changed once it
            created.
        group_name:
          type: string
          description: group_name is the name of group which is unique under an account.
        source_type:
          title: source_type
          type: string
          default: SOURCE_TYPE_ORIGIN
          enum:
          - SOURCE_TYPE_ORIGIN
          - SOURCE_TYPE_BSC_CROSS_CHAIN
          - SOURCE_TYPE_MIRROR_PENDING
        id:
          title: id is the unique identifier of group
          type: string
        extra:
          title: extra is used to store extra info for the group
          type: string
    greenfield.storage.GroupMetaData:
      type: object
      properties:
        description:
          title: description
          type: string
        external_url:
          title: externalUrl a link to external site to view NFT
          type: string
        group_name:
          title: name of group NFT
          type: string
        image:
          title: image is the link to image
          type: string
        attributes:
          title: attributes
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                type: string
    greenfield.storage.ObjectInfo:
      type: object
      properties:
        owner:
          type: string
        bucket_name:
          title: bucket_name is the name of the bucket
          type: string
        object_name:
          title: object_name is the name of object
          type: string
        id:
          title: id is the unique identifier of object
          type: string
        payload_size:
          title: payloadSize is the total size of the object payload
          type: string
          format: uint64
        visibility:
          type: string
          description: visibility defines the highest permissions for object. When
            an object is public, everyone can access it.
          default: VISIBILITY_TYPE_UNSPECIFIED
          enum:
          - VISIBILITY_TYPE_UNSPECIFIED
          - VISIBILITY_TYPE_PUBLIC_READ
          - VISIBILITY_TYPE_PRIVATE
          - VISIBILITY_TYPE_INHERIT
        content_type:
          type: string
          description: content_type define the format of the object which should be
            a standard MIME type.
        create_at:
          title: create_at define the block timestamp when the object is created
          type: string
          format: int64
        object_status:
          type: string
          description: object_status define the upload status of the object.
          default: OBJECT_STATUS_CREATED
          enum:
          - OBJECT_STATUS_CREATED
          - OBJECT_STATUS_SEALED
          - OBJECT_STATUS_DISCONTINUED
        redundancy_type:
          type: string
          description: redundancy_type define the type of the redundancy which can
            be multi-replication or EC.
          default: REDUNDANCY_EC_TYPE
          enum:
          - REDUNDANCY_EC_TYPE
          - REDUNDANCY_REPLICA_TYPE
        source_type:
          title: |-
            SourceType represents the source of resource creation, which can
            from Greenfield native or from a cross-chain transfer from BSC
          type: string
          description: source_type define the source of the object.
          default: SOURCE_TYPE_ORIGIN
          enum:
          - SOURCE_TYPE_ORIGIN
          - SOURCE_TYPE_BSC_CROSS_CHAIN
          - SOURCE_TYPE_MIRROR_PENDING
        checksums:
          title: |-
            checksums define the root hash of the pieces which stored in a SP.
            add omit tag to omit the field when converting to NFT metadata
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        secondary_sp_addresses:
          title: secondary_sp_addresses define the addresses of secondary_sps
          type: array
          items:
            type: string
    greenfield.storage.ObjectMetaData:
      type: object
      properties:
        description:
          title: description
          type: string
        external_url:
          title: externalUrl a link to external site to view NFT
          type: string
        object_name:
          title: name of object NFT
          type: string
        image:
          title: image is the link to image
          type: string
        attributes:
          title: attributes
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                type: string
    greenfield.storage.ObjectStatus:
      type: string
      description: |-
        ObjectStatus represents the creation status of an object. After a user successfully
        sends a CreateObject transaction onto the chain, the status is set to 'Created'.
        After the Primary Service Provider successfully sends a Seal Object transaction onto
        the chain, the status is set to 'Sealed'. When a Discontinue Object transaction is
        received on chain, the status is set to 'Discontinued'.
      default: OBJECT_STATUS_CREATED
      enum:
      - OBJECT_STATUS_CREATED
      - OBJECT_STATUS_SEALED
      - OBJECT_STATUS_DISCONTINUED
    greenfield.storage.Params:
      type: object
      properties:
        versioned_params:
          type: object
          properties:
            max_segment_size:
              title: 'max_segment_size is the maximum size of a segment. default:
                16M'
              type: string
              format: uint64
            redundant_data_chunk_num:
              title: redundant_data_check_num is the num of data chunks of EC redundancy
                algorithm
              type: integer
              format: int64
            redundant_parity_chunk_num:
              title: redundant_data_check_num is the num of parity chunks of EC redundancy
                algorithm
              type: integer
              format: int64
            min_charge_size:
              title: min_charge_size is the minimum charge size of the payload, objects
                smaller than this size will be charged as this size
              type: string
              format: uint64
          description: VersionedParams defines the parameters for the storage module
            with multi version, each version store with different timestamp.
        max_payload_size:
          title: 'max_payload_size is the maximum size of the payload, default: 2G'
          type: string
          format: uint64
        mirror_bucket_relayer_fee:
          title: relayer fee for the mirror bucket tx
          type: string
        mirror_bucket_ack_relayer_fee:
          title: relayer fee for the ACK or FAIL_ACK package of the mirror bucket
            tx
          type: string
        mirror_object_relayer_fee:
          title: relayer fee for the mirror object tx
          type: string
        mirror_object_ack_relayer_fee:
          title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
            tx
          type: string
        mirror_group_relayer_fee:
          title: relayer fee for the mirror object tx
          type: string
        mirror_group_ack_relayer_fee:
          title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
            tx
          type: string
        max_buckets_per_account:
          title: The maximum number of buckets that can be created per account
          type: integer
          format: int64
        discontinue_counting_window:
          title: The window to count the discontinued objects or buckets
          type: string
          format: uint64
        discontinue_object_max:
          title: The max objects can be requested in a window
          type: string
          format: uint64
        discontinue_bucket_max:
          title: The max buckets can be requested in a window
          type: string
          format: uint64
        discontinue_confirm_period:
          title: The object will be deleted after the confirm period in seconds
          type: string
          format: int64
        discontinue_deletion_max:
          title: The max delete objects in each end block
          type: string
          format: uint64
        stale_policy_cleanup_max:
          title: The max number for deleting policy in each end block
          type: string
          format: uint64
      description: Params defines the parameters for the module.
    greenfield.storage.QueryBucketNFTResponse:
      type: object
      properties:
        meta_data:
          type: object
          properties:
            description:
              title: description
              type: string
            external_url:
              title: externalUrl a link to external site to view NFT
              type: string
            bucket_name:
              title: name of bucket NFT
              type: string
            image:
              title: image is the link to image
              type: string
            attributes:
              title: attributes
              type: array
              items:
                type: object
                properties:
                  trait_type:
                    type: string
                  value:
                    type: string
    greenfield.storage.QueryGroupNFTResponse:
      type: object
      properties:
        meta_data:
          type: object
          properties:
            description:
              title: description
              type: string
            external_url:
              title: externalUrl a link to external site to view NFT
              type: string
            group_name:
              title: name of group NFT
              type: string
            image:
              title: image is the link to image
              type: string
            attributes:
              title: attributes
              type: array
              items:
                type: object
                properties:
                  trait_type:
                    type: string
                  value:
                    type: string
    greenfield.storage.QueryHeadBucketResponse:
      type: object
      properties:
        bucket_info:
          type: object
          properties:
            owner:
              type: string
              description: owner is the account address of bucket creator, it is also
                the bucket owner.
            bucket_name:
              title: bucket_name is a globally unique name of bucket
              type: string
            visibility:
              type: string
              description: visibility defines the highest permissions for bucket.
                When a bucket is public, everyone can get storage objects in it.
              default: VISIBILITY_TYPE_UNSPECIFIED
              enum:
              - VISIBILITY_TYPE_UNSPECIFIED
              - VISIBILITY_TYPE_PUBLIC_READ
              - VISIBILITY_TYPE_PRIVATE
              - VISIBILITY_TYPE_INHERIT
            id:
              type: string
              description: id is the unique identification for bucket.
            source_type:
              title: source_type defines which chain the user should send the bucket
                management transactions to
              type: string
              default: SOURCE_TYPE_ORIGIN
              enum:
              - SOURCE_TYPE_ORIGIN
              - SOURCE_TYPE_BSC_CROSS_CHAIN
              - SOURCE_TYPE_MIRROR_PENDING
            create_at:
              type: string
              description: create_at define the block timestamp when the bucket created.
              format: int64
            payment_address:
              title: payment_address is the address of the payment account
              type: string
            primary_sp_address:
              type: string
              description: |-
                primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
                leave this SP, unless you explicitly shift them to another SP.
            charged_read_quota:
              type: string
              description: |-
                charged_read_quota defines the traffic quota for read in bytes per month.
                The available read data for each user is the sum of the free read data provided by SP and
                the ChargeReadQuota specified here.
              format: uint64
            billing_info:
              title: billing info of the bucket
              type: object
              properties:
                price_time:
                  title: the time of the payment price, used to calculate the charge
                    rate of the bucket
                  type: string
                  format: int64
                total_charge_size:
                  title: the total size of the objects in the bucket, used to calculate
                    the charge rate of the bucket
                  type: string
                  format: uint64
                secondary_sp_objects_size:
                  title: secondary sp objects size statistics
                  type: array
                  items:
                    title: secondary sp objects size statistics
                    type: object
                    properties:
                      sp_address:
                        title: address is the address of the secondary sp
                        type: string
                      total_charge_size:
                        title: size is the total size of the objects in the secondary
                          sp
                        type: string
                        format: uint64
            bucket_status:
              type: string
              description: bucket_status define the status of the bucket.
              default: BUCKET_STATUS_CREATED
              enum:
              - BUCKET_STATUS_CREATED
              - BUCKET_STATUS_DISCONTINUED
    greenfield.storage.QueryHeadGroupMemberResponse:
      type: object
      properties:
        group_member:
          type: object
          properties:
            id:
              title: id is an unique u256 sequence for each group member. It also
                be used as NFT tokenID
              type: string
            group_id:
              title: group_id is the unique id of the group
              type: string
            member:
              title: member is the account address of the member
              type: string
    greenfield.storage.QueryHeadGroupResponse:
      type: object
      properties:
        group_info:
          type: object
          properties:
            owner:
              type: string
              description: owner is the owner of the group. It can not changed once
                it created.
            group_name:
              type: string
              description: group_name is the name of group which is unique under an
                account.
            source_type:
              title: source_type
              type: string
              default: SOURCE_TYPE_ORIGIN
              enum:
              - SOURCE_TYPE_ORIGIN
              - SOURCE_TYPE_BSC_CROSS_CHAIN
              - SOURCE_TYPE_MIRROR_PENDING
            id:
              title: id is the unique identifier of group
              type: string
            extra:
              title: extra is used to store extra info for the group
              type: string
    greenfield.storage.QueryHeadObjectResponse:
      type: object
      properties:
        object_info:
          type: object
          properties:
            owner:
              type: string
            bucket_name:
              title: bucket_name is the name of the bucket
              type: string
            object_name:
              title: object_name is the name of object
              type: string
            id:
              title: id is the unique identifier of object
              type: string
            payload_size:
              title: payloadSize is the total size of the object payload
              type: string
              format: uint64
            visibility:
              type: string
              description: visibility defines the highest permissions for object.
                When an object is public, everyone can access it.
              default: VISIBILITY_TYPE_UNSPECIFIED
              enum:
              - VISIBILITY_TYPE_UNSPECIFIED
              - VISIBILITY_TYPE_PUBLIC_READ
              - VISIBILITY_TYPE_PRIVATE
              - VISIBILITY_TYPE_INHERIT
            content_type:
              type: string
              description: content_type define the format of the object which should
                be a standard MIME type.
            create_at:
              title: create_at define the block timestamp when the object is created
              type: string
              format: int64
            object_status:
              type: string
              description: object_status define the upload status of the object.
              default: OBJECT_STATUS_CREATED
              enum:
              - OBJECT_STATUS_CREATED
              - OBJECT_STATUS_SEALED
              - OBJECT_STATUS_DISCONTINUED
            redundancy_type:
              type: string
              description: redundancy_type define the type of the redundancy which
                can be multi-replication or EC.
              default: REDUNDANCY_EC_TYPE
              enum:
              - REDUNDANCY_EC_TYPE
              - REDUNDANCY_REPLICA_TYPE
            source_type:
              title: |-
                SourceType represents the source of resource creation, which can
                from Greenfield native or from a cross-chain transfer from BSC
              type: string
              description: source_type define the source of the object.
              default: SOURCE_TYPE_ORIGIN
              enum:
              - SOURCE_TYPE_ORIGIN
              - SOURCE_TYPE_BSC_CROSS_CHAIN
              - SOURCE_TYPE_MIRROR_PENDING
            checksums:
              title: |-
                checksums define the root hash of the pieces which stored in a SP.
                add omit tag to omit the field when converting to NFT metadata
              type: array
              items:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            secondary_sp_addresses:
              title: secondary_sp_addresses define the addresses of secondary_sps
              type: array
              items:
                type: string
    greenfield.storage.QueryListBucketsResponse:
      type: object
      properties:
        bucket_infos:
          type: array
          items:
            type: object
            properties:
              owner:
                type: string
                description: owner is the account address of bucket creator, it is
                  also the bucket owner.
              bucket_name:
                title: bucket_name is a globally unique name of bucket
                type: string
              visibility:
                type: string
                description: visibility defines the highest permissions for bucket.
                  When a bucket is public, everyone can get storage objects in it.
                default: VISIBILITY_TYPE_UNSPECIFIED
                enum:
                - VISIBILITY_TYPE_UNSPECIFIED
                - VISIBILITY_TYPE_PUBLIC_READ
                - VISIBILITY_TYPE_PRIVATE
                - VISIBILITY_TYPE_INHERIT
              id:
                type: string
                description: id is the unique identification for bucket.
              source_type:
                title: source_type defines which chain the user should send the bucket
                  management transactions to
                type: string
                default: SOURCE_TYPE_ORIGIN
                enum:
                - SOURCE_TYPE_ORIGIN
                - SOURCE_TYPE_BSC_CROSS_CHAIN
                - SOURCE_TYPE_MIRROR_PENDING
              create_at:
                type: string
                description: create_at define the block timestamp when the bucket
                  created.
                format: int64
              payment_address:
                title: payment_address is the address of the payment account
                type: string
              primary_sp_address:
                type: string
                description: |-
                  primary_sp_address is the address of the primary sp. Objects belongs to this bucket will never
                  leave this SP, unless you explicitly shift them to another SP.
              charged_read_quota:
                type: string
                description: |-
                  charged_read_quota defines the traffic quota for read in bytes per month.
                  The available read data for each user is the sum of the free read data provided by SP and
                  the ChargeReadQuota specified here.
                format: uint64
              billing_info:
                title: billing info of the bucket
                type: object
                properties:
                  price_time:
                    title: the time of the payment price, used to calculate the charge
                      rate of the bucket
                    type: string
                    format: int64
                  total_charge_size:
                    title: the total size of the objects in the bucket, used to calculate
                      the charge rate of the bucket
                    type: string
                    format: uint64
                  secondary_sp_objects_size:
                    title: secondary sp objects size statistics
                    type: array
                    items:
                      title: secondary sp objects size statistics
                      type: object
                      properties:
                        sp_address:
                          title: address is the address of the secondary sp
                          type: string
                        total_charge_size:
                          title: size is the total size of the objects in the secondary
                            sp
                          type: string
                          format: uint64
              bucket_status:
                type: string
                description: bucket_status define the status of the bucket.
                default: BUCKET_STATUS_CREATED
                enum:
                - BUCKET_STATUS_CREATED
                - BUCKET_STATUS_DISCONTINUED
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.storage.QueryListGroupResponse:
      type: object
      properties:
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        group_infos:
          type: array
          items:
            type: object
            properties:
              owner:
                type: string
                description: owner is the owner of the group. It can not changed once
                  it created.
              group_name:
                type: string
                description: group_name is the name of group which is unique under
                  an account.
              source_type:
                title: source_type
                type: string
                default: SOURCE_TYPE_ORIGIN
                enum:
                - SOURCE_TYPE_ORIGIN
                - SOURCE_TYPE_BSC_CROSS_CHAIN
                - SOURCE_TYPE_MIRROR_PENDING
              id:
                title: id is the unique identifier of group
                type: string
              extra:
                title: extra is used to store extra info for the group
                type: string
    greenfield.storage.QueryListObjectsResponse:
      type: object
      properties:
        object_infos:
          type: array
          items:
            type: object
            properties:
              owner:
                type: string
              bucket_name:
                title: bucket_name is the name of the bucket
                type: string
              object_name:
                title: object_name is the name of object
                type: string
              id:
                title: id is the unique identifier of object
                type: string
              payload_size:
                title: payloadSize is the total size of the object payload
                type: string
                format: uint64
              visibility:
                type: string
                description: visibility defines the highest permissions for object.
                  When an object is public, everyone can access it.
                default: VISIBILITY_TYPE_UNSPECIFIED
                enum:
                - VISIBILITY_TYPE_UNSPECIFIED
                - VISIBILITY_TYPE_PUBLIC_READ
                - VISIBILITY_TYPE_PRIVATE
                - VISIBILITY_TYPE_INHERIT
              content_type:
                type: string
                description: content_type define the format of the object which should
                  be a standard MIME type.
              create_at:
                title: create_at define the block timestamp when the object is created
                type: string
                format: int64
              object_status:
                type: string
                description: object_status define the upload status of the object.
                default: OBJECT_STATUS_CREATED
                enum:
                - OBJECT_STATUS_CREATED
                - OBJECT_STATUS_SEALED
                - OBJECT_STATUS_DISCONTINUED
              redundancy_type:
                type: string
                description: redundancy_type define the type of the redundancy which
                  can be multi-replication or EC.
                default: REDUNDANCY_EC_TYPE
                enum:
                - REDUNDANCY_EC_TYPE
                - REDUNDANCY_REPLICA_TYPE
              source_type:
                title: |-
                  SourceType represents the source of resource creation, which can
                  from Greenfield native or from a cross-chain transfer from BSC
                type: string
                description: source_type define the source of the object.
                default: SOURCE_TYPE_ORIGIN
                enum:
                - SOURCE_TYPE_ORIGIN
                - SOURCE_TYPE_BSC_CROSS_CHAIN
                - SOURCE_TYPE_MIRROR_PENDING
              checksums:
                title: |-
                  checksums define the root hash of the pieces which stored in a SP.
                  add omit tag to omit the field when converting to NFT metadata
                type: array
                items:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              secondary_sp_addresses:
                title: secondary_sp_addresses define the addresses of secondary_sps
                type: array
                items:
                  type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    greenfield.storage.QueryObjectNFTResponse:
      type: object
      properties:
        meta_data:
          type: object
          properties:
            description:
              title: description
              type: string
            external_url:
              title: externalUrl a link to external site to view NFT
              type: string
            object_name:
              title: name of object NFT
              type: string
            image:
              title: image is the link to image
              type: string
            attributes:
              title: attributes
              type: array
              items:
                type: object
                properties:
                  trait_type:
                    type: string
                  value:
                    type: string
    greenfield.storage.QueryParamsByTimestampResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            versioned_params:
              type: object
              properties:
                max_segment_size:
                  title: 'max_segment_size is the maximum size of a segment. default:
                    16M'
                  type: string
                  format: uint64
                redundant_data_chunk_num:
                  title: redundant_data_check_num is the num of data chunks of EC
                    redundancy algorithm
                  type: integer
                  format: int64
                redundant_parity_chunk_num:
                  title: redundant_data_check_num is the num of parity chunks of EC
                    redundancy algorithm
                  type: integer
                  format: int64
                min_charge_size:
                  title: min_charge_size is the minimum charge size of the payload,
                    objects smaller than this size will be charged as this size
                  type: string
                  format: uint64
              description: VersionedParams defines the parameters for the storage
                module with multi version, each version store with different timestamp.
            max_payload_size:
              title: 'max_payload_size is the maximum size of the payload, default:
                2G'
              type: string
              format: uint64
            mirror_bucket_relayer_fee:
              title: relayer fee for the mirror bucket tx
              type: string
            mirror_bucket_ack_relayer_fee:
              title: relayer fee for the ACK or FAIL_ACK package of the mirror bucket
                tx
              type: string
            mirror_object_relayer_fee:
              title: relayer fee for the mirror object tx
              type: string
            mirror_object_ack_relayer_fee:
              title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
                tx
              type: string
            mirror_group_relayer_fee:
              title: relayer fee for the mirror object tx
              type: string
            mirror_group_ack_relayer_fee:
              title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
                tx
              type: string
            max_buckets_per_account:
              title: The maximum number of buckets that can be created per account
              type: integer
              format: int64
            discontinue_counting_window:
              title: The window to count the discontinued objects or buckets
              type: string
              format: uint64
            discontinue_object_max:
              title: The max objects can be requested in a window
              type: string
              format: uint64
            discontinue_bucket_max:
              title: The max buckets can be requested in a window
              type: string
              format: uint64
            discontinue_confirm_period:
              title: The object will be deleted after the confirm period in seconds
              type: string
              format: int64
            discontinue_deletion_max:
              title: The max delete objects in each end block
              type: string
              format: uint64
            stale_policy_cleanup_max:
              title: The max number for deleting policy in each end block
              type: string
              format: uint64
          description: params holds all the parameters of this module.
      description: QueryVersionedParamsResponse is response type for the Query/Params
        RPC method with timestamp.
    greenfield.storage.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            versioned_params:
              type: object
              properties:
                max_segment_size:
                  title: 'max_segment_size is the maximum size of a segment. default:
                    16M'
                  type: string
                  format: uint64
                redundant_data_chunk_num:
                  title: redundant_data_check_num is the num of data chunks of EC
                    redundancy algorithm
                  type: integer
                  format: int64
                redundant_parity_chunk_num:
                  title: redundant_data_check_num is the num of parity chunks of EC
                    redundancy algorithm
                  type: integer
                  format: int64
                min_charge_size:
                  title: min_charge_size is the minimum charge size of the payload,
                    objects smaller than this size will be charged as this size
                  type: string
                  format: uint64
              description: VersionedParams defines the parameters for the storage
                module with multi version, each version store with different timestamp.
            max_payload_size:
              title: 'max_payload_size is the maximum size of the payload, default:
                2G'
              type: string
              format: uint64
            mirror_bucket_relayer_fee:
              title: relayer fee for the mirror bucket tx
              type: string
            mirror_bucket_ack_relayer_fee:
              title: relayer fee for the ACK or FAIL_ACK package of the mirror bucket
                tx
              type: string
            mirror_object_relayer_fee:
              title: relayer fee for the mirror object tx
              type: string
            mirror_object_ack_relayer_fee:
              title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
                tx
              type: string
            mirror_group_relayer_fee:
              title: relayer fee for the mirror object tx
              type: string
            mirror_group_ack_relayer_fee:
              title: Relayer fee for the ACK or FAIL_ACK package of the mirror object
                tx
              type: string
            max_buckets_per_account:
              title: The maximum number of buckets that can be created per account
              type: integer
              format: int64
            discontinue_counting_window:
              title: The window to count the discontinued objects or buckets
              type: string
              format: uint64
            discontinue_object_max:
              title: The max objects can be requested in a window
              type: string
              format: uint64
            discontinue_bucket_max:
              title: The max buckets can be requested in a window
              type: string
              format: uint64
            discontinue_confirm_period:
              title: The object will be deleted after the confirm period in seconds
              type: string
              format: int64
            discontinue_deletion_max:
              title: The max delete objects in each end block
              type: string
              format: uint64
            stale_policy_cleanup_max:
              title: The max number for deleting policy in each end block
              type: string
              format: uint64
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    greenfield.storage.QueryPolicyByIdResponse:
      type: object
      properties:
        policy:
          type: object
          properties:
            id:
              title: id is an unique u256 sequence for each policy. It also be used
                as NFT tokenID
              type: string
            principal:
              title: principal defines the accounts/group which the permission grants
                to
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    PrincipalType refers to the identity type of system users or entities.
                    In Greenfield, it usually refers to accounts or groups.
                  default: PRINCIPAL_TYPE_UNSPECIFIED
                  enum:
                  - PRINCIPAL_TYPE_UNSPECIFIED
                  - PRINCIPAL_TYPE_GNFD_ACCOUNT
                  - PRINCIPAL_TYPE_GNFD_GROUP
                value:
                  title: |-
                    When the type is an account, its value is sdk.AccAddress().String();
                    when the type is a group, its value is math.Uint().String()
                  type: string
              description: Principal define the roles that can grant permissions.
                Currently, it can be account or group.
            resource_type:
              title: resource_type defines the type of resource that grants permission
                for
              type: string
              default: RESOURCE_TYPE_UNSPECIFIED
              enum:
              - RESOURCE_TYPE_UNSPECIFIED
              - RESOURCE_TYPE_BUCKET
              - RESOURCE_TYPE_OBJECT
              - RESOURCE_TYPE_GROUP
            resource_id:
              title: resource_id defines the bucket/object/group id of the resource
                that grants permission for
              type: string
            statements:
              title: statements defines the details content of the permission, including
                effect/actions/sub-resources
              type: array
              items:
                type: object
                properties:
                  effect:
                    title: effect define the impact of permissions, which can be Allow/Deny
                    type: string
                    default: EFFECT_UNSPECIFIED
                    enum:
                    - EFFECT_UNSPECIFIED
                    - EFFECT_ALLOW
                    - EFFECT_DENY
                  actions:
                    type: array
                    description: |-
                      action_type define the operation type you can act. greenfield defines a set of permission
                      that you can specify in a permissionInfo. see ActionType enum for detail.
                    items:
                      title: ActionType defines the operations you can execute in
                        greenfield storage network
                      type: string
                      default: ACTION_UNSPECIFIED
                      enum:
                      - ACTION_UNSPECIFIED
                      - ACTION_UPDATE_BUCKET_INFO
                      - ACTION_DELETE_BUCKET
                      - ACTION_CREATE_OBJECT
                      - ACTION_DELETE_OBJECT
                      - ACTION_COPY_OBJECT
                      - ACTION_GET_OBJECT
                      - ACTION_EXECUTE_OBJECT
                      - ACTION_LIST_OBJECT
                      - ACTION_UPDATE_GROUP_MEMBER
                      - ACTION_DELETE_GROUP
                      - ACTION_UPDATE_OBJECT_INFO
                      - ACTION_UPDATE_GROUP_EXTRA
                      - ACTION_TYPE_ALL
                  resources:
                    type: array
                    description: |-
                      CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                      The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                      If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                      If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                      If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                    items:
                      type: string
                  expiration_time:
                    type: string
                    description: expiration_time defines how long the permission is
                      valid. If not explicitly specified, it means it will not expire.
                    format: date-time
                  limit_size:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The uint64 value.
                        format: uint64
                    description: limit_size defines the total data size that is allowed
                      to operate. If not explicitly specified, it means it will not
                      limit.
            expiration_time:
              title: |-
                expiration_time defines the whole expiration time of all the statements.
                Notices: Its priority is higher than the expiration time inside the Statement
              type: string
              format: date-time
    greenfield.storage.QueryPolicyForAccountResponse:
      type: object
      properties:
        policy:
          type: object
          properties:
            id:
              title: id is an unique u256 sequence for each policy. It also be used
                as NFT tokenID
              type: string
            principal:
              title: principal defines the accounts/group which the permission grants
                to
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    PrincipalType refers to the identity type of system users or entities.
                    In Greenfield, it usually refers to accounts or groups.
                  default: PRINCIPAL_TYPE_UNSPECIFIED
                  enum:
                  - PRINCIPAL_TYPE_UNSPECIFIED
                  - PRINCIPAL_TYPE_GNFD_ACCOUNT
                  - PRINCIPAL_TYPE_GNFD_GROUP
                value:
                  title: |-
                    When the type is an account, its value is sdk.AccAddress().String();
                    when the type is a group, its value is math.Uint().String()
                  type: string
              description: Principal define the roles that can grant permissions.
                Currently, it can be account or group.
            resource_type:
              title: resource_type defines the type of resource that grants permission
                for
              type: string
              default: RESOURCE_TYPE_UNSPECIFIED
              enum:
              - RESOURCE_TYPE_UNSPECIFIED
              - RESOURCE_TYPE_BUCKET
              - RESOURCE_TYPE_OBJECT
              - RESOURCE_TYPE_GROUP
            resource_id:
              title: resource_id defines the bucket/object/group id of the resource
                that grants permission for
              type: string
            statements:
              title: statements defines the details content of the permission, including
                effect/actions/sub-resources
              type: array
              items:
                type: object
                properties:
                  effect:
                    title: effect define the impact of permissions, which can be Allow/Deny
                    type: string
                    default: EFFECT_UNSPECIFIED
                    enum:
                    - EFFECT_UNSPECIFIED
                    - EFFECT_ALLOW
                    - EFFECT_DENY
                  actions:
                    type: array
                    description: |-
                      action_type define the operation type you can act. greenfield defines a set of permission
                      that you can specify in a permissionInfo. see ActionType enum for detail.
                    items:
                      title: ActionType defines the operations you can execute in
                        greenfield storage network
                      type: string
                      default: ACTION_UNSPECIFIED
                      enum:
                      - ACTION_UNSPECIFIED
                      - ACTION_UPDATE_BUCKET_INFO
                      - ACTION_DELETE_BUCKET
                      - ACTION_CREATE_OBJECT
                      - ACTION_DELETE_OBJECT
                      - ACTION_COPY_OBJECT
                      - ACTION_GET_OBJECT
                      - ACTION_EXECUTE_OBJECT
                      - ACTION_LIST_OBJECT
                      - ACTION_UPDATE_GROUP_MEMBER
                      - ACTION_DELETE_GROUP
                      - ACTION_UPDATE_OBJECT_INFO
                      - ACTION_UPDATE_GROUP_EXTRA
                      - ACTION_TYPE_ALL
                  resources:
                    type: array
                    description: |-
                      CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                      The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                      If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                      If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                      If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                    items:
                      type: string
                  expiration_time:
                    type: string
                    description: expiration_time defines how long the permission is
                      valid. If not explicitly specified, it means it will not expire.
                    format: date-time
                  limit_size:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The uint64 value.
                        format: uint64
                    description: limit_size defines the total data size that is allowed
                      to operate. If not explicitly specified, it means it will not
                      limit.
            expiration_time:
              title: |-
                expiration_time defines the whole expiration time of all the statements.
                Notices: Its priority is higher than the expiration time inside the Statement
              type: string
              format: date-time
    greenfield.storage.QueryPolicyForGroupResponse:
      type: object
      properties:
        policy:
          type: object
          properties:
            id:
              title: id is an unique u256 sequence for each policy. It also be used
                as NFT tokenID
              type: string
            principal:
              title: principal defines the accounts/group which the permission grants
                to
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    PrincipalType refers to the identity type of system users or entities.
                    In Greenfield, it usually refers to accounts or groups.
                  default: PRINCIPAL_TYPE_UNSPECIFIED
                  enum:
                  - PRINCIPAL_TYPE_UNSPECIFIED
                  - PRINCIPAL_TYPE_GNFD_ACCOUNT
                  - PRINCIPAL_TYPE_GNFD_GROUP
                value:
                  title: |-
                    When the type is an account, its value is sdk.AccAddress().String();
                    when the type is a group, its value is math.Uint().String()
                  type: string
              description: Principal define the roles that can grant permissions.
                Currently, it can be account or group.
            resource_type:
              title: resource_type defines the type of resource that grants permission
                for
              type: string
              default: RESOURCE_TYPE_UNSPECIFIED
              enum:
              - RESOURCE_TYPE_UNSPECIFIED
              - RESOURCE_TYPE_BUCKET
              - RESOURCE_TYPE_OBJECT
              - RESOURCE_TYPE_GROUP
            resource_id:
              title: resource_id defines the bucket/object/group id of the resource
                that grants permission for
              type: string
            statements:
              title: statements defines the details content of the permission, including
                effect/actions/sub-resources
              type: array
              items:
                type: object
                properties:
                  effect:
                    title: effect define the impact of permissions, which can be Allow/Deny
                    type: string
                    default: EFFECT_UNSPECIFIED
                    enum:
                    - EFFECT_UNSPECIFIED
                    - EFFECT_ALLOW
                    - EFFECT_DENY
                  actions:
                    type: array
                    description: |-
                      action_type define the operation type you can act. greenfield defines a set of permission
                      that you can specify in a permissionInfo. see ActionType enum for detail.
                    items:
                      title: ActionType defines the operations you can execute in
                        greenfield storage network
                      type: string
                      default: ACTION_UNSPECIFIED
                      enum:
                      - ACTION_UNSPECIFIED
                      - ACTION_UPDATE_BUCKET_INFO
                      - ACTION_DELETE_BUCKET
                      - ACTION_CREATE_OBJECT
                      - ACTION_DELETE_OBJECT
                      - ACTION_COPY_OBJECT
                      - ACTION_GET_OBJECT
                      - ACTION_EXECUTE_OBJECT
                      - ACTION_LIST_OBJECT
                      - ACTION_UPDATE_GROUP_MEMBER
                      - ACTION_DELETE_GROUP
                      - ACTION_UPDATE_OBJECT_INFO
                      - ACTION_UPDATE_GROUP_EXTRA
                      - ACTION_TYPE_ALL
                  resources:
                    type: array
                    description: |-
                      CAN ONLY USED IN bucket level. Support fuzzy match and limit to 5.
                      The sub-resource name must comply with the standard specified in the greenfield/types/grn.go file for Greenfield resource names.
                      If the sub-resources include 'grn:o:{bucket_name}/*' in the statement, it indicates that specific permissions is granted to all objects within the specified bucket.
                      If the sub-resources include 'grn:o:{bucket_name}/test_*' in the statement, it indicates that specific permissions is granted to all objects with the `test_` prefix within the specified bucket.
                      If the sub-resources is empty, when you need to operate(excluding CreateObject) a specified subresource, it will be denied because it cannot match any subresource.
                    items:
                      type: string
                  expiration_time:
                    type: string
                    description: expiration_time defines how long the permission is
                      valid. If not explicitly specified, it means it will not expire.
                    format: date-time
                  limit_size:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The uint64 value.
                        format: uint64
                    description: limit_size defines the total data size that is allowed
                      to operate. If not explicitly specified, it means it will not
                      limit.
            expiration_time:
              title: |-
                expiration_time defines the whole expiration time of all the statements.
                Notices: Its priority is higher than the expiration time inside the Statement
              type: string
              format: date-time
    greenfield.storage.QueryVerifyPermissionResponse:
      type: object
      properties:
        effect:
          title: Effect define the effect of the operation permission, include Allow
            or deny
          type: string
          default: EFFECT_UNSPECIFIED
          enum:
          - EFFECT_UNSPECIFIED
          - EFFECT_ALLOW
          - EFFECT_DENY
    greenfield.storage.RedundancyType:
      type: string
      description: |-
        RedundancyType represents the redundancy algorithm type for object data,
        which can be either multi-replica or erasure coding.
      default: REDUNDANCY_EC_TYPE
      enum:
      - REDUNDANCY_EC_TYPE
      - REDUNDANCY_REPLICA_TYPE
    greenfield.storage.SecondarySpObjectsSize:
      title: secondary sp objects size statistics
      type: object
      properties:
        sp_address:
          title: address is the address of the secondary sp
          type: string
        total_charge_size:
          title: size is the total size of the objects in the secondary sp
          type: string
          format: uint64
    greenfield.storage.SourceType:
      title: |-
        SourceType represents the source of resource creation, which can
        from Greenfield native or from a cross-chain transfer from BSC
      type: string
      default: SOURCE_TYPE_ORIGIN
      enum:
      - SOURCE_TYPE_ORIGIN
      - SOURCE_TYPE_BSC_CROSS_CHAIN
      - SOURCE_TYPE_MIRROR_PENDING
    greenfield.storage.Trait:
      type: object
      properties:
        trait_type:
          type: string
        value:
          type: string
    greenfield.storage.VersionedParams:
      type: object
      properties:
        max_segment_size:
          title: 'max_segment_size is the maximum size of a segment. default: 16M'
          type: string
          format: uint64
        redundant_data_chunk_num:
          title: redundant_data_check_num is the num of data chunks of EC redundancy
            algorithm
          type: integer
          format: int64
        redundant_parity_chunk_num:
          title: redundant_data_check_num is the num of parity chunks of EC redundancy
            algorithm
          type: integer
          format: int64
        min_charge_size:
          title: min_charge_size is the minimum charge size of the payload, objects
            smaller than this size will be charged as this size
          type: string
          format: uint64
      description: VersionedParams defines the parameters for the storage module with
        multi version, each version store with different timestamp.
    greenfield.storage.VisibilityType:
      type: string
      description: |-
        VisibilityType is the resources public status.

         - VISIBILITY_TYPE_INHERIT: If the bucket Visibility is inherit, it's finally set to private. If the object Visibility is inherit, it's the same as bucket.
      default: VISIBILITY_TYPE_UNSPECIFIED
      enum:
      - VISIBILITY_TYPE_UNSPECIFIED
      - VISIBILITY_TYPE_PUBLIC_READ
      - VISIBILITY_TYPE_PRIVATE
      - VISIBILITY_TYPE_INHERIT
    cosmos.auth.v1beta1.BaseAccount:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        account_number:
          type: string
          format: uint64
        sequence:
          type: string
          format: uint64
      description: |-
        BaseAccount defines a base account type. It contains all the necessary fields
        for basic account functionality. Any custom account type should extend this
        type for additional functionality (e.g. vesting).
    cosmos.auth.v1beta1.Params:
      type: object
      properties:
        max_memo_characters:
          type: string
          format: uint64
        tx_sig_limit:
          type: string
          format: uint64
        tx_size_cost_per_byte:
          type: string
          format: uint64
        sig_verify_cost_ed25519:
          type: string
          format: uint64
        sig_verify_cost_secp256k1:
          type: string
          format: uint64
      description: Params defines the parameters for the auth module.
    cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
      title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID
        rpc method
      type: object
      properties:
        account_address:
          type: string
      description: 'Since: cosmos-sdk 0.46.2'
    cosmos.auth.v1beta1.QueryAccountInfoResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            address:
              type: string
            pub_key:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            account_number:
              type: string
              format: uint64
            sequence:
              type: string
              format: uint64
          description: info is the account info which is represented by BaseAccount.
      description: |-
        QueryAccountInfoResponse is the Query/AccountInfo response type.

        Since: cosmos-sdk 0.47
    cosmos.auth.v1beta1.QueryAccountResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryAccountResponse is the response type for the Query/Account
        RPC method.
    cosmos.auth.v1beta1.QueryAccountsResponse:
      type: object
      properties:
        accounts:
          title: accounts are the existing accounts
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAccountsResponse is the response type for the Query/Accounts RPC method.

        Since: cosmos-sdk 0.43
    cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName
        RPC method.
    cosmos.auth.v1beta1.QueryModuleAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: |-
        QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

        Since: cosmos-sdk 0.46
    cosmos.auth.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_memo_characters:
              type: string
              format: uint64
            tx_sig_limit:
              type: string
              format: uint64
            tx_size_cost_per_byte:
              type: string
              format: uint64
            sig_verify_cost_ed25519:
              type: string
              format: uint64
            sig_verify_cost_secp256k1:
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.authz.v1beta1.Grant:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          title: |-
            time when the grant will expire and will be pruned. If null, then the grant
            doesn't have a time expiration (other conditions  in `authorization`
            may apply to invalidate the grant)
          type: string
          format: date-time
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
    cosmos.authz.v1beta1.GrantAuthorization:
      title: |-
        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
        It is used in genesis.proto and query.proto
      type: object
      properties:
        granter:
          type: string
        grantee:
          type: string
        authorization:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          type: string
          format: date-time
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: grants is a list of grants granted to the grantee.
          items:
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants
        RPC method.
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: grants is a list of grants granted by the granter.
          items:
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants
        RPC method.
    cosmos.authz.v1beta1.QueryGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: authorizations is a list of grants granted for grantee by granter.
          items:
            type: object
            properties:
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                title: |-
                  time when the grant will expire and will be pruned. If null, then the grant
                  doesn't have a time expiration (other conditions  in `authorization`
                  may apply to invalidate the grant)
                type: string
                format: date-time
            description: |-
              Grant gives permissions to execute
              the provide method with expiration time.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGrantsResponse is the response type for the Query/Authorizations
        RPC method.
    cosmos.bank.v1beta1.DenomOwner:
      type: object
      properties:
        address:
          type: string
          description: address defines the address that owns a particular denomination.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        DenomOwner defines structure representing an account that owns or holds a
        particular denominated token. It contains the account address and account
        balance of the denominated token.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.DenomUnit:
      type: object
      properties:
        denom:
          type: string
          description: denom represents the string name of the given denom unit (e.g
            uatom).
        exponent:
          type: integer
          description: |-
            exponent represents power of 10 exponent that one must
            raise the base_denom to in order to equal the given DenomUnit's denom
            1 denom = 10^exponent base_denom
            (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
            exponent = 6, thus: 1 atom = 10^6 uatom).
          format: int64
        aliases:
          title: aliases is a list of string aliases for the given denom
          type: array
          items:
            type: string
      description: |-
        DenomUnit represents a struct that describes a given
        denomination unit of the basic token.
    cosmos.bank.v1beta1.Metadata:
      type: object
      properties:
        description:
          type: string
        denom_units:
          title: denom_units represents the list of DenomUnit's for a given coin
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                description: denom represents the string name of the given denom unit
                  (e.g uatom).
              exponent:
                type: integer
                description: |-
                  exponent represents power of 10 exponent that one must
                  raise the base_denom to in order to equal the given DenomUnit's denom
                  1 denom = 10^exponent base_denom
                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                  exponent = 6, thus: 1 atom = 10^6 uatom).
                format: int64
              aliases:
                title: aliases is a list of string aliases for the given denom
                type: array
                items:
                  type: string
            description: |-
              DenomUnit represents a struct that describes a given
              denomination unit of the basic token.
        base:
          type: string
          description: base represents the base denom (should be the DenomUnit with
            exponent = 0).
        display:
          type: string
          description: |-
            display indicates the suggested denom that should be
            displayed in clients.
        name:
          title: 'name defines the name of the token (eg: Cosmos Atom)'
          type: string
          description: 'Since: cosmos-sdk 0.43'
        symbol:
          type: string
          description: |-
            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
            be the same as the display.

            Since: cosmos-sdk 0.43
        uri:
          type: string
          description: |-
            URI to a document (on or off-chain) that contains additional information. Optional.

            Since: cosmos-sdk 0.46
        uri_hash:
          type: string
          description: |-
            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
            the document didn't change. Optional.

            Since: cosmos-sdk 0.46
      description: |-
        Metadata represents a struct that describes
        a basic token.
    cosmos.bank.v1beta1.Params:
      type: object
      properties:
        send_enabled:
          type: array
          description: |-
            Deprecated: Use of SendEnabled in params is deprecated.
            For genesis, use the newly added send_enabled field in the genesis object.
            Storage, lookup, and manipulation of this information is now in the keeper.

            As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        default_send_enabled:
          type: boolean
      description: Params defines the parameters for the bank module.
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          description: balances is the balances of all the coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
        method.
    cosmos.bank.v1beta1.QueryBalanceResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QueryBalanceResponse is the response type for the Query/Balance
        RPC method.
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      type: object
      properties:
        metadata:
          type: object
          properties:
            description:
              type: string
            denom_units:
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: denom represents the string name of the given denom
                      unit (e.g uatom).
                  exponent:
                    type: integer
                    description: |-
                      exponent represents power of 10 exponent that one must
                      raise the base_denom to in order to equal the given DenomUnit's denom
                      1 denom = 10^exponent base_denom
                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                  aliases:
                    title: aliases is a list of string aliases for the given denom
                    type: array
                    items:
                      type: string
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
            base:
              type: string
              description: base represents the base denom (should be the DenomUnit
                with exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
            name:
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
              description: 'Since: cosmos-sdk 0.43'
            symbol:
              type: string
              description: |-
                symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                be the same as the display.

                Since: cosmos-sdk 0.43
            uri:
              type: string
              description: |-
                URI to a document (on or off-chain) that contains additional information. Optional.

                Since: cosmos-sdk 0.46
            uri_hash:
              type: string
              description: |-
                URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                the document didn't change. Optional.

                Since: cosmos-sdk 0.46
          description: |-
            Metadata represents a struct that describes
            a basic token.
      description: |-
        QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryDenomOwnersResponse:
      type: object
      properties:
        denom_owners:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                description: address defines the address that owns a particular denomination.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DenomOwner defines structure representing an account that owns or holds a
              particular denominated token. It contains the account address and account
              balance of the denominated token.

              Since: cosmos-sdk 0.46
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      type: object
      properties:
        metadatas:
          type: array
          description: metadata provides the client information for all the registered
            tokens.
          items:
            type: object
            properties:
              description:
                type: string
              denom_units:
                title: denom_units represents the list of DenomUnit's for a given
                  coin
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: denom represents the string name of the given denom
                        unit (e.g uatom).
                    exponent:
                      type: integer
                      description: |-
                        exponent represents power of 10 exponent that one must
                        raise the base_denom to in order to equal the given DenomUnit's denom
                        1 denom = 10^exponent base_denom
                        (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                        exponent = 6, thus: 1 atom = 10^6 uatom).
                      format: int64
                    aliases:
                      title: aliases is a list of string aliases for the given denom
                      type: array
                      items:
                        type: string
                  description: |-
                    DenomUnit represents a struct that describes a given
                    denomination unit of the basic token.
              base:
                type: string
                description: base represents the base denom (should be the DenomUnit
                  with exponent = 0).
              display:
                type: string
                description: |-
                  display indicates the suggested denom that should be
                  displayed in clients.
              name:
                title: 'name defines the name of the token (eg: Cosmos Atom)'
                type: string
                description: 'Since: cosmos-sdk 0.43'
              symbol:
                type: string
                description: |-
                  symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                  be the same as the display.

                  Since: cosmos-sdk 0.43
              uri:
                type: string
                description: |-
                  URI to a document (on or off-chain) that contains additional information. Optional.

                  Since: cosmos-sdk 0.46
              uri_hash:
                type: string
                description: |-
                  URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                  the document didn't change. Optional.

                  Since: cosmos-sdk 0.46
            description: |-
              Metadata represents a struct that describes
              a basic token.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: array
              description: |-
                Deprecated: Use of SendEnabled in params is deprecated.
                For genesis, use the newly added send_enabled field in the genesis object.
                Storage, lookup, and manipulation of this information is now in the keeper.

                As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                description: |-
                  SendEnabled maps coin denom to a send_enabled status (whether a denom is
                  sendable).
            default_send_enabled:
              type: boolean
          description: Params defines the parameters for the bank module.
      description: QueryParamsResponse defines the response type for querying x/bank
        parameters.
    cosmos.bank.v1beta1.QuerySendEnabledResponse:
      type: object
      properties:
        send_enabled:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response. This field is only
            populated if the denoms field in the request is empty.
      description: |-
        QuerySendEnabledResponse defines the RPC response of a SendEnable query.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
        querying an account's spendable balance for a specific denom.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          description: balances is the spendable balances of all the coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QuerySpendableBalancesResponse defines the gRPC response structure for querying
        an account's spendable balances.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      type: object
      properties:
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
        RPC method.
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      title: |-
        QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
        method
      type: object
      properties:
        supply:
          title: supply is the supply of the coins
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response.

            Since: cosmos-sdk 0.43
    cosmos.bank.v1beta1.SendEnabled:
      type: object
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
    cosmos.base.v1beta1.Coin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
    cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
      type: object
      properties:
        code:
          type: integer
          format: int64
        log:
          type: string
        info:
          type: string
        index:
          type: string
          format: int64
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_ops:
          type: object
          properties:
            ops:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  key:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  data:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  ProofOp defines an operation used for calculating Merkle root. The data could
                  be arbitrary format, providing necessary data for example neighbouring node
                  hash.

                  Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
          description: |-
            ProofOps is Merkle proof defined by the list of ProofOps.

            Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
        height:
          type: string
          format: int64
        codespace:
          type: string
      description: |-
        ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

        Note: This type is a duplicate of the ResponseQuery proto type defined in
        Tendermint.
    cosmos.base.tendermint.v1beta1.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              type: string
              description: |-
                proposer_address is the original block proposer address, formatted as a hex string.
                In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
                for better UX.
          description: Header defines the structure of a Tendermint block header.
        data:
          title: Data contains the set of transactions included in the block
          type: object
          properties:
            txs:
              type: array
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  last_commit_hash:
                                    title: hashes of block data
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  data_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  validators_hash:
                                    title: hashes from the app output from the prev
                                      block
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  next_validators_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  app_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    title: consensus info
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  proposer_address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                description: Header defines the structure of a block
                                  header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    pub_key:
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                      properties:
                                        ed25519:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        secp256k1:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  pub_key:
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                    properties:
                                      ed25519:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      secp256k1:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            pub_key:
                              title: PublicKey defines the keys available for use
                                with Validators
                              type: object
                              properties:
                                ed25519:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                secp256k1:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
      description: |-
        Block is tendermint type Block, with the Header proposer address
        field converted to hex string.
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        block:
          title: 'Deprecated: please use `sdk_block` instead'
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        sdk_block:
          title: 'Since: cosmos-sdk 0.47'
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  type: string
                  description: |-
                    proposer_address is the original block proposer address, formatted as a hex string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
                    for better UX.
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to hex string.
      description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        block:
          title: 'Deprecated: please use `sdk_block` instead'
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        sdk_block:
          title: 'Since: cosmos-sdk 0.47'
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  type: string
                  description: |-
                    proposer_address is the original block proposer address, formatted as a hex string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
                    for better UX.
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to hex string.
      description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      type: object
      properties:
        default_node_info:
          type: object
          properties:
            protocol_version:
              type: object
              properties:
                p2p:
                  type: string
                  format: uint64
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
            default_node_id:
              type: string
            listen_addr:
              type: string
            network:
              type: string
            version:
              type: string
            channels:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            moniker:
              type: string
            other:
              type: object
              properties:
                tx_index:
                  type: string
                rpc_address:
                  type: string
        application_version:
          type: object
          properties:
            name:
              type: string
            app_name:
              type: string
            version:
              type: string
            git_commit:
              type: string
            build_tags:
              type: string
            go_version:
              type: string
            build_deps:
              type: array
              items:
                title: Module is the type for VersionInfo
                type: object
                properties:
                  path:
                    title: module path
                    type: string
                  version:
                    title: module version
                    type: string
                  sum:
                    title: checksum
                    type: string
            cosmos_sdk_version:
              title: 'Since: cosmos-sdk 0.43'
              type: string
          description: VersionInfo is the type for the GetNodeInfoResponse message.
      description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo
        RPC method.
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      type: object
      properties:
        syncing:
          type: boolean
      description: GetSyncingResponse is the response type for the Query/GetSyncing
        RPC method.
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        last_commit_hash:
          title: hashes of block data
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        data_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        validators_hash:
          title: hashes from the app output from the prev block
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        next_validators_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        consensus_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        app_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        last_results_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        evidence_hash:
          title: consensus info
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proposer_address:
          type: string
          description: |-
            proposer_address is the original block proposer address, formatted as a hex string.
            In Tendermint, this type is `bytes`, but in the SDK, we convert it to a hex string
            for better UX.
      description: Header defines the structure of a Tendermint block header.
    cosmos.base.tendermint.v1beta1.Module:
      title: Module is the type for VersionInfo
      type: object
      properties:
        path:
          title: module path
          type: string
        version:
          title: module version
          type: string
        sum:
          title: checksum
          type: string
    cosmos.base.tendermint.v1beta1.ProofOp:
      type: object
      properties:
        type:
          type: string
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        data:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        ProofOp defines an operation used for calculating Merkle root. The data could
        be arbitrary format, providing necessary data for example neighbouring node
        hash.

        Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
    cosmos.base.tendermint.v1beta1.ProofOps:
      type: object
      properties:
        ops:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              key:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              data:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: |-
              ProofOp defines an operation used for calculating Merkle root. The data could
              be arbitrary format, providing necessary data for example neighbouring node
              hash.

              Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
      description: |-
        ProofOps is Merkle proof defined by the list of ProofOps.

        Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
    cosmos.base.tendermint.v1beta1.Validator:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
      description: Validator is the type for the validator-set.
    cosmos.base.tendermint.v1beta1.VersionInfo:
      type: object
      properties:
        name:
          type: string
        app_name:
          type: string
        version:
          type: string
        git_commit:
          type: string
        build_tags:
          type: string
        go_version:
          type: string
        build_deps:
          type: array
          items:
            title: Module is the type for VersionInfo
            type: object
            properties:
              path:
                title: module path
                type: string
              version:
                title: module version
                type: string
              sum:
                title: checksum
                type: string
        cosmos_sdk_version:
          title: 'Since: cosmos-sdk 0.43'
          type: string
      description: VersionInfo is the type for the GetNodeInfoResponse message.
    tendermint.crypto.PublicKey:
      title: PublicKey defines the keys available for use with Validators
      type: object
      properties:
        ed25519:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        secp256k1:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    tendermint.p2p.DefaultNodeInfo:
      type: object
      properties:
        protocol_version:
          type: object
          properties:
            p2p:
              type: string
              format: uint64
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
        default_node_id:
          type: string
        listen_addr:
          type: string
        network:
          type: string
        version:
          type: string
        channels:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        moniker:
          type: string
        other:
          type: object
          properties:
            tx_index:
              type: string
            rpc_address:
              type: string
    tendermint.p2p.DefaultNodeInfoOther:
      type: object
      properties:
        tx_index:
          type: string
        rpc_address:
          type: string
    tendermint.p2p.ProtocolVersion:
      type: object
      properties:
        p2p:
          type: string
          format: uint64
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
    tendermint.types.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a block header.
        data:
          title: Data contains the set of transactions included in the block
          type: object
          properties:
            txs:
              type: array
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  last_commit_hash:
                                    title: hashes of block data
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  data_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  validators_hash:
                                    title: hashes from the app output from the prev
                                      block
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  next_validators_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  app_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    title: consensus info
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  proposer_address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                description: Header defines the structure of a block
                                  header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    pub_key:
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                      properties:
                                        ed25519:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        secp256k1:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  pub_key:
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                    properties:
                                      ed25519:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      secp256k1:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            pub_key:
                              title: PublicKey defines the keys available for use
                                with Validators
                              type: object
                              properties:
                                ed25519:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                secp256k1:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.BlockID:
      title: BlockID
      type: object
      properties:
        hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        part_set_header:
          title: PartsetHeader
          type: object
          properties:
            total:
              type: integer
              format: int64
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
    tendermint.types.BlockIDFlag:
      title: BlockIdFlag indicates which BlcokID the signature is for
      type: string
      default: BLOCK_ID_FLAG_UNKNOWN
      enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
    tendermint.types.Commit:
      type: object
      properties:
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        signatures:
          type: array
          items:
            type: object
            properties:
              block_id_flag:
                title: BlockIdFlag indicates which BlcokID the signature is for
                type: string
                default: BLOCK_ID_FLAG_UNKNOWN
                enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
              validator_address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              timestamp:
                type: string
                format: date-time
              signature:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: CommitSig is a part of the Vote included in a Commit.
      description: Commit contains the evidence that a block was committed by a set
        of validators.
    tendermint.types.CommitSig:
      type: object
      properties:
        block_id_flag:
          title: BlockIdFlag indicates which BlcokID the signature is for
          type: string
          default: BLOCK_ID_FLAG_UNKNOWN
          enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
        validator_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        timestamp:
          type: string
          format: date-time
        signature:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: CommitSig is a part of the Vote included in a Commit.
    tendermint.types.Data:
      title: Data contains the set of transactions included in the block
      type: object
      properties:
        txs:
          type: array
          description: |-
            Txs that will be applied by state @ block.Height+1.
            NOTE: not all txs here are valid.  We're just agreeing on the order first.
            This means that block.AppHash does not include these txs.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
    tendermint.types.DuplicateVoteEvidence:
      type: object
      properties:
        vote_a:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        vote_b:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        total_voting_power:
          type: string
          format: int64
        validator_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: DuplicateVoteEvidence contains evidence of a validator signed two
        conflicting votes.
    tendermint.types.Evidence:
      type: object
      properties:
        duplicate_vote_evidence:
          type: object
          properties:
            vote_a:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            vote_b:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            total_voting_power:
              type: string
              format: int64
            validator_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: DuplicateVoteEvidence contains evidence of a validator signed
            two conflicting votes.
        light_client_attack_evidence:
          type: object
          properties:
            conflicting_block:
              type: object
              properties:
                signed_header:
                  type: object
                  properties:
                    header:
                      type: object
                      properties:
                        version:
                          title: basic block info
                          type: object
                          properties:
                            block:
                              type: string
                              format: uint64
                            app:
                              type: string
                              format: uint64
                          description: |-
                            Consensus captures the consensus rules for processing a block in the blockchain,
                            including all blockchain data structures and the rules of the application's
                            state transition machine.
                        chain_id:
                          type: string
                        height:
                          type: string
                          format: int64
                        time:
                          type: string
                          format: date-time
                        last_block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                        last_commit_hash:
                          title: hashes of block data
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        data_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        validators_hash:
                          title: hashes from the app output from the prev block
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        next_validators_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        consensus_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        app_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        last_results_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        evidence_hash:
                          title: consensus info
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        proposer_address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      description: Header defines the structure of a block header.
                    commit:
                      type: object
                      properties:
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                        signatures:
                          type: array
                          items:
                            type: object
                            properties:
                              block_id_flag:
                                title: BlockIdFlag indicates which BlcokID the signature
                                  is for
                                type: string
                                default: BLOCK_ID_FLAG_UNKNOWN
                                enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              timestamp:
                                type: string
                                format: date-time
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: CommitSig is a part of the Vote included
                              in a Commit.
                      description: Commit contains the evidence that a block was committed
                        by a set of validators.
                validator_set:
                  type: object
                  properties:
                    validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          pub_key:
                            title: PublicKey defines the keys available for use with
                              Validators
                            type: object
                            properties:
                              ed25519:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              secp256k1:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    proposer:
                      type: object
                      properties:
                        address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            secp256k1:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                    total_voting_power:
                      type: string
                      format: int64
            common_height:
              type: string
              format: int64
            byzantine_validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      secp256k1:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            total_voting_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: LightClientAttackEvidence contains evidence of a set of validators
            attempting to mislead a light client.
    tendermint.types.EvidenceList:
      type: object
      properties:
        evidence:
          type: array
          items:
            type: object
            properties:
              duplicate_vote_evidence:
                type: object
                properties:
                  vote_a:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  vote_b:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  total_voting_power:
                    type: string
                    format: int64
                  validator_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: DuplicateVoteEvidence contains evidence of a validator
                  signed two conflicting votes.
              light_client_attack_evidence:
                type: object
                properties:
                  conflicting_block:
                    type: object
                    properties:
                      signed_header:
                        type: object
                        properties:
                          header:
                            type: object
                            properties:
                              version:
                                title: basic block info
                                type: object
                                properties:
                                  block:
                                    type: string
                                    format: uint64
                                  app:
                                    type: string
                                    format: uint64
                                description: |-
                                  Consensus captures the consensus rules for processing a block in the blockchain,
                                  including all blockchain data structures and the rules of the application's
                                  state transition machine.
                              chain_id:
                                type: string
                              height:
                                type: string
                                format: int64
                              time:
                                type: string
                                format: date-time
                              last_block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              last_commit_hash:
                                title: hashes of block data
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              data_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validators_hash:
                                title: hashes from the app output from the prev block
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              next_validators_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              consensus_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              app_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              last_results_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              evidence_hash:
                                title: consensus info
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              proposer_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: Header defines the structure of a block header.
                          commit:
                            type: object
                            properties:
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              signatures:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    block_id_flag:
                                      title: BlockIdFlag indicates which BlcokID the
                                        signature is for
                                      type: string
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                    validator_address:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    timestamp:
                                      type: string
                                      format: date-time
                                    signature:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                  description: CommitSig is a part of the Vote included
                                    in a Commit.
                            description: Commit contains the evidence that a block
                              was committed by a set of validators.
                      validator_set:
                        type: object
                        properties:
                          validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          proposer:
                            type: object
                            properties:
                              address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              pub_key:
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                                properties:
                                  ed25519:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  secp256k1:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                          total_voting_power:
                            type: string
                            format: int64
                  common_height:
                    type: string
                    format: int64
                  byzantine_validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            secp256k1:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                  total_voting_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: LightClientAttackEvidence contains evidence of a set
                  of validators attempting to mislead a light client.
    tendermint.types.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        last_commit_hash:
          title: hashes of block data
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        data_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        validators_hash:
          title: hashes from the app output from the prev block
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        next_validators_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        consensus_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        app_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        last_results_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        evidence_hash:
          title: consensus info
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proposer_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: Header defines the structure of a block header.
    tendermint.types.LightBlock:
      type: object
      properties:
        signed_header:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        validator_set:
          type: object
          properties:
            validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      secp256k1:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            proposer:
              type: object
              properties:
                address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                pub_key:
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                  properties:
                    ed25519:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    secp256k1:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
            total_voting_power:
              type: string
              format: int64
    tendermint.types.LightClientAttackEvidence:
      type: object
      properties:
        conflicting_block:
          type: object
          properties:
            signed_header:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      title: basic block info
                      type: object
                      properties:
                        block:
                          type: string
                          format: uint64
                        app:
                          type: string
                          format: uint64
                      description: |-
                        Consensus captures the consensus rules for processing a block in the blockchain,
                        including all blockchain data structures and the rules of the application's
                        state transition machine.
                    chain_id:
                      type: string
                    height:
                      type: string
                      format: int64
                    time:
                      type: string
                      format: date-time
                    last_block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                    last_commit_hash:
                      title: hashes of block data
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    data_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    validators_hash:
                      title: hashes from the app output from the prev block
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    next_validators_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    consensus_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    app_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    last_results_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    evidence_hash:
                      title: consensus info
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    proposer_address:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                  description: Header defines the structure of a block header.
                commit:
                  type: object
                  properties:
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                    signatures:
                      type: array
                      items:
                        type: object
                        properties:
                          block_id_flag:
                            title: BlockIdFlag indicates which BlcokID the signature
                              is for
                            type: string
                            default: BLOCK_ID_FLAG_UNKNOWN
                            enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          timestamp:
                            type: string
                            format: date-time
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: CommitSig is a part of the Vote included in a
                          Commit.
                  description: Commit contains the evidence that a block was committed
                    by a set of validators.
            validator_set:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      pub_key:
                        title: PublicKey defines the keys available for use with Validators
                        type: object
                        properties:
                          ed25519:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          secp256k1:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                proposer:
                  type: object
                  properties:
                    address:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    pub_key:
                      title: PublicKey defines the keys available for use with Validators
                      type: object
                      properties:
                        ed25519:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        secp256k1:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                total_voting_power:
                  type: string
                  format: int64
        common_height:
          type: string
          format: int64
        byzantine_validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Validators
                type: object
                properties:
                  ed25519:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  secp256k1:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        total_voting_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: LightClientAttackEvidence contains evidence of a set of validators
        attempting to mislead a light client.
    tendermint.types.PartSetHeader:
      title: PartsetHeader
      type: object
      properties:
        total:
          type: integer
          format: int64
        hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    tendermint.types.SignedHeader:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a block header.
        commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.SignedMsgType:
      type: string
      description: |-
        SignedMsgType is a type of signed message in the consensus.

         - SIGNED_MSG_TYPE_PREVOTE: Votes
         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
      default: SIGNED_MSG_TYPE_UNKNOWN
      enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
    tendermint.types.Validator:
      type: object
      properties:
        address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        pub_key:
          title: PublicKey defines the keys available for use with Validators
          type: object
          properties:
            ed25519:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            secp256k1:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
    tendermint.types.ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Validators
                type: object
                properties:
                  ed25519:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  secp256k1:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        proposer:
          type: object
          properties:
            address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            pub_key:
              title: PublicKey defines the keys available for use with Validators
              type: object
              properties:
                ed25519:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                secp256k1:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
        total_voting_power:
          type: string
          format: int64
    tendermint.types.Vote:
      type: object
      properties:
        type:
          type: string
          description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          default: SIGNED_MSG_TYPE_UNKNOWN
          enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        timestamp:
          type: string
          format: date-time
        validator_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        validator_index:
          type: integer
          format: int32
        signature:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        Vote represents a prevote, precommit, or commit vote from validators for
        consensus.
    tendermint.version.Consensus:
      type: object
      properties:
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
      description: |-
        Consensus captures the consensus rules for processing a block in the blockchain,
        including all blockchain data structures and the rules of the application's
        state transition machine.
    cosmos.crosschain.v1.Params:
      type: object
      properties:
        init_module_balance:
          title: initial balance to mint for crosschain module when the chain starts
          type: string
      description: Params holds parameters for the cross chain module.
    cosmos.crosschain.v1.QueryCrossChainPackageResponse:
      type: object
      properties:
        package:
          title: content of the cross chain package
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: QueryCrossChainPackageResponse is the response type for the Query/CrossChainPackage
        RPC method.
    cosmos.crosschain.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            init_module_balance:
              title: initial balance to mint for crosschain module when the chain
                starts
              type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.crosschain.v1.QueryReceiveSequenceResponse:
      type: object
      properties:
        sequence:
          title: sequence of the cross chain package
          type: string
          format: uint64
      description: QuerySendSequenceResponse is the response type for the Query/ReceiveSequence
        RPC method.
    cosmos.crosschain.v1.QuerySendSequenceResponse:
      type: object
      properties:
        sequence:
          title: sequence of the cross chain package
          type: string
          format: uint64
      description: QuerySendSequenceResponse is the response type for the Query/SendSequence
        RPC method.
    cosmos.base.v1beta1.DecCoin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        DecCoin defines a token with a denomination and a decimal amount.

        NOTE: The amount field is an Dec which implements the custom method
        signatures required by gogoproto.
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          type: string
        reward:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        DelegationDelegatorReward represents the properties
        of a delegator's delegation reward.
    cosmos.distribution.v1beta1.Params:
      type: object
      properties:
        community_tax:
          type: string
        base_proposer_reward:
          type: string
          description: |-
            Deprecated: The base_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        bonus_proposer_reward:
          type: string
          description: |-
            Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        withdraw_addr_enabled:
          type: boolean
      description: Params defines the set of params for the distribution module.
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      type: object
      properties:
        pool:
          type: array
          description: pool defines community pool's coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryCommunityPoolResponse is the response type for the Query/CommunityPool
        RPC method.
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines the rewards accrued by a delegation.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationRewardsResponse is the response type for the
        Query/DelegationRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines all the rewards accrued by a delegator.
          items:
            type: object
            properties:
              validator_address:
                type: string
              reward:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    DecCoin defines a token with a denomination and a decimal amount.

                    NOTE: The amount field is an Dec which implements the custom method
                    signatures required by gogoproto.
            description: |-
              DelegationDelegatorReward represents the properties
              of a delegator's delegation reward.
        total:
          type: array
          description: total defines the sum of all the rewards.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationTotalRewardsResponse is the response type for the
        Query/DelegationTotalRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the validators a delegator is delegating
            for.
          items:
            type: string
      description: |-
        QueryDelegatorValidatorsResponse is the response type for the
        Query/DelegatorValidators RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      type: object
      properties:
        withdraw_address:
          type: string
          description: withdraw_address defines the delegator address to query for.
      description: |-
        QueryDelegatorWithdrawAddressResponse is the response type for the
        Query/DelegatorWithdrawAddress RPC method.
    cosmos.distribution.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            community_tax:
              type: string
            base_proposer_reward:
              type: string
              description: |-
                Deprecated: The base_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            bonus_proposer_reward:
              type: string
              description: |-
                Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            withdraw_addr_enabled:
              type: boolean
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      title: |-
        QueryValidatorCommissionResponse is the response type for the
        Query/ValidatorCommission RPC method
      type: object
      properties:
        commission:
          type: object
          properties:
            commission:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: commission defines the commission the validator received.
    cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the validator operator address.
        self_bond_rewards:
          type: array
          description: self_bond_rewards defines the self delegations rewards.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
        commission:
          type: array
          description: commission defines the commission the validator received.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: QueryValidatorDistributionInfoResponse is the response type for
        the Query/ValidatorDistributionInfo RPC method.
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      type: object
      properties:
        rewards:
          type: object
          properties:
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: |-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
            for a validator inexpensive to track, allows simple sanity checks.
      description: |-
        QueryValidatorOutstandingRewardsResponse is the response type for the
        Query/ValidatorOutstandingRewards RPC method.
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      type: object
      properties:
        slashes:
          type: array
          description: slashes defines the slashes the validator received.
          items:
            type: object
            properties:
              validator_period:
                type: string
                format: uint64
              fraction:
                type: string
            description: |-
              ValidatorSlashEvent represents a validator slash event.
              Height is implicit within the store key.
              This is needed to calculate appropriate amount of staking tokens
              for delegations which are withdrawn after a slash has occurred.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorSlashesResponse is the response type for the
        Query/ValidatorSlashes RPC method.
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      type: object
      properties:
        commission:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorAccumulatedCommission represents accumulated commission
        for a validator kept as a running counter, can be withdrawn at any time.
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
        for a validator inexpensive to track, allows simple sanity checks.
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      type: object
      properties:
        validator_period:
          type: string
          format: uint64
        fraction:
          type: string
      description: |-
        ValidatorSlashEvent represents a validator slash event.
        Height is implicit within the store key.
        This is needed to calculate appropriate amount of staking tokens
        for delegations which are withdrawn after a slash has occurred.
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      type: object
      properties:
        evidence:
          type: array
          description: evidence returns all evidences.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
        method.
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      type: object
      properties:
        evidence:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryEvidenceResponse is the response type for the Query/Evidence
        RPC method.
    cosmos.feegrant.v1beta1.Grant:
      title: Grant is stored in the KVStore to record a grant with full context
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of
            their funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
        allowance:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: allowance can be any of basic, periodic, allowed fee allowance.
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      type: object
      properties:
        allowance:
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
          properties:
            granter:
              type: string
              description: granter is the address of the user granting an allowance
                of their funds.
            grantee:
              type: string
              description: grantee is the address of the user being granted an allowance
                of another user's funds.
            allowance:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: allowance can be any of basic, periodic, allowed fee allowance.
          description: allowance is a allowance granted for grantee by granter.
      description: QueryAllowanceResponse is the response type for the Query/Allowance
        RPC method.
    cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
      type: object
      properties:
        allowances:
          type: array
          description: allowances that have been issued by the granter.
          items:
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance
                  of their funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: allowance can be any of basic, periodic, allowed fee
                  allowance.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: |-
        QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

        Since: cosmos-sdk 0.46
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      type: object
      properties:
        allowances:
          type: array
          description: allowances are allowance's granted for grantee by granter.
          items:
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance
                  of their funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: allowance can be any of basic, periodic, allowed fee
                  allowance.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryAllowancesResponse is the response type for the Query/Allowances
        RPC method.
    cosmos.gashub.v1beta1.MsgGasParams:
      title: MsgGasParams defines gas consumption for a msg type
      type: object
      properties:
        msg_type_url:
          type: string
        fixed_type:
          type: object
          properties:
            fixed_gas:
              title: fixed_gas is the gas cost for a fixed type msg
              type: string
              format: uint64
          description: fixed_type specifies fixed type gas params.
        grant_type:
          type: object
          properties:
            fixed_gas:
              title: fixed_gas is the base gas cost for a dynamic type msg
              type: string
              format: uint64
            gas_per_item:
              title: gas_per_item is the gas cost for a dynamic type msg per item
              type: string
              format: uint64
          description: grant_type specifies dynamic type gas params for msg/grant.
        multi_send_type:
          type: object
          properties:
            fixed_gas:
              title: fixed_gas is the base gas cost for a dynamic type msg
              type: string
              format: uint64
            gas_per_item:
              title: gas_per_item is the gas cost for a dynamic type msg per item
              type: string
              format: uint64
          description: grant_type specifies dynamic type gas params for msg/multiSend.
        grant_allowance_type:
          type: object
          properties:
            fixed_gas:
              title: fixed_gas is the base gas cost for a dynamic type msg
              type: string
              format: uint64
            gas_per_item:
              title: gas_per_item is the gas cost for a dynamic type msg per item
              type: string
              format: uint64
          description: grant_type specifies dynamic type gas params for msg/grantAllowance.
    cosmos.gashub.v1beta1.MsgGasParams.DynamicGasParams:
      type: object
      properties:
        fixed_gas:
          title: fixed_gas is the base gas cost for a dynamic type msg
          type: string
          format: uint64
        gas_per_item:
          title: gas_per_item is the gas cost for a dynamic type msg per item
          type: string
          format: uint64
      description: DynamicGasParams defines the parameters for dynamic gas type.
    cosmos.gashub.v1beta1.MsgGasParams.FixedGasParams:
      type: object
      properties:
        fixed_gas:
          title: fixed_gas is the gas cost for a fixed type msg
          type: string
          format: uint64
      description: FixedGasParams defines the parameters for fixed gas type.
    cosmos.gashub.v1beta1.Params:
      type: object
      properties:
        max_tx_size:
          type: string
          description: max_tx_size is the maximum size of a transaction's bytes.
          format: uint64
        min_gas_per_byte:
          title: min_gas_per_byte is the minimum gas to be paid per byte of a transaction's
          type: string
          format: uint64
      description: Params defines the parameters for the gashub module.
    cosmos.gashub.v1beta1.QueryMsgGasParamsResponse:
      type: object
      properties:
        msg_gas_params:
          type: array
          items:
            title: MsgGasParams defines gas consumption for a msg type
            type: object
            properties:
              msg_type_url:
                type: string
              fixed_type:
                type: object
                properties:
                  fixed_gas:
                    title: fixed_gas is the gas cost for a fixed type msg
                    type: string
                    format: uint64
                description: fixed_type specifies fixed type gas params.
              grant_type:
                type: object
                properties:
                  fixed_gas:
                    title: fixed_gas is the base gas cost for a dynamic type msg
                    type: string
                    format: uint64
                  gas_per_item:
                    title: gas_per_item is the gas cost for a dynamic type msg per
                      item
                    type: string
                    format: uint64
                description: grant_type specifies dynamic type gas params for msg/grant.
              multi_send_type:
                type: object
                properties:
                  fixed_gas:
                    title: fixed_gas is the base gas cost for a dynamic type msg
                    type: string
                    format: uint64
                  gas_per_item:
                    title: gas_per_item is the gas cost for a dynamic type msg per
                      item
                    type: string
                    format: uint64
                description: grant_type specifies dynamic type gas params for msg/multiSend.
              grant_allowance_type:
                type: object
                properties:
                  fixed_gas:
                    title: fixed_gas is the base gas cost for a dynamic type msg
                    type: string
                    format: uint64
                  gas_per_item:
                    title: gas_per_item is the gas cost for a dynamic type msg per
                      item
                    type: string
                    format: uint64
                description: grant_type specifies dynamic type gas params for msg/grantAllowance.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response. This field is only
            populated if the msg_type_urls field in the request is empty.
      description: QueryMsgGasParamsResponse defines the RPC response of a MsgGasParams
        query.
    cosmos.gashub.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_tx_size:
              type: string
              description: max_tx_size is the maximum size of a transaction's bytes.
              format: uint64
            min_gas_per_byte:
              title: min_gas_per_byte is the minimum gas to be paid per byte of a
                transaction's
              type: string
              format: uint64
          description: Params defines the parameters for the gashub module.
      description: QueryParamsResponse defines the response type for querying x/gashub
        parameters.
    cosmos.gov.v1.Deposit:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        depositor:
          type: string
          description: depositor defines the deposit addresses from the proposals.
        amount:
          type: array
          description: amount to be deposited by depositor.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
    cosmos.gov.v1.DepositParams:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
      description: DepositParams defines the params for deposits on governance proposals.
    cosmos.gov.v1.Params:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
        voting_period:
          type: string
          description: Duration of the voting period.
        quorum:
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
        threshold:
          type: string
          description: 'Minimum proportion of Yes votes for proposal to pass. Default
            value: 0.5.'
        veto_threshold:
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
        min_initial_deposit_ratio:
          type: string
          description: The ratio representing the proportion of the deposit value
            that must be paid at proposal submission.
        burn_vote_quorum:
          title: burn deposits if a proposal does not meet quorum
          type: boolean
        burn_proposal_deposit_prevote:
          title: burn deposits if the proposal does not enter voting period
          type: boolean
        burn_vote_veto:
          title: burn deposits if quorum with vote type no_veto is met
          type: boolean
      description: |-
        Params defines the parameters for the x/gov module.

        Since: cosmos-sdk 0.47
    cosmos.gov.v1.Proposal:
      type: object
      properties:
        id:
          type: string
          description: id defines the unique id of the proposal.
          format: uint64
        messages:
          type: array
          description: messages are the arbitrary messages to be executed if the proposal
            passes.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        status:
          type: string
          description: status defines the proposal status.
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        final_tally_result:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the number of yes votes on a proposal.
            abstain_count:
              type: string
              description: abstain_count is the number of abstain votes on a proposal.
            no_count:
              type: string
              description: no_count is the number of no votes on a proposal.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the number of no with veto votes
                on a proposal.
          description: |-
            final_tally_result is the final tally result of the proposal. When
            querying a proposal via gRPC, this field is not populated until the
            proposal's voting period has ended.
        submit_time:
          type: string
          description: submit_time is the time of proposal submission.
          format: date-time
        deposit_end_time:
          type: string
          description: deposit_end_time is the end time for deposition.
          format: date-time
        total_deposit:
          type: array
          description: total_deposit is the total deposit on the proposal.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        voting_start_time:
          type: string
          description: voting_start_time is the starting time to vote on a proposal.
          format: date-time
        voting_end_time:
          type: string
          description: voting_end_time is the end time of voting on a proposal.
          format: date-time
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the proposal.
        title:
          title: title is the title of the proposal
          type: string
          description: 'Since: cosmos-sdk 0.47'
        summary:
          title: summary is a short summary of the proposal
          type: string
          description: 'Since: cosmos-sdk 0.47'
        proposer:
          title: Proposer is the address of the proposal sumbitter
          type: string
          description: 'Since: cosmos-sdk 0.47'
      description: Proposal defines the core field members of a governance proposal.
    cosmos.gov.v1.ProposalStatus:
      type: string
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      default: PROPOSAL_STATUS_UNSPECIFIED
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    cosmos.gov.v1.QueryDepositResponse:
      type: object
      properties:
        deposit:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            depositor:
              type: string
              description: depositor defines the deposit addresses from the proposals.
            amount:
              type: array
              description: amount to be deposited by depositor.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
      description: QueryDepositResponse is the response type for the Query/Deposit
        RPC method.
    cosmos.gov.v1.QueryDepositsResponse:
      type: object
      properties:
        deposits:
          type: array
          description: deposits defines the requested deposits.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              depositor:
                type: string
                description: depositor defines the deposit addresses from the proposals.
              amount:
                type: array
                description: amount to be deposited by depositor.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
    cosmos.gov.v1.QueryParamsResponse:
      type: object
      properties:
        voting_params:
          type: object
          properties:
            voting_period:
              type: string
              description: Duration of the voting period.
          description: |-
            Deprecated: Prefer to use `params` instead.
            voting_params defines the parameters related to voting.
        deposit_params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
          description: |-
            Deprecated: Prefer to use `params` instead.
            deposit_params defines the parameters related to deposit.
        tally_params:
          type: object
          properties:
            quorum:
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                considered valid.
            threshold:
              type: string
              description: 'Minimum proportion of Yes votes for proposal to pass.
                Default value: 0.5.'
            veto_threshold:
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                vetoed. Default value: 1/3.
          description: |-
            Deprecated: Prefer to use `params` instead.
            tally_params defines the parameters related to tally.
        params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
            voting_period:
              type: string
              description: Duration of the voting period.
            quorum:
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                 considered valid.
            threshold:
              type: string
              description: 'Minimum proportion of Yes votes for proposal to pass.
                Default value: 0.5.'
            veto_threshold:
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                 vetoed. Default value: 1/3.
            min_initial_deposit_ratio:
              type: string
              description: The ratio representing the proportion of the deposit value
                that must be paid at proposal submission.
            burn_vote_quorum:
              title: burn deposits if a proposal does not meet quorum
              type: boolean
            burn_proposal_deposit_prevote:
              title: burn deposits if the proposal does not enter voting period
              type: boolean
            burn_vote_veto:
              title: burn deposits if quorum with vote type no_veto is met
              type: boolean
          description: |-
            params defines all the paramaters of x/gov module.

            Since: cosmos-sdk 0.47
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.gov.v1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            id:
              type: string
              description: id defines the unique id of the proposal.
              format: uint64
            messages:
              type: array
              description: messages are the arbitrary messages to be executed if the
                proposal passes.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            status:
              type: string
              description: status defines the proposal status.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            final_tally_result:
              type: object
              properties:
                yes_count:
                  type: string
                  description: yes_count is the number of yes votes on a proposal.
                abstain_count:
                  type: string
                  description: abstain_count is the number of abstain votes on a proposal.
                no_count:
                  type: string
                  description: no_count is the number of no votes on a proposal.
                no_with_veto_count:
                  type: string
                  description: no_with_veto_count is the number of no with veto votes
                    on a proposal.
              description: |-
                final_tally_result is the final tally result of the proposal. When
                querying a proposal via gRPC, this field is not populated until the
                proposal's voting period has ended.
            submit_time:
              type: string
              description: submit_time is the time of proposal submission.
              format: date-time
            deposit_end_time:
              type: string
              description: deposit_end_time is the end time for deposition.
              format: date-time
            total_deposit:
              type: array
              description: total_deposit is the total deposit on the proposal.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            voting_start_time:
              type: string
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
            voting_end_time:
              type: string
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
            metadata:
              type: string
              description: metadata is any arbitrary metadata attached to the proposal.
            title:
              title: title is the title of the proposal
              type: string
              description: 'Since: cosmos-sdk 0.47'
            summary:
              title: summary is a short summary of the proposal
              type: string
              description: 'Since: cosmos-sdk 0.47'
            proposer:
              title: Proposer is the address of the proposal sumbitter
              type: string
              description: 'Since: cosmos-sdk 0.47'
          description: Proposal defines the core field members of a governance proposal.
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
    cosmos.gov.v1.QueryProposalsResponse:
      type: object
      properties:
        proposals:
          type: array
          description: proposals defines all the requested governance proposals.
          items:
            type: object
            properties:
              id:
                type: string
                description: id defines the unique id of the proposal.
                format: uint64
              messages:
                type: array
                description: messages are the arbitrary messages to be executed if
                  the proposal passes.
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                    value:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                  description: |-
                    `Any` contains an arbitrary serialized protocol buffer message along with a
                    URL that describes the type of the serialized message.

                    Protobuf library provides support to pack/unpack Any values in the form
                    of utility functions or additional generated methods of the Any type.

                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by default use
                    'type.googleapis.com/full.type.name' as the type URL and the unpack
                    methods only use the fully qualified type name after the last '/'
                    in the type URL, for example "foo.bar.com/x/y.z" will yield type
                    name "y.z".


                    JSON

                    The JSON representation of an `Any` value uses the regular
                    representation of the deserialized, embedded message, with an
                    additional field `@type` which contains the type URL. Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom JSON
                    representation, that representation will be embedded adding a field
                    `value` which holds the custom JSON in addition to the `@type`
                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              status:
                type: string
                description: status defines the proposal status.
                default: PROPOSAL_STATUS_UNSPECIFIED
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              final_tally_result:
                type: object
                properties:
                  yes_count:
                    type: string
                    description: yes_count is the number of yes votes on a proposal.
                  abstain_count:
                    type: string
                    description: abstain_count is the number of abstain votes on a
                      proposal.
                  no_count:
                    type: string
                    description: no_count is the number of no votes on a proposal.
                  no_with_veto_count:
                    type: string
                    description: no_with_veto_count is the number of no with veto
                      votes on a proposal.
                description: |-
                  final_tally_result is the final tally result of the proposal. When
                  querying a proposal via gRPC, this field is not populated until the
                  proposal's voting period has ended.
              submit_time:
                type: string
                description: submit_time is the time of proposal submission.
                format: date-time
              deposit_end_time:
                type: string
                description: deposit_end_time is the end time for deposition.
                format: date-time
              total_deposit:
                type: array
                description: total_deposit is the total deposit on the proposal.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
              voting_start_time:
                type: string
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
              voting_end_time:
                type: string
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
              metadata:
                type: string
                description: metadata is any arbitrary metadata attached to the proposal.
              title:
                title: title is the title of the proposal
                type: string
                description: 'Since: cosmos-sdk 0.47'
              summary:
                title: summary is a short summary of the proposal
                type: string
                description: 'Since: cosmos-sdk 0.47'
              proposer:
                title: Proposer is the address of the proposal sumbitter
                type: string
                description: 'Since: cosmos-sdk 0.47'
            description: Proposal defines the core field members of a governance proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
    cosmos.gov.v1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the number of yes votes on a proposal.
            abstain_count:
              type: string
              description: abstain_count is the number of abstain votes on a proposal.
            no_count:
              type: string
              description: no_count is the number of no votes on a proposal.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the number of no with veto votes
                on a proposal.
          description: tally defines the requested tally.
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
    cosmos.gov.v1.QueryVoteResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            voter:
              type: string
              description: voter is the voter address of the proposal.
            options:
              type: array
              description: options is the weighted vote options.
              items:
                type: object
                properties:
                  option:
                    type: string
                    description: option defines the valid vote options, it must not
                      contain duplicate vote options.
                    default: VOTE_OPTION_UNSPECIFIED
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  weight:
                    type: string
                    description: weight is the vote weight associated with the vote
                      option.
                description: WeightedVoteOption defines a unit of vote for vote split.
            metadata:
              type: string
              description: metadata is any  arbitrary metadata to attached to the
                vote.
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    cosmos.gov.v1.QueryVotesResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes defines the queried votes.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              voter:
                type: string
                description: voter is the voter address of the proposal.
              options:
                type: array
                description: options is the weighted vote options.
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: option defines the valid vote options, it must
                        not contain duplicate vote options.
                      default: VOTE_OPTION_UNSPECIFIED
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    weight:
                      type: string
                      description: weight is the vote weight associated with the vote
                        option.
                  description: WeightedVoteOption defines a unit of vote for vote
                    split.
              metadata:
                type: string
                description: metadata is any  arbitrary metadata to attached to the
                  vote.
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesResponse is the response type for the Query/Votes RPC
        method.
    cosmos.gov.v1.TallyParams:
      type: object
      properties:
        quorum:
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
            considered valid.
        threshold:
          type: string
          description: 'Minimum proportion of Yes votes for proposal to pass. Default
            value: 0.5.'
        veto_threshold:
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
            vetoed. Default value: 1/3.
      description: TallyParams defines the params for tallying votes on governance
        proposals.
    cosmos.gov.v1.TallyResult:
      type: object
      properties:
        yes_count:
          type: string
          description: yes_count is the number of yes votes on a proposal.
        abstain_count:
          type: string
          description: abstain_count is the number of abstain votes on a proposal.
        no_count:
          type: string
          description: no_count is the number of no votes on a proposal.
        no_with_veto_count:
          type: string
          description: no_with_veto_count is the number of no with veto votes on a
            proposal.
      description: TallyResult defines a standard tally for a governance proposal.
    cosmos.gov.v1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address of the proposal.
        options:
          type: array
          description: options is the weighted vote options.
          items:
            type: object
            properties:
              option:
                type: string
                description: option defines the valid vote options, it must not contain
                  duplicate vote options.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
                description: weight is the vote weight associated with the vote option.
            description: WeightedVoteOption defines a unit of vote for vote split.
        metadata:
          type: string
          description: metadata is any  arbitrary metadata to attached to the vote.
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
    cosmos.gov.v1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1.VotingParams:
      type: object
      properties:
        voting_period:
          type: string
          description: Duration of the voting period.
      description: VotingParams defines the params for voting on governance proposals.
    cosmos.gov.v1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: option defines the valid vote options, it must not contain
            duplicate vote options.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
          description: weight is the vote weight associated with the vote option.
      description: WeightedVoteOption defines a unit of vote for vote split.
    cosmos.mint.v1beta1.Params:
      type: object
      properties:
        mint_denom:
          title: type of coin to mint
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        blocks_per_year:
          title: expected blocks per year
          type: string
          format: uint64
      description: Params defines the parameters for the x/mint module.
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      type: object
      properties:
        annual_provisions:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: annual_provisions is the current minting annual provisions
            value.
          format: byte
      description: |-
        QueryAnnualProvisionsResponse is the response type for the
        Query/AnnualProvisions RPC method.
    cosmos.mint.v1beta1.QueryInflationResponse:
      type: object
      properties:
        inflation:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: inflation is the current minting inflation value.
          format: byte
      description: |-
        QueryInflationResponse is the response type for the Query/Inflation RPC
        method.
    cosmos.mint.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            mint_denom:
              title: type of coin to mint
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            blocks_per_year:
              title: expected blocks per year
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.oracle.v1.Params:
      type: object
      properties:
        relayer_timeout:
          title: Timeout for the in turn relayer in seconds
          type: string
          format: uint64
        relayer_interval:
          title: RelayInterval is for in-turn relayer in seconds
          type: string
          format: uint64
        relayer_reward_share:
          type: integer
          description: |-
            Reward share for the relayer sends the claim message,
            the other relayers signed the bls message will share the reward evenly.
          format: int64
      description: Params holds parameters for the oracle module.
    cosmos.oracle.v1.QueryInturnRelayerResponse:
      type: object
      properties:
        bls_pub_key:
          type: string
        relay_interval:
          title: RelayInterval holds start and end(exclusive) time of in-turn relayer,
            [start, end)
          type: object
          properties:
            start:
              type: string
              format: uint64
            end:
              type: string
              format: uint64
      description: QueryInturnRelayerResponse is the response type for the Query In-turn
        relayer RPC method.
    cosmos.oracle.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            relayer_timeout:
              title: Timeout for the in turn relayer in seconds
              type: string
              format: uint64
            relayer_interval:
              title: RelayInterval is for in-turn relayer in seconds
              type: string
              format: uint64
            relayer_reward_share:
              type: integer
              description: |-
                Reward share for the relayer sends the claim message,
                the other relayers signed the bls message will share the reward evenly.
              format: int64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.oracle.v1.RelayInterval:
      title: RelayInterval holds start and end(exclusive) time of in-turn relayer,
        [start, end)
      type: object
      properties:
        start:
          type: string
          format: uint64
        end:
          type: string
          format: uint64
    cosmos.slashing.v1beta1.Params:
      type: object
      properties:
        signed_blocks_window:
          type: string
          format: int64
        min_signed_per_window:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        downtime_jail_duration:
          type: string
        slash_fraction_double_sign:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        slash_fraction_downtime:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QueryParamsResponse:
      title: QueryParamsResponse is the response type for the Query/Params RPC method
      type: object
      properties:
        params:
          type: object
          properties:
            signed_blocks_window:
              type: string
              format: int64
            min_signed_per_window:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            downtime_jail_duration:
              type: string
            slash_fraction_double_sign:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            slash_fraction_downtime:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      title: |-
        QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
        method
      type: object
      properties:
        val_signing_info:
          title: val_signing_info is the signing info of requested val cons address
          type: object
          properties:
            address:
              type: string
            start_height:
              title: Height at which validator was first a candidate OR was unjailed
              type: string
              format: int64
            index_offset:
              type: string
              description: |-
                Index which is incremented each time the validator was a bonded
                in a block and may have signed a precommit or not. This in conjunction with the
                `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
              format: int64
            jailed_until:
              type: string
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
            tombstoned:
              type: boolean
              description: |-
                Whether or not a validator has been tombstoned (killed out of validator set). It is set
                once the validator commits an equivocation or for any other configured misbehiavor.
            missed_blocks_counter:
              type: string
              description: |-
                A counter kept to avoid unnecessary array reads.
                Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
              format: int64
          description: |-
            ValidatorSigningInfo defines a validator's signing info for monitoring their
            liveness activity.
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      title: |-
        QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
        method
      type: object
      properties:
        info:
          title: info is the signing info of all validators
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              start_height:
                title: Height at which validator was first a candidate OR was unjailed
                type: string
                format: int64
              index_offset:
                type: string
                description: |-
                  Index which is incremented each time the validator was a bonded
                  in a block and may have signed a precommit or not. This in conjunction with the
                  `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                format: int64
              jailed_until:
                type: string
                description: Timestamp until which the validator is jailed due to
                  liveness downtime.
                format: date-time
              tombstoned:
                type: boolean
                description: |-
                  Whether or not a validator has been tombstoned (killed out of validator set). It is set
                  once the validator commits an equivocation or for any other configured misbehiavor.
              missed_blocks_counter:
                type: string
                description: |-
                  A counter kept to avoid unnecessary array reads.
                  Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                format: int64
            description: |-
              ValidatorSigningInfo defines a validator's signing info for monitoring their
              liveness activity.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      type: object
      properties:
        address:
          type: string
        start_height:
          title: Height at which validator was first a candidate OR was unjailed
          type: string
          format: int64
        index_offset:
          type: string
          description: |-
            Index which is incremented each time the validator was a bonded
            in a block and may have signed a precommit or not. This in conjunction with the
            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
          format: int64
        jailed_until:
          type: string
          description: Timestamp until which the validator is jailed due to liveness
            downtime.
          format: date-time
        tombstoned:
          type: boolean
          description: |-
            Whether or not a validator has been tombstoned (killed out of validator set). It is set
            once the validator commits an equivocation or for any other configured misbehiavor.
        missed_blocks_counter:
          type: string
          description: |-
            A counter kept to avoid unnecessary array reads.
            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
          format: int64
      description: |-
        ValidatorSigningInfo defines a validator's signing info for monitoring their
        liveness activity.
    cosmos.staking.v1beta1.BondStatus:
      type: string
      description: |-
        BondStatus is the status of a validator.

         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
      default: BOND_STATUS_UNSPECIFIED
      enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    cosmos.staking.v1beta1.Commission:
      type: object
      properties:
        commission_rates:
          type: object
          properties:
            rate:
              type: string
              description: rate is the commission rate charged to delegators, as a
                fraction.
            max_rate:
              type: string
              description: max_rate defines the maximum commission rate which validator
                can ever charge, as a fraction.
            max_change_rate:
              type: string
              description: max_change_rate defines the maximum daily increase of the
                validator commission, as a fraction.
          description: commission_rates defines the initial commission rates to be
            used for creating a validator.
        update_time:
          type: string
          description: update_time is the last time the commission rate was changed.
          format: date-time
      description: Commission defines commission parameters for a given validator.
    cosmos.staking.v1beta1.CommissionRates:
      type: object
      properties:
        rate:
          type: string
          description: rate is the commission rate charged to delegators, as a fraction.
        max_rate:
          type: string
          description: max_rate defines the maximum commission rate which validator
            can ever charge, as a fraction.
        max_change_rate:
          type: string
          description: max_change_rate defines the maximum daily increase of the validator
            commission, as a fraction.
      description: |-
        CommissionRates defines the initial commission rates to be used for creating
        a validator.
    cosmos.staking.v1beta1.Delegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        shares:
          type: string
          description: shares define the delegation shares received.
      description: |-
        Delegation represents the bond with tokens held by an account. It is
        owned by one delegator, and is associated with the voting power of one
        validator.
    cosmos.staking.v1beta1.DelegationResponse:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            shares:
              type: string
              description: shares define the delegation shares received.
          description: |-
            Delegation represents the bond with tokens held by an account. It is
            owned by one delegator, and is associated with the voting power of one
            validator.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        DelegationResponse is equivalent to Delegation except that it contains a
        balance in addition to shares which is more suitable for client responses.
    cosmos.staking.v1beta1.Description:
      type: object
      properties:
        moniker:
          type: string
          description: moniker defines a human-readable name for the validator.
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a validator description.
    cosmos.staking.v1beta1.HistoricalInfo:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: prev block info
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a block header.
        valset:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: list of unbonding ids, each uniquely identifing an unbonding
                  of this validator
                type: array
                items:
                  type: string
                  format: uint64
              self_del_address:
                type: string
                description: self_del_address defines the address of the validator
                  for self delegation.
              relayer_address:
                type: string
                description: relayer_address defines the address of the validator's
                  authorized relayer;.
              challenger_address:
                type: string
                description: challenger_address defines the address of the validator's
                  authorized challenger;.
              bls_key:
                title: bls_key defines the bls pubkey of the validator's authorized
                  relayer/challenger/operator;
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
      description: |-
        HistoricalInfo contains header and validator information for a given block.
        It is stored as part of staking module's state, which persists the `n` most
        recent HistoricalInfo
        (`n` is set by the staking module's `historical_entries` parameter).
    cosmos.staking.v1beta1.Params:
      type: object
      properties:
        unbonding_time:
          type: string
          description: unbonding_time is the time duration of unbonding.
        max_validators:
          type: integer
          description: max_validators is the maximum number of validators.
          format: int64
        max_entries:
          type: integer
          description: max_entries is the max entries for either unbonding delegation
            or redelegation (per pair/trio).
          format: int64
        historical_entries:
          type: integer
          description: historical_entries is the number of historical entries to persist.
          format: int64
        bond_denom:
          type: string
          description: bond_denom defines the bondable coin denomination.
        min_commission_rate:
          title: min_commission_rate is the chain-wide minimum commission rate that
            a validator can charge their delegators
          type: string
        min_self_delegation:
          type: string
          description: min_self_delegation defines the minimum self delegation for
            validators.
      description: Params defines the parameters for the x/staking module.
    cosmos.staking.v1beta1.Pool:
      type: object
      properties:
        not_bonded_tokens:
          type: string
        bonded_tokens:
          type: string
      description: |-
        Pool is used for tracking bonded and not-bonded token supply of the bond
        denomination.
    cosmos.staking.v1beta1.QueryDelegationResponse:
      type: object
      properties:
        delegation_response:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: delegator_address is the bech32-encoded address of
                    the delegator.
                validator_address:
                  type: string
                  description: validator_address is the bech32-encoded address of
                    the validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: |-
                Delegation represents the bond with tokens held by an account. It is
                owned by one delegator, and is associated with the voting power of one
                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
          description: |-
            DelegationResponse is equivalent to Delegation except that it contains a
            balance in addition to shares which is more suitable for client responses.
      description: QueryDelegationResponse is response type for the Query/Delegation
        RPC method.
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      type: object
      properties:
        delegation_responses:
          type: array
          description: delegation_responses defines all the delegations' info of a
            delegator.
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorDelegationsResponse is response type for the
        Query/DelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                    unbonding_id:
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                      format: uint64
                    unbonding_on_hold_ref_count:
                      title: Strictly positive if this entry's unbonding has been
                        stopped by external modules
                      type: string
                      format: int64
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryUnbondingDelegatorDelegationsResponse is response type for the
        Query/UnbondingDelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
            unbonding_time:
              type: string
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              title: strictly positive if this validator's unbonding has been stopped
                by external modules
              type: string
              format: int64
            unbonding_ids:
              title: list of unbonding ids, each uniquely identifing an unbonding
                of this validator
              type: array
              items:
                type: string
                format: uint64
            self_del_address:
              type: string
              description: self_del_address defines the address of the validator for
                self delegation.
            relayer_address:
              type: string
              description: relayer_address defines the address of the validator's
                authorized relayer;.
            challenger_address:
              type: string
              description: challenger_address defines the address of the validator's
                authorized challenger;.
            bls_key:
              title: bls_key defines the bls pubkey of the validator's authorized
                relayer/challenger/operator;
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
      description: |-
        QueryDelegatorValidatorResponse response type for the
        Query/DelegatorValidator RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the validators' info of a delegator.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: list of unbonding ids, each uniquely identifing an unbonding
                  of this validator
                type: array
                items:
                  type: string
                  format: uint64
              self_del_address:
                type: string
                description: self_del_address defines the address of the validator
                  for self delegation.
              relayer_address:
                type: string
                description: relayer_address defines the address of the validator's
                  authorized relayer;.
              challenger_address:
                type: string
                description: challenger_address defines the address of the validator's
                  authorized challenger;.
              bls_key:
                title: bls_key defines the bls pubkey of the validator's authorized
                  relayer/challenger/operator;
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorValidatorsResponse is response type for the
        Query/DelegatorValidators RPC method.
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      type: object
      properties:
        hist:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: prev block info
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            valset:
              type: array
              items:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                    description: jailed defined whether the validator has been jailed
                      from bonded status or not.
                  status:
                    type: string
                    description: status is the validator status (bonded/unbonding/unbonded).
                    default: BOND_STATUS_UNSPECIFIED
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                  tokens:
                    type: string
                    description: tokens define the delegated tokens (incl. self-delegation).
                  delegator_shares:
                    type: string
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: moniker defines a human-readable name for the
                          validator.
                      identity:
                        type: string
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: security_contact defines an optional email for
                          security contact.
                      details:
                        type: string
                        description: details define other optional details.
                    description: description defines the description terms for the
                      validator.
                  unbonding_height:
                    type: string
                    description: unbonding_height defines, if unbonding, the height
                      at which this validator has begun unbonding.
                    format: int64
                  unbonding_time:
                    type: string
                    description: unbonding_time defines, if unbonding, the min time
                      for the validator to complete unbonding.
                    format: date-time
                  commission:
                    type: object
                    properties:
                      commission_rates:
                        type: object
                        properties:
                          rate:
                            type: string
                            description: rate is the commission rate charged to delegators,
                              as a fraction.
                          max_rate:
                            type: string
                            description: max_rate defines the maximum commission rate
                              which validator can ever charge, as a fraction.
                          max_change_rate:
                            type: string
                            description: max_change_rate defines the maximum daily
                              increase of the validator commission, as a fraction.
                        description: commission_rates defines the initial commission
                          rates to be used for creating a validator.
                      update_time:
                        type: string
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                    description: commission defines the commission parameters.
                  min_self_delegation:
                    type: string
                    description: |-
                      min_self_delegation is the validator's self declared minimum self delegation.

                      Since: cosmos-sdk 0.46
                  unbonding_on_hold_ref_count:
                    title: strictly positive if this validator's unbonding has been
                      stopped by external modules
                    type: string
                    format: int64
                  unbonding_ids:
                    title: list of unbonding ids, each uniquely identifing an unbonding
                      of this validator
                    type: array
                    items:
                      type: string
                      format: uint64
                  self_del_address:
                    type: string
                    description: self_del_address defines the address of the validator
                      for self delegation.
                  relayer_address:
                    type: string
                    description: relayer_address defines the address of the validator's
                      authorized relayer;.
                  challenger_address:
                    type: string
                    description: challenger_address defines the address of the validator's
                      authorized challenger;.
                  bls_key:
                    title: bls_key defines the bls pubkey of the validator's authorized
                      relayer/challenger/operator;
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  Validator defines a validator, together with the total amount of the
                  Validator's bond shares and their exchange rate to coins. Slashing results in
                  a decrease in the exchange rate, allowing correct calculation of future
                  undelegations without iterating over delegators. When coins are delegated to
                  this validator, the validator is credited with a delegation whose number of
                  bond shares is based on the amount of coins delegated divided by the current
                  exchange rate. Voting power can be calculated as total bonded shares
                  multiplied by exchange rate.
          description: hist defines the historical info at the given height.
      description: |-
        QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
        method.
    cosmos.staking.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            unbonding_time:
              type: string
              description: unbonding_time is the time duration of unbonding.
            max_validators:
              type: integer
              description: max_validators is the maximum number of validators.
              format: int64
            max_entries:
              type: integer
              description: max_entries is the max entries for either unbonding delegation
                or redelegation (per pair/trio).
              format: int64
            historical_entries:
              type: integer
              description: historical_entries is the number of historical entries
                to persist.
              format: int64
            bond_denom:
              type: string
              description: bond_denom defines the bondable coin denomination.
            min_commission_rate:
              title: min_commission_rate is the chain-wide minimum commission rate
                that a validator can charge their delegators
              type: string
            min_self_delegation:
              type: string
              description: min_self_delegation defines the minimum self delegation
                for validators.
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.staking.v1beta1.QueryPoolResponse:
      type: object
      properties:
        pool:
          type: object
          properties:
            not_bonded_tokens:
              type: string
            bonded_tokens:
              type: string
          description: pool defines the pool info.
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      type: object
      properties:
        redelegation_responses:
          type: array
          items:
            type: object
            properties:
              redelegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_src_address:
                    type: string
                    description: validator_src_address is the validator redelegation
                      source operator address.
                  validator_dst_address:
                    type: string
                    description: validator_dst_address is the validator redelegation
                      destination operator address.
                  entries:
                    type: array
                    description: entries are the redelegation entries.
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                        unbonding_id:
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                          format: uint64
                        unbonding_on_hold_ref_count:
                          title: Strictly positive if this entry's unbonding has been
                            stopped by external modules
                          type: string
                          format: int64
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                description: |-
                  Redelegation contains the list of a particular delegator's redelegating bonds
                  from a particular source validator to a particular destination validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    redelegation_entry:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                        unbonding_id:
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                          format: uint64
                        unbonding_on_hold_ref_count:
                          title: Strictly positive if this entry's unbonding has been
                            stopped by external modules
                          type: string
                          format: int64
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                    balance:
                      type: string
                  description: |-
                    RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                    contains a balance in addition to shares which is more suitable for client
                    responses.
            description: |-
              RedelegationResponse is equivalent to a Redelegation except that its entries
              contain a balance in addition to shares which is more suitable for client
              responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryRedelegationsResponse is response type for the Query/Redelegations RPC
        method.
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      type: object
      properties:
        unbond:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            entries:
              type: array
              description: entries are the unbonding delegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the tokens initially scheduled
                      to receive at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
          description: |-
            UnbondingDelegation stores all of a single delegator's unbonding bonds
            for a single validator in an time-ordered list.
      description: |-
        QueryDelegationResponse is response type for the Query/UnbondingDelegation
        RPC method.
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      title: |-
        QueryValidatorDelegationsResponse is response type for the
        Query/ValidatorDelegations RPC method
      type: object
      properties:
        delegation_responses:
          type: array
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.QueryValidatorResponse:
      title: QueryValidatorResponse is response type for the Query/Validator RPC method
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
            unbonding_time:
              type: string
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              title: strictly positive if this validator's unbonding has been stopped
                by external modules
              type: string
              format: int64
            unbonding_ids:
              title: list of unbonding ids, each uniquely identifing an unbonding
                of this validator
              type: array
              items:
                type: string
                format: uint64
            self_del_address:
              type: string
              description: self_del_address defines the address of the validator for
                self delegation.
            relayer_address:
              type: string
              description: relayer_address defines the address of the validator's
                authorized relayer;.
            challenger_address:
              type: string
              description: challenger_address defines the address of the validator's
                authorized challenger;.
            bls_key:
              title: bls_key defines the bls pubkey of the validator's authorized
                relayer/challenger/operator;
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                    unbonding_id:
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                      format: uint64
                    unbonding_on_hold_ref_count:
                      title: Strictly positive if this entry's unbonding has been
                        stopped by external modules
                      type: string
                      format: int64
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorUnbondingDelegationsResponse is response type for the
        Query/ValidatorUnbondingDelegations RPC method.
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      title: QueryValidatorsResponse is response type for the Query/Validators RPC
        method
      type: object
      properties:
        validators:
          type: array
          description: validators contains all the queried validators.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: list of unbonding ids, each uniquely identifing an unbonding
                  of this validator
                type: array
                items:
                  type: string
                  format: uint64
              self_del_address:
                type: string
                description: self_del_address defines the address of the validator
                  for self delegation.
              relayer_address:
                type: string
                description: relayer_address defines the address of the validator's
                  authorized relayer;.
              challenger_address:
                type: string
                description: challenger_address defines the address of the validator's
                  authorized challenger;.
              bls_key:
                title: bls_key defines the bls pubkey of the validator's authorized
                  relayer/challenger/operator;
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_src_address:
          type: string
          description: validator_src_address is the validator redelegation source
            operator address.
        validator_dst_address:
          type: string
          description: validator_dst_address is the validator redelegation destination
            operator address.
        entries:
          type: array
          description: entries are the redelegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height  defines the height which the redelegation
                  took place.
                format: int64
              completion_time:
                type: string
                description: completion_time defines the unix time for redelegation
                  completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the initial balance when redelegation
                  started.
              shares_dst:
                type: string
                description: shares_dst is the amount of destination-validator shares
                  created by redelegation.
              unbonding_id:
                title: Incrementing id that uniquely identifies this entry
                type: string
                format: uint64
              unbonding_on_hold_ref_count:
                title: Strictly positive if this entry's unbonding has been stopped
                  by external modules
                type: string
                format: int64
            description: RedelegationEntry defines a redelegation object with relevant
              metadata.
      description: |-
        Redelegation contains the list of a particular delegator's redelegating bonds
        from a particular source validator to a particular destination validator.
    cosmos.staking.v1beta1.RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height  defines the height which the redelegation
            took place.
          format: int64
        completion_time:
          type: string
          description: completion_time defines the unix time for redelegation completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the initial balance when redelegation
            started.
        shares_dst:
          type: string
          description: shares_dst is the amount of destination-validator shares created
            by redelegation.
        unbonding_id:
          title: Incrementing id that uniquely identifies this entry
          type: string
          format: uint64
        unbonding_on_hold_ref_count:
          title: Strictly positive if this entry's unbonding has been stopped by external
            modules
          type: string
          format: int64
      description: RedelegationEntry defines a redelegation object with relevant metadata.
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      type: object
      properties:
        redelegation_entry:
          type: object
          properties:
            creation_height:
              type: string
              description: creation_height  defines the height which the redelegation
                took place.
              format: int64
            completion_time:
              type: string
              description: completion_time defines the unix time for redelegation
                completion.
              format: date-time
            initial_balance:
              type: string
              description: initial_balance defines the initial balance when redelegation
                started.
            shares_dst:
              type: string
              description: shares_dst is the amount of destination-validator shares
                created by redelegation.
            unbonding_id:
              title: Incrementing id that uniquely identifies this entry
              type: string
              format: uint64
            unbonding_on_hold_ref_count:
              title: Strictly positive if this entry's unbonding has been stopped
                by external modules
              type: string
              format: int64
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
        balance:
          type: string
      description: |-
        RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
        contains a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.RedelegationResponse:
      type: object
      properties:
        redelegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_src_address:
              type: string
              description: validator_src_address is the validator redelegation source
                operator address.
            validator_dst_address:
              type: string
              description: validator_dst_address is the validator redelegation destination
                operator address.
            entries:
              type: array
              description: entries are the redelegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
          description: |-
            Redelegation contains the list of a particular delegator's redelegating bonds
            from a particular source validator to a particular destination validator.
        entries:
          type: array
          items:
            type: object
            properties:
              redelegation_entry:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
              balance:
                type: string
            description: |-
              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
              contains a balance in addition to shares which is more suitable for client
              responses.
      description: |-
        RedelegationResponse is equivalent to a Redelegation except that its entries
        contain a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        entries:
          type: array
          description: entries are the unbonding delegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height is the height which the unbonding took
                  place.
                format: int64
              completion_time:
                type: string
                description: completion_time is the unix time for unbonding completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the tokens initially scheduled
                  to receive at completion.
              balance:
                type: string
                description: balance defines the tokens to receive at completion.
              unbonding_id:
                title: Incrementing id that uniquely identifies this entry
                type: string
                format: uint64
              unbonding_on_hold_ref_count:
                title: Strictly positive if this entry's unbonding has been stopped
                  by external modules
                type: string
                format: int64
            description: UnbondingDelegationEntry defines an unbonding object with
              relevant metadata.
      description: |-
        UnbondingDelegation stores all of a single delegator's unbonding bonds
        for a single validator in an time-ordered list.
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height is the height which the unbonding took place.
          format: int64
        completion_time:
          type: string
          description: completion_time is the unix time for unbonding completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the tokens initially scheduled to receive
            at completion.
        balance:
          type: string
          description: balance defines the tokens to receive at completion.
        unbonding_id:
          title: Incrementing id that uniquely identifies this entry
          type: string
          format: uint64
        unbonding_on_hold_ref_count:
          title: Strictly positive if this entry's unbonding has been stopped by external
            modules
          type: string
          format: int64
      description: UnbondingDelegationEntry defines an unbonding object with relevant
        metadata.
    cosmos.staking.v1beta1.Validator:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the address of the validator's operator;
            bech encoded in JSON.
        consensus_pubkey:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        jailed:
          type: boolean
          description: jailed defined whether the validator has been jailed from bonded
            status or not.
        status:
          type: string
          description: status is the validator status (bonded/unbonding/unbonded).
          default: BOND_STATUS_UNSPECIFIED
          enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
        tokens:
          type: string
          description: tokens define the delegated tokens (incl. self-delegation).
        delegator_shares:
          type: string
          description: delegator_shares defines total shares issued to a validator's
            delegators.
        description:
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: description defines the description terms for the validator.
        unbonding_height:
          type: string
          description: unbonding_height defines, if unbonding, the height at which
            this validator has begun unbonding.
          format: int64
        unbonding_time:
          type: string
          description: unbonding_time defines, if unbonding, the min time for the
            validator to complete unbonding.
          format: date-time
        commission:
          type: object
          properties:
            commission_rates:
              type: object
              properties:
                rate:
                  type: string
                  description: rate is the commission rate charged to delegators,
                    as a fraction.
                max_rate:
                  type: string
                  description: max_rate defines the maximum commission rate which
                    validator can ever charge, as a fraction.
                max_change_rate:
                  type: string
                  description: max_change_rate defines the maximum daily increase
                    of the validator commission, as a fraction.
              description: commission_rates defines the initial commission rates to
                be used for creating a validator.
            update_time:
              type: string
              description: update_time is the last time the commission rate was changed.
              format: date-time
          description: commission defines the commission parameters.
        min_self_delegation:
          type: string
          description: |-
            min_self_delegation is the validator's self declared minimum self delegation.

            Since: cosmos-sdk 0.46
        unbonding_on_hold_ref_count:
          title: strictly positive if this validator's unbonding has been stopped
            by external modules
          type: string
          format: int64
        unbonding_ids:
          title: list of unbonding ids, each uniquely identifing an unbonding of this
            validator
          type: array
          items:
            type: string
            format: uint64
        self_del_address:
          type: string
          description: self_del_address defines the address of the validator for self
            delegation.
        relayer_address:
          type: string
          description: relayer_address defines the address of the validator's authorized
            relayer;.
        challenger_address:
          type: string
          description: challenger_address defines the address of the validator's authorized
            challenger;.
        bls_key:
          title: bls_key defines the bls pubkey of the validator's authorized relayer/challenger/operator;
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        Validator defines a validator, together with the total amount of the
        Validator's bond shares and their exchange rate to coins. Slashing results in
        a decrease in the exchange rate, allowing correct calculation of future
        undelegations without iterating over delegators. When coins are delegated to
        this validator, the validator is credited with a delegation whose number of
        bond shares is based on the amount of coins delegated divided by the current
        exchange rate. Voting power can be calculated as total bonded shares
        multiplied by exchange rate.
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      type: object
      properties:
        msg_index:
          type: integer
          format: int64
        log:
          type: string
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during some
            execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  description: |-
                    Attribute defines an attribute wrapper where the key and value are
                    strings instead of raw bytes.
            description: |-
              StringEvent defines en Event object wrapper where all the attributes
              contain key/value pairs that are strings instead of raw bytes.
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI
        message log.
    cosmos.base.abci.v1beta1.Attribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: |-
        Attribute defines an attribute wrapper where the key and value are
        strings instead of raw bytes.
    cosmos.base.abci.v1beta1.GasInfo:
      type: object
      properties:
        gas_wanted:
          type: string
          description: GasWanted is the maximum units of work we allow this tx to
            perform.
          format: uint64
        gas_used:
          type: string
          description: GasUsed is the amount of gas actually consumed.
          format: uint64
        min_gas_price:
          type: string
          description: MinGasPrice are the min gas price.
      description: GasInfo defines tx execution gas context.
    cosmos.base.abci.v1beta1.Result:
      type: object
      properties:
        data:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            Data is any data returned from message or handler execution. It MUST be
            length prefixed in order to separate data from multiple message executions.
            Deprecated. This field is still populated, but prefer msg_response instead
            because it also contains the Msg response typeURL.
          format: byte
        log:
          type: string
          description: Log contains the log information from message or handler execution.
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during message
            or handler execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
        msg_responses:
          type: array
          description: |-
            msg_responses contains the Msg handler responses type packed in Anys.

            Since: cosmos-sdk 0.46
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: Result is the union of ResponseFormat and ResponseCheckTx.
    cosmos.base.abci.v1beta1.StringEvent:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            description: |-
              Attribute defines an attribute wrapper where the key and value are
              strings instead of raw bytes.
      description: |-
        StringEvent defines en Event object wrapper where all the attributes
        contain key/value pairs that are strings instead of raw bytes.
    cosmos.base.abci.v1beta1.TxResponse:
      type: object
      properties:
        height:
          title: The block height
          type: string
          format: int64
        txhash:
          type: string
          description: The transaction hash.
        codespace:
          title: Namespace for the Code
          type: string
        code:
          type: integer
          description: Response code.
          format: int64
        data:
          type: string
          description: Result bytes, if any.
        raw_log:
          type: string
          description: |-
            The output of the application's logger (raw string). May be
            non-deterministic.
        logs:
          type: array
          description: The output of the application's logger (typed). May be non-deterministic.
          items:
            type: object
            properties:
              msg_index:
                type: integer
                format: int64
              log:
                type: string
              events:
                type: array
                description: |-
                  Events contains a slice of Event objects that were emitted during some
                  execution.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        description: |-
                          Attribute defines an attribute wrapper where the key and value are
                          strings instead of raw bytes.
                  description: |-
                    StringEvent defines en Event object wrapper where all the attributes
                    contain key/value pairs that are strings instead of raw bytes.
            description: ABCIMessageLog defines a structure containing an indexed
              tx ABCI message log.
        info:
          type: string
          description: Additional information. May be non-deterministic.
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction.
          format: int64
        gas_used:
          type: string
          description: Amount of gas consumed by transaction.
          format: int64
        tx:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        timestamp:
          type: string
          description: |-
            Time of the previous block. For heights > 1, it's the weighted median of
            the timestamps of the valid votes in the block.LastCommit. For height == 1,
            it's genesis time.
        events:
          type: array
          description: |-
            Events defines all the events emitted by processing a transaction. Note,
            these events include those emitted by processing all the messages and those
            emitted from the ante. Whereas Logs contains the events, with
            additional metadata, emitted only by processing the messages.

            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
      description: |-
        TxResponse defines a structure containing relevant tx data and metadata. The
        tags are stringified and the log is JSON decoded.
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      type: object
      properties:
        extra_bits_stored:
          type: integer
          format: int64
        elems:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        CompactBitArray is an implementation of a space efficient bit array.
        This is used to ensure that the encoded data takes up a minimal amount of
        space after proto encoding.
        This is not thread safe, and is not intended for concurrent usage.
    cosmos.tx.signing.v1beta1.SignMode:
      type: string
      description: |-
        SignMode represents a signing mode with its own security guarantees.

        This enum should be considered a registry of all known sign modes
        in the Cosmos ecosystem. Apps are not expected to support all known
        sign modes. Apps that would like to support custom  sign modes are
        encouraged to open a small PR against this file to add a new case
        to this SignMode enum describing their sign mode so that different
        apps have a consistent version of this enum.

         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
        rejected.
         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
        verified with raw bytes from Tx.
         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
        human-readable textual representation on top of the binary representation
        from SIGN_MODE_DIRECT. It is currently not supported.
         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
        SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
        require signers signing over other signers' `signer_info`. It also allows
        for adding Tips in transactions.

        Since: cosmos-sdk 0.46
         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
        Amino JSON and will be removed in the future.
         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

        Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
        but is not implemented on the SDK by default. To enable EIP-191, you need
        to pass a custom `TxConfig` that has an implementation of
        `SignModeHandler` for EIP-191. The SDK may decide to fully support
        EIP-191 in the future.

        Since: cosmos-sdk 0.45.2
         - SIGN_MODE_EIP_712: SIGN_MODE_EIP_712 specifies the sign mode for EIP 712 signing on the Cosmos
        SDK. Ref: https://eips.ethereum.org/EIPS/eip-712
      default: SIGN_MODE_UNSPECIFIED
      enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_DIRECT_AUX
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
      - SIGN_MODE_EIP_712
    cosmos.tx.v1beta1.AuthInfo:
      type: object
      properties:
        signer_infos:
          type: array
          description: |-
            signer_infos defines the signing modes for the required signers. The number
            and order of elements must match the required signers from TxBody's
            messages. The first element is the primary signer and the one which pays
            the fee.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.SignerInfo'
        fee:
          type: object
          properties:
            amount:
              title: amount is the amount of coins to be paid as a fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            gas_limit:
              title: |-
                gas_limit is the maximum gas that can be used in transaction processing
                before an out of gas error occurs
              type: string
              format: uint64
            payer:
              type: string
              description: |-
                if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
                the payer must be a tx signer (and thus have signed this field in AuthInfo).
                setting this field does *not* change the ordering of required signers for the transaction.
            granter:
              title: |-
                if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
                not support fee grants, this will fail
              type: string
          description: |-
            Fee is the fee and gas limit for the transaction. The first signer is the
            primary signer and the one which pays the fee. The fee can be calculated
            based on the cost of evaluating the body and doing signature verification
            of the signers. This can be estimated via simulation.
        tip:
          type: object
          properties:
            amount:
              title: amount is the amount of the tip
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            tipper:
              title: tipper is the address of the account paying for the tip
              type: string
          description: |-
            Tip is the optional tip used for transactions fees paid in another denom.

            This field is ignored if the chain didn't enable tips, i.e. didn't add the
            `TipDecorator` in its posthandler.

            Since: cosmos-sdk 0.46
      description: |-
        AuthInfo describes the fee and signer modes that are used to sign a
        transaction.
    cosmos.tx.v1beta1.BroadcastMode:
      type: string
      description: |-
        BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

         - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
         - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
        BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
         - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
        a CheckTx execution response only.
         - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
        immediately.
      default: BROADCAST_MODE_UNSPECIFIED
      enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    cosmos.tx.v1beta1.BroadcastTxRequest:
      type: object
      properties:
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
        mode:
          type: string
          description: |-
            BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
            BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
            a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
            immediately.
          default: BROADCAST_MODE_UNSPECIFIED
          enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
      description: |-
        BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
        RPC method.
    cosmos.tx.v1beta1.BroadcastTxResponse:
      type: object
      properties:
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: |-
        BroadcastTxResponse is the response type for the
        Service.BroadcastTx method.
    cosmos.tx.v1beta1.Fee:
      type: object
      properties:
        amount:
          title: amount is the amount of coins to be paid as a fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        gas_limit:
          title: |-
            gas_limit is the maximum gas that can be used in transaction processing
            before an out of gas error occurs
          type: string
          format: uint64
        payer:
          type: string
          description: |-
            if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
            the payer must be a tx signer (and thus have signed this field in AuthInfo).
            setting this field does *not* change the ordering of required signers for the transaction.
        granter:
          title: |-
            if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
            to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
            not support fee grants, this will fail
          type: string
      description: |-
        Fee includes the amount of coins paid in fees and the maximum
        gas to be used by the transaction. The ratio yields an effective "gasprice",
        which must be above some miminum to be accepted into the mempool.
    cosmos.tx.v1beta1.GetBlockWithTxsResponse:
      type: object
      properties:
        txs:
          type: array
          description: txs are the transactions in the block.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines a pagination for the response.
      description: |-
        GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.

        Since: cosmos-sdk 0.45.2
    cosmos.tx.v1beta1.GetTxResponse:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: GetTxResponse is the response type for the Service.GetTx method.
    cosmos.tx.v1beta1.GetTxsEventResponse:
      type: object
      properties:
        txs:
          type: array
          description: txs is the list of queried transactions.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_responses:
          type: array
          description: tx_responses is the list of queried TxResponses.
          items:
            type: object
            properties:
              height:
                title: The block height
                type: string
                format: int64
              txhash:
                type: string
                description: The transaction hash.
              codespace:
                title: Namespace for the Code
                type: string
              code:
                type: integer
                description: Response code.
                format: int64
              data:
                type: string
                description: Result bytes, if any.
              raw_log:
                type: string
                description: |-
                  The output of the application's logger (raw string). May be
                  non-deterministic.
              logs:
                type: array
                description: The output of the application's logger (typed). May be
                  non-deterministic.
                items:
                  type: object
                  properties:
                    msg_index:
                      type: integer
                      format: int64
                    log:
                      type: string
                    events:
                      type: array
                      description: |-
                        Events contains a slice of Event objects that were emitted during some
                        execution.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              description: |-
                                Attribute defines an attribute wrapper where the key and value are
                                strings instead of raw bytes.
                        description: |-
                          StringEvent defines en Event object wrapper where all the attributes
                          contain key/value pairs that are strings instead of raw bytes.
                  description: ABCIMessageLog defines a structure containing an indexed
                    tx ABCI message log.
              info:
                type: string
                description: Additional information. May be non-deterministic.
              gas_wanted:
                type: string
                description: Amount of gas requested for transaction.
                format: int64
              gas_used:
                type: string
                description: Amount of gas consumed by transaction.
                format: int64
              tx:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              timestamp:
                type: string
                description: |-
                  Time of the previous block. For heights > 1, it's the weighted median of
                  the timestamps of the valid votes in the block.LastCommit. For height == 1,
                  it's genesis time.
              events:
                type: array
                description: |-
                  Events defines all the events emitted by processing a transaction. Note,
                  these events include those emitted by processing all the messages and those
                  emitted from the ante. Whereas Logs contains the events, with
                  additional metadata, emitted only by processing the messages.

                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                          index:
                            type: boolean
                        description: EventAttribute is a single key-value pair, associated
                          with an event.
                  description: |-
                    Event allows application developers to attach additional information to
                    ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                    Later, transactions may be queried using these events.
            description: |-
              TxResponse defines a structure containing relevant tx data and metadata. The
              tags are stringified and the log is JSON decoded.
        pagination:
          type: object
          properties:
            next_key:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines a pagination for the response.
            Deprecated post v0.46.x: use total instead.
        total:
          title: total is total number of results available
          type: string
          format: uint64
      description: |-
        GetTxsEventResponse is the response type for the Service.TxsByEvents
        RPC method.
    cosmos.tx.v1beta1.ModeInfo:
      type: object
      properties:
        single:
          title: single represents a single signer
          type: object
          properties:
            mode:
              title: mode is the signing mode of the single signer
              type: string
              description: |-
                SignMode represents a signing mode with its own security guarantees.

                This enum should be considered a registry of all known sign modes
                in the Cosmos ecosystem. Apps are not expected to support all known
                sign modes. Apps that would like to support custom  sign modes are
                encouraged to open a small PR against this file to add a new case
                to this SignMode enum describing their sign mode so that different
                apps have a consistent version of this enum.

                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                rejected.
                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                verified with raw bytes from Tx.
                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                human-readable textual representation on top of the binary representation
                from SIGN_MODE_DIRECT. It is currently not supported.
                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
                require signers signing over other signers' `signer_info`. It also allows
                for adding Tips in transactions.

                Since: cosmos-sdk 0.46
                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                Amino JSON and will be removed in the future.
                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

                Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
                but is not implemented on the SDK by default. To enable EIP-191, you need
                to pass a custom `TxConfig` that has an implementation of
                `SignModeHandler` for EIP-191. The SDK may decide to fully support
                EIP-191 in the future.

                Since: cosmos-sdk 0.45.2
                 - SIGN_MODE_EIP_712: SIGN_MODE_EIP_712 specifies the sign mode for EIP 712 signing on the Cosmos
                SDK. Ref: https://eips.ethereum.org/EIPS/eip-712
              default: SIGN_MODE_UNSPECIFIED
              enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_DIRECT_AUX
              - SIGN_MODE_LEGACY_AMINO_JSON
              - SIGN_MODE_EIP_191
              - SIGN_MODE_EIP_712
        multi:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo.Multi'
      description: ModeInfo describes the signing mode of a single or nested multisig
        signer.
    cosmos.tx.v1beta1.ModeInfo.Multi:
      title: Multi is the mode info for a multisig public key
      type: object
      properties:
        bitarray:
          title: bitarray specifies which keys within the multisig are signing
          type: object
          properties:
            extra_bits_stored:
              type: integer
              format: int64
            elems:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            CompactBitArray is an implementation of a space efficient bit array.
            This is used to ensure that the encoded data takes up a minimal amount of
            space after proto encoding.
            This is not thread safe, and is not intended for concurrent usage.
        mode_infos:
          title: |-
            mode_infos is the corresponding modes of the signers of the multisig
            which could include nested multisig public keys
          type: array
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
    cosmos.tx.v1beta1.ModeInfo.Single:
      title: |-
        Single is the mode info for a single signer. It is structured as a message
        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
        future
      type: object
      properties:
        mode:
          title: mode is the signing mode of the single signer
          type: string
          description: |-
            SignMode represents a signing mode with its own security guarantees.

            This enum should be considered a registry of all known sign modes
            in the Cosmos ecosystem. Apps are not expected to support all known
            sign modes. Apps that would like to support custom  sign modes are
            encouraged to open a small PR against this file to add a new case
            to this SignMode enum describing their sign mode so that different
            apps have a consistent version of this enum.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected.
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx.
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation
            from SIGN_MODE_DIRECT. It is currently not supported.
             - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
            SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
            require signers signing over other signers' `signer_info`. It also allows
            for adding Tips in transactions.

            Since: cosmos-sdk 0.46
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future.
             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
            but is not implemented on the SDK by default. To enable EIP-191, you need
            to pass a custom `TxConfig` that has an implementation of
            `SignModeHandler` for EIP-191. The SDK may decide to fully support
            EIP-191 in the future.

            Since: cosmos-sdk 0.45.2
             - SIGN_MODE_EIP_712: SIGN_MODE_EIP_712 specifies the sign mode for EIP 712 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-712
          default: SIGN_MODE_UNSPECIFIED
          enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_DIRECT_AUX
          - SIGN_MODE_LEGACY_AMINO_JSON
          - SIGN_MODE_EIP_191
          - SIGN_MODE_EIP_712
    cosmos.tx.v1beta1.OrderBy:
      title: OrderBy defines the sorting order
      type: string
      description: |-
        - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
         - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
      default: ORDER_BY_UNSPECIFIED
      enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    cosmos.tx.v1beta1.SignerInfo:
      type: object
      properties:
        public_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        mode_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
        sequence:
          type: string
          description: |-
            sequence is the sequence of the account, which describes the
            number of committed transactions signed by a given address. It is used to
            prevent replay attacks.
          format: uint64
      description: |-
        SignerInfo describes the public key and signing mode of a single top-level
        signer.
    cosmos.tx.v1beta1.SimulateRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            tx_bytes is the raw transaction.

            Since: cosmos-sdk 0.43
          format: byte
      description: |-
        SimulateRequest is the request type for the Service.Simulate
        RPC method.
    cosmos.tx.v1beta1.SimulateResponse:
      type: object
      properties:
        gas_info:
          type: object
          properties:
            gas_wanted:
              type: string
              description: GasWanted is the maximum units of work we allow this tx
                to perform.
              format: uint64
            gas_used:
              type: string
              description: GasUsed is the amount of gas actually consumed.
              format: uint64
            min_gas_price:
              type: string
              description: MinGasPrice are the min gas price.
          description: gas_info is the information about gas used in the simulation.
        result:
          type: object
          properties:
            data:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                Data is any data returned from message or handler execution. It MUST be
                length prefixed in order to separate data from multiple message executions.
                Deprecated. This field is still populated, but prefer msg_response instead
                because it also contains the Msg response typeURL.
              format: byte
            log:
              type: string
              description: Log contains the log information from message or handler
                execution.
            events:
              type: array
              description: |-
                Events contains a slice of Event objects that were emitted during message
                or handler execution.
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
            msg_responses:
              type: array
              description: |-
                msg_responses contains the Msg handler responses type packed in Anys.

                Since: cosmos-sdk 0.46
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
          description: result is the result of the simulation.
      description: |-
        SimulateResponse is the response type for the
        Service.SimulateRPC method.
    cosmos.tx.v1beta1.Tip:
      type: object
      properties:
        amount:
          title: amount is the amount of the tip
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        tipper:
          title: tipper is the address of the account paying for the tip
          type: string
      description: |-
        Tip is the tip used for meta-transactions.

        Since: cosmos-sdk 0.46
    cosmos.tx.v1beta1.Tx:
      type: object
      properties:
        body:
          title: body is the processable content of the transaction
          type: object
          properties:
            messages:
              type: array
              description: |-
                messages is a list of messages to be executed. The required signers of
                those messages define the number and order of elements in AuthInfo's
                signer_infos and Tx's signatures. Each required signer address is added to
                the list only the first time it occurs.
                By convention, the first required signer (usually from the first message)
                is referred to as the primary signer and pays the fee for the whole
                transaction.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            memo:
              type: string
              description: |-
                memo is any arbitrary note/comment to be added to the transaction.
                WARNING: in clients, any publicly exposed text should not be called memo,
                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
            timeout_height:
              title: |-
                timeout is the block height after which this transaction will not
                be processed by the chain
              type: string
              format: uint64
            extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, the transaction will be rejected
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            non_critical_extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, they will be ignored
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
          description: TxBody is the body of a transaction that all signers sign over.
        auth_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.AuthInfo'
        signatures:
          type: array
          description: |-
            signatures is a list of signatures that matches the length and order of
            AuthInfo's signer_infos to allow connecting signature meta information like
            public key and signing mode by position.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: Tx is the standard type used for broadcasting transactions.
    cosmos.tx.v1beta1.TxBody:
      type: object
      properties:
        messages:
          type: array
          description: |-
            messages is a list of messages to be executed. The required signers of
            those messages define the number and order of elements in AuthInfo's
            signer_infos and Tx's signatures. Each required signer address is added to
            the list only the first time it occurs.
            By convention, the first required signer (usually from the first message)
            is referred to as the primary signer and pays the fee for the whole
            transaction.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        memo:
          type: string
          description: |-
            memo is any arbitrary note/comment to be added to the transaction.
            WARNING: in clients, any publicly exposed text should not be called memo,
            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
        timeout_height:
          title: |-
            timeout is the block height after which this transaction will not
            be processed by the chain
          type: string
          format: uint64
        extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, the transaction will be rejected
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        non_critical_extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, they will be ignored
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: TxBody is the body of a transaction that all signers sign over.
    cosmos.tx.v1beta1.TxDecodeAminoRequest:
      type: object
      properties:
        amino_binary:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeAminoResponse:
      type: object
      properties:
        amino_json:
          type: string
      description: |-
        TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeRequest:
      type: object
      properties:
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
      description: |-
        TxDecodeRequest is the request type for the Service.TxDecode
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeResponse:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
      description: |-
        TxDecodeResponse is the response type for the
        Service.TxDecode method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeAminoRequest:
      type: object
      properties:
        amino_json:
          type: string
      description: |-
        TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeAminoResponse:
      type: object
      properties:
        amino_binary:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
      description: |-
        TxEncodeRequest is the request type for the Service.TxEncode
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeResponse:
      type: object
      properties:
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: tx_bytes is the encoded transaction bytes.
          format: byte
      description: |-
        TxEncodeResponse is the response type for the
        Service.TxEncode method.

        Since: cosmos-sdk 0.47
    tendermint.abci.Event:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
              index:
                type: boolean
            description: EventAttribute is a single key-value pair, associated with
              an event.
      description: |-
        Event allows application developers to attach additional information to
        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
        Later, transactions may be queried using these events.
    tendermint.abci.EventAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        index:
          type: boolean
      description: EventAttribute is a single key-value pair, associated with an event.
    cosmos.upgrade.v1beta1.ModuleVersion:
      type: object
      properties:
        name:
          title: name of the app module
          type: string
        version:
          title: consensus version of the app module
          type: string
          format: uint64
      description: |-
        ModuleVersion specifies a module and its consensus version.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.Plan:
      type: object
      properties:
        name:
          type: string
          description: |-
            Sets the name for the upgrade. This name will be used by the upgraded
            version of the software to apply any special "on-upgrade" commands during
            the first BeginBlock method after the upgrade is applied. It is also used
            to detect whether a software version can handle a given upgrade. If no
            upgrade handler with this name has been set in the software, it will be
            assumed that the software is out-of-date when the upgrade Time or Height is
            reached and the software will exit.
        height:
          type: string
          description: |-
            The height at which the upgrade must be performed.
            Only used if Time is not set.
          format: int64
        info:
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
          type: string
      description: Plan specifies information about a planned upgrade and when it
        should occur.
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      type: object
      properties:
        height:
          type: string
          description: height is the block height at which the plan was applied.
          format: int64
      description: |-
        QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      type: object
      properties:
        plan:
          type: array
          description: plan is the current upgrade plan.
          items:
            type: object
            properties:
              name:
                type: string
                description: |-
                  Sets the name for the upgrade. This name will be used by the upgraded
                  version of the software to apply any special "on-upgrade" commands during
                  the first BeginBlock method after the upgrade is applied. It is also used
                  to detect whether a software version can handle a given upgrade. If no
                  upgrade handler with this name has been set in the software, it will be
                  assumed that the software is out-of-date when the upgrade Time or Height is
                  reached and the software will exit.
              height:
                type: string
                description: |-
                  The height at which the upgrade must be performed.
                  Only used if Time is not set.
                format: int64
              info:
                title: |-
                  Any application specific upgrade info to be included on-chain
                  such as a git commit that validators could automatically upgrade to
                type: string
            description: Plan specifies information about a planned upgrade and when
              it should occur.
      description: |-
        QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      type: object
      properties:
        module_versions:
          type: array
          description: module_versions is a list of module names with their consensus
            versions.
          items:
            type: object
            properties:
              name:
                title: name of the app module
                type: string
              version:
                title: consensus version of the app module
                type: string
                format: uint64
            description: |-
              ModuleVersion specifies a module and its consensus version.

              Since: cosmos-sdk 0.43
      description: |-
        QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
        RPC method.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          title: 'Since: cosmos-sdk 0.43'
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
        RPC method.
